<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='FAO' inline='true' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FAO' name='textscan.0cbagav12h7cdy1d4j6ey1bx4577'>
            <connection class='textscan' directory='D:/Github/Visualization_with_Tableau/VizChallenge5' filename='FAO.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Area&amp;Continent' name='excel-direct.17ypuc609xqdst1amx3001vp16xe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Github/Visualization_with_Tableau/VizChallenge5/Area&amp;Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FAO.csv].[Area]' />
              <expression op='[FAO Area].[Area]' />
            </expression>
          </clause>
          <relation name='数据透视表' type='pivot'>
            <columns>
              <column datatype='string' name='数据透视表字段名称' />
              <column datatype='integer' name='数据透视表字段值' />
            </columns>
            <tag name='数据透视表字段名称'>
              <value name='[Y1961]' />
              <value name='[Y1962]' />
              <value name='[Y1963]' />
              <value name='[Y1964]' />
              <value name='[Y1965]' />
              <value name='[Y1966]' />
              <value name='[Y1967]' />
              <value name='[Y1968]' />
              <value name='[Y1969]' />
              <value name='[Y1970]' />
              <value name='[Y1971]' />
              <value name='[Y1972]' />
              <value name='[Y1973]' />
              <value name='[Y1974]' />
              <value name='[Y1975]' />
              <value name='[Y1976]' />
              <value name='[Y1977]' />
              <value name='[Y1978]' />
              <value name='[Y1979]' />
              <value name='[Y1980]' />
              <value name='[Y1981]' />
              <value name='[Y1982]' />
              <value name='[Y1983]' />
              <value name='[Y1984]' />
              <value name='[Y1985]' />
              <value name='[Y1986]' />
              <value name='[Y1987]' />
              <value name='[Y1988]' />
              <value name='[Y1989]' />
              <value name='[Y1990]' />
              <value name='[Y1991]' />
              <value name='[Y1992]' />
              <value name='[Y1993]' />
              <value name='[Y1994]' />
              <value name='[Y1995]' />
              <value name='[Y1996]' />
              <value name='[Y1997]' />
              <value name='[Y1998]' />
              <value name='[Y1999]' />
              <value name='[Y2000]' />
              <value name='[Y2001]' />
              <value name='[Y2002]' />
              <value name='[Y2003]' />
              <value name='[Y2004]' />
              <value name='[Y2005]' />
              <value name='[Y2006]' />
              <value name='[Y2007]' />
              <value name='[Y2008]' />
              <value name='[Y2009]' />
              <value name='[Y2010]' />
              <value name='[Y2011]' />
              <value name='[Y2012]' />
              <value name='[Y2013]' />
            </tag>
            <groups>
              <group name='数据透视表字段值'>
                <field name='[FAO.csv].[Y1961]' />
                <field name='[FAO.csv].[Y1962]' />
                <field name='[FAO.csv].[Y1963]' />
                <field name='[FAO.csv].[Y1964]' />
                <field name='[FAO.csv].[Y1965]' />
                <field name='[FAO.csv].[Y1966]' />
                <field name='[FAO.csv].[Y1967]' />
                <field name='[FAO.csv].[Y1968]' />
                <field name='[FAO.csv].[Y1969]' />
                <field name='[FAO.csv].[Y1970]' />
                <field name='[FAO.csv].[Y1971]' />
                <field name='[FAO.csv].[Y1972]' />
                <field name='[FAO.csv].[Y1973]' />
                <field name='[FAO.csv].[Y1974]' />
                <field name='[FAO.csv].[Y1975]' />
                <field name='[FAO.csv].[Y1976]' />
                <field name='[FAO.csv].[Y1977]' />
                <field name='[FAO.csv].[Y1978]' />
                <field name='[FAO.csv].[Y1979]' />
                <field name='[FAO.csv].[Y1980]' />
                <field name='[FAO.csv].[Y1981]' />
                <field name='[FAO.csv].[Y1982]' />
                <field name='[FAO.csv].[Y1983]' />
                <field name='[FAO.csv].[Y1984]' />
                <field name='[FAO.csv].[Y1985]' />
                <field name='[FAO.csv].[Y1986]' />
                <field name='[FAO.csv].[Y1987]' />
                <field name='[FAO.csv].[Y1988]' />
                <field name='[FAO.csv].[Y1989]' />
                <field name='[FAO.csv].[Y1990]' />
                <field name='[FAO.csv].[Y1991]' />
                <field name='[FAO.csv].[Y1992]' />
                <field name='[FAO.csv].[Y1993]' />
                <field name='[FAO.csv].[Y1994]' />
                <field name='[FAO.csv].[Y1995]' />
                <field name='[FAO.csv].[Y1996]' />
                <field name='[FAO.csv].[Y1997]' />
                <field name='[FAO.csv].[Y1998]' />
                <field name='[FAO.csv].[Y1999]' />
                <field name='[FAO.csv].[Y2000]' />
                <field name='[FAO.csv].[Y2001]' />
                <field name='[FAO.csv].[Y2002]' />
                <field name='[FAO.csv].[Y2003]' />
                <field name='[FAO.csv].[Y2004]' />
                <field name='[FAO.csv].[Y2005]' />
                <field name='[FAO.csv].[Y2006]' />
                <field name='[FAO.csv].[Y2007]' />
                <field name='[FAO.csv].[Y2008]' />
                <field name='[FAO.csv].[Y2009]' />
                <field name='[FAO.csv].[Y2010]' />
                <field name='[FAO.csv].[Y2011]' />
                <field name='[FAO.csv].[Y2012]' />
                <field name='[FAO.csv].[Y2013]' />
              </group>
            </groups>
            <relation connection='textscan.0cbagav12h7cdy1d4j6ey1bx4577' name='FAO.csv' table='[FAO#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                <column datatype='string' name='Area Abbreviation' ordinal='0' />
                <column datatype='integer' name='Area Code' ordinal='1' />
                <column datatype='string' name='Area' ordinal='2' />
                <column datatype='integer' name='Item Code' ordinal='3' />
                <column datatype='string' name='Item' ordinal='4' />
                <column datatype='integer' name='Element Code' ordinal='5' />
                <column datatype='string' name='Element' ordinal='6' />
                <column datatype='string' name='Unit' ordinal='7' />
                <column datatype='real' name='latitude' ordinal='8' />
                <column datatype='real' name='longitude' ordinal='9' />
                <column datatype='integer' name='Y1961' ordinal='10' />
                <column datatype='integer' name='Y1962' ordinal='11' />
                <column datatype='integer' name='Y1963' ordinal='12' />
                <column datatype='integer' name='Y1964' ordinal='13' />
                <column datatype='integer' name='Y1965' ordinal='14' />
                <column datatype='integer' name='Y1966' ordinal='15' />
                <column datatype='integer' name='Y1967' ordinal='16' />
                <column datatype='integer' name='Y1968' ordinal='17' />
                <column datatype='integer' name='Y1969' ordinal='18' />
                <column datatype='integer' name='Y1970' ordinal='19' />
                <column datatype='integer' name='Y1971' ordinal='20' />
                <column datatype='integer' name='Y1972' ordinal='21' />
                <column datatype='integer' name='Y1973' ordinal='22' />
                <column datatype='integer' name='Y1974' ordinal='23' />
                <column datatype='integer' name='Y1975' ordinal='24' />
                <column datatype='integer' name='Y1976' ordinal='25' />
                <column datatype='integer' name='Y1977' ordinal='26' />
                <column datatype='integer' name='Y1978' ordinal='27' />
                <column datatype='integer' name='Y1979' ordinal='28' />
                <column datatype='integer' name='Y1980' ordinal='29' />
                <column datatype='integer' name='Y1981' ordinal='30' />
                <column datatype='integer' name='Y1982' ordinal='31' />
                <column datatype='integer' name='Y1983' ordinal='32' />
                <column datatype='integer' name='Y1984' ordinal='33' />
                <column datatype='integer' name='Y1985' ordinal='34' />
                <column datatype='integer' name='Y1986' ordinal='35' />
                <column datatype='integer' name='Y1987' ordinal='36' />
                <column datatype='integer' name='Y1988' ordinal='37' />
                <column datatype='integer' name='Y1989' ordinal='38' />
                <column datatype='integer' name='Y1990' ordinal='39' />
                <column datatype='integer' name='Y1991' ordinal='40' />
                <column datatype='integer' name='Y1992' ordinal='41' />
                <column datatype='integer' name='Y1993' ordinal='42' />
                <column datatype='integer' name='Y1994' ordinal='43' />
                <column datatype='integer' name='Y1995' ordinal='44' />
                <column datatype='integer' name='Y1996' ordinal='45' />
                <column datatype='integer' name='Y1997' ordinal='46' />
                <column datatype='integer' name='Y1998' ordinal='47' />
                <column datatype='integer' name='Y1999' ordinal='48' />
                <column datatype='integer' name='Y2000' ordinal='49' />
                <column datatype='integer' name='Y2001' ordinal='50' />
                <column datatype='integer' name='Y2002' ordinal='51' />
                <column datatype='integer' name='Y2003' ordinal='52' />
                <column datatype='integer' name='Y2004' ordinal='53' />
                <column datatype='integer' name='Y2005' ordinal='54' />
                <column datatype='integer' name='Y2006' ordinal='55' />
                <column datatype='integer' name='Y2007' ordinal='56' />
                <column datatype='integer' name='Y2008' ordinal='57' />
                <column datatype='integer' name='Y2009' ordinal='58' />
                <column datatype='integer' name='Y2010' ordinal='59' />
                <column datatype='integer' name='Y2011' ordinal='60' />
                <column datatype='integer' name='Y2012' ordinal='61' />
                <column datatype='integer' name='Y2013' ordinal='62' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.17ypuc609xqdst1amx3001vp16xe' name='FAO Area' table='[&apos;FAO Area$&apos;]' type='table'>
            <columns gridOrigin='A1:B175:no:A1:B175:0' header='yes' outcome='6'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Area (FAO Area)]' value='[FAO Area].[Area]' />
          <map key='[Area Abbreviation]' value='[FAO.csv].[Area Abbreviation]' />
          <map key='[Area Code]' value='[FAO.csv].[Area Code]' />
          <map key='[Area]' value='[FAO.csv].[Area]' />
          <map key='[Continent]' value='[FAO Area].[Continent]' />
          <map key='[Element Code]' value='[FAO.csv].[Element Code]' />
          <map key='[Element]' value='[FAO.csv].[Element]' />
          <map key='[Item Code]' value='[FAO.csv].[Item Code]' />
          <map key='[Item]' value='[FAO.csv].[Item]' />
          <map key='[Unit]' value='[FAO.csv].[Unit]' />
          <map key='[latitude]' value='[FAO.csv].[latitude]' />
          <map key='[longitude]' value='[FAO.csv].[longitude]' />
          <map key='[数据透视表字段值]' value='[数据透视表].[数据透视表字段值]' />
          <map key='[数据透视表字段名称]' value='[数据透视表].[数据透视表字段名称]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Abbreviation]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Abbreviation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Element Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Element]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段名称</remote-name>
            <remote-type>129</remote-type>
            <local-name>[数据透视表字段名称]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段名称</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段值</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数据透视表字段值]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段值</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (FAO Area)]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B175:no:A1:B175:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' value='Rank' />
        </aliases>
      </column>
      <column datatype='string' hidden='true' name='[Area (FAO Area)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
        </semantic-values>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Element Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Element]' role='dimension' type='nominal' />
      <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Item]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Alcoholic Beverages&quot;</value>
            <value>&quot;Beer&quot;</value>
            <value>&quot;Beverages, Alcoholic&quot;</value>
            <value>&quot;Beverages, Fermented&quot;</value>
            <value>&quot;Coffee and products&quot;</value>
            <value>&quot;Stimulants&quot;</value>
            <value>&quot;Tea (including mate)&quot;</value>
            <value>&quot;Wine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats and oil&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Butter, Ghee&quot;</value>
            <value>&quot;Coconut Oil&quot;</value>
            <value>&quot;Cottonseed Oil&quot;</value>
            <value>&quot;Cream&quot;</value>
            <value>&quot;Fats, Animals, Raw&quot;</value>
            <value>&quot;Fish, Body Oil&quot;</value>
            <value>&quot;Fish, Liver Oil&quot;</value>
            <value>&quot;Groundnut Oil&quot;</value>
            <value>&quot;Maize Germ Oil&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Oilcrops Oil, Other&quot;</value>
            <value>&quot;Oilcrops, Other&quot;</value>
            <value>&quot;Olive Oil&quot;</value>
            <value>&quot;Palm Oil&quot;</value>
            <value>&quot;Palmkernel Oil&quot;</value>
            <value>&quot;Rape and Mustard Oil&quot;</value>
            <value>&quot;Ricebran Oil&quot;</value>
            <value>&quot;Sesameseed Oil&quot;</value>
            <value>&quot;Soyabean Oil&quot;</value>
            <value>&quot;Sunflowerseed Oil&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
            <value>&quot;Aquatic Animals, Others&quot;</value>
            <value>&quot;Aquatic Products, Other&quot;</value>
            <value>&quot;Cephalopods&quot;</value>
            <value>&quot;Crustaceans&quot;</value>
            <value>&quot;Demersal Fish&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Freshwater Fish&quot;</value>
            <value>&quot;Marine Fish, Other&quot;</value>
            <value>&quot;Molluscs, Other&quot;</value>
            <value>&quot;Pelagic Fish&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruits&quot;'>
            <value>&quot;Apples and products&quot;</value>
            <value>&quot;Bananas&quot;</value>
            <value>&quot;Citrus, Other&quot;</value>
            <value>&quot;Coconuts - Incl Copra&quot;</value>
            <value>&quot;Dates&quot;</value>
            <value>&quot;Fruits - Excluding Wine&quot;</value>
            <value>&quot;Fruits, Other&quot;</value>
            <value>&quot;Grapefruit and products&quot;</value>
            <value>&quot;Grapes and products (excl wine)&quot;</value>
            <value>&quot;Lemons, Limes and products&quot;</value>
            <value>&quot;Olives (including preserved)&quot;</value>
            <value>&quot;Oranges, Mandarines&quot;</value>
            <value>&quot;Pineapples and products&quot;</value>
            <value>&quot;Plantains&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains, Roots&quot;'>
            <value>&quot;Barley and products&quot;</value>
            <value>&quot;Cassava and products&quot;</value>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Cereals, Other&quot;</value>
            <value>&quot;Maize and products&quot;</value>
            <value>&quot;Millet and products&quot;</value>
            <value>&quot;Oats&quot;</value>
            <value>&quot;Potatoes and products&quot;</value>
            <value>&quot;Rice (Milled Equivalent)&quot;</value>
            <value>&quot;Roots, Other&quot;</value>
            <value>&quot;Rye and products&quot;</value>
            <value>&quot;Sorghum and products&quot;</value>
            <value>&quot;Soyabeans&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sweet potatoes&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
            <value>&quot;Yams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bovine Meat&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Meat, Aquatic Mammals&quot;</value>
            <value>&quot;Meat, Other&quot;</value>
            <value>&quot;Mutton &amp; Goat Meat&quot;</value>
            <value>&quot;Pigmeat&quot;</value>
            <value>&quot;Poultry Meat&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Infant food&quot;</value>
            <value>&quot;Miscellaneous&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Offals, Edible&quot;</value>
            <value>&quot;Pulses&quot;</value>
            <value>&quot;Pulses, Other and products&quot;</value>
            <value>&quot;Spices&quot;</value>
            <value>&quot;Spices, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seed, nuts&quot;'>
            <value>&quot;Cloves&quot;</value>
            <value>&quot;Cocoa Beans and products&quot;</value>
            <value>&quot;Cottonseed&quot;</value>
            <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Palm kernels&quot;</value>
            <value>&quot;Rape and Mustardseed&quot;</value>
            <value>&quot;Sesame seed&quot;</value>
            <value>&quot;Sunflower seed&quot;</value>
            <value>&quot;Treenuts&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Suger&quot;'>
            <value>&quot;Sugar (Raw Equivalent)&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar beet&quot;</value>
            <value>&quot;Sugar cane&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
            <value>&quot;Sugar non-centrifugal&quot;</value>
            <value>&quot;Sweeteners, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vegetables&quot;'>
            <value>&quot;Aquatic Plants&quot;</value>
            <value>&quot;Beans&quot;</value>
            <value>&quot;Honey&quot;</value>
            <value>&quot;Onions&quot;</value>
            <value>&quot;Peas&quot;</value>
            <value>&quot;Pepper&quot;</value>
            <value>&quot;Pimento&quot;</value>
            <value>&quot;Tomatoes and products&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Vegetables, Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Unit]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
        <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
      </column>
      <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
      <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <group caption='工具提示(Area)' hidden='true' name='[Tooltip (Area)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
        </groupfilter>
      </group>
      <group caption='工具提示(Area,Item (组))' hidden='true' name='[Tooltip (Area,Item (组))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
          <groupfilter function='level-members' level='[Item (组)]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area, Area Code'>
          <field>[Area]</field>
          <field>[Area Code]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.496542' measure-ordering='alphabetic' measure-percentage='0.352697' parameter-percentage='0.150761' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Item (组)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fats and oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains, Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fish, Aquatic Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seed, nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Element:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Feed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C�te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bovine Meat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spices, Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vegetables, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groundnut Oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Offals, Edible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops Oil, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages, Alcoholic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poultry Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rape and Mustard Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rye and products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweeteners, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treenuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aquatic Plants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocoa Beans and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pimento&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter, Ghee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Potatoes and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apples and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barley and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottonseed Oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Infant food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mutton &amp; Goat Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pulses, Other and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sesameseed Oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demersal Fish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapes and products (excl wine)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelagic Fish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquatic Animals, Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts - Incl Copra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemons, Limes and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maize and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olives (including preserved)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pigmeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Fermented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fats, Animals, Raw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassava and products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges, Mandarines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rape and Mustardseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aquatic Products, Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rice (Milled Equivalent)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflowerseed Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Groundnuts (Shelled Eq)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize Germ Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat, Aquatic Mammals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tomatoes and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cereals, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapefruit and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Fish, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmkernel Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sugar (Raw Equivalent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fruits, Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soyabeans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coffee and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fish, Liver Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar non-centrifugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshwater Fish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soyabean Oil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tea (including mate)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cephalopods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ricebran Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roots, Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Citrus, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crustaceans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oilcrops, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sorghum and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coconut Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fish, Body Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pineapples and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molluscs, Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Oil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1992list'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1991' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
            </groupfilter>
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='1992' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='20%80%'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b' fontsize='11'>In </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>1961</run>
            <run bold='true' fontcolor='#1b1b1b' fontsize='11'>, </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>19.9%</run>
            <run bold='true' fontsize='11'> countries produced</run>
            <run bold='true' fontcolor='#787878' fontsize='11'>Æ </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>88.1%</run>
            <run bold='true' fontsize='11'> food and feed.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='11'>In </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>2013</run>
            <run bold='true' fontsize='11'>, </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>20.2%</run>
            <run bold='true' fontsize='11'> countries produced </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>83.6%</run>
            <run bold='true' fontsize='11'> food and feed.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-format' id='refline0' value='p0.0%' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='80% gif'>
      <layout-options>
        <title>
          <formatted-text>
            <run>如果是gif，线就不平滑了</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='245'>
            <formatted-text>
              <run fontalignment='0'>In 2013, &lt;</run>
              <run fontalignment='0'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</run>
              <run fontalignment='0'>&gt; countries produced &lt;</run>
              <run fontalignment='0'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</run>
              <run fontalignment='0'>&gt; food and feed.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.20240963855421684'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.83642806520198421'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='133' y='184' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='CountryLine'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='100000' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='GroupTop5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>In 2013, China produced the most grains, root and vegetables. India produced the most milk.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Group:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Production:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;Sheet name=&quot;bar&quot; maxwidth=&quot;800&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='ItemTop5 '>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rank各国各item'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Top 10 Countries</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]&gt; - &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:7]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;</bucket>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Fish, Seafood&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='5' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='6' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='7' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='8' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='9' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' value='76' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' value='Group' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='level-members' level='[Item (组)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - bar]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area]' />
              <groupfilter function='level-members' level='[Item (组)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='feed 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='feed总量'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food 中的谷物占比逐渐变小，蔬菜、肉类、鱼类、水果增多&#10; &lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Cereals - Excluding Beer&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Fish, Seafood&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Fruits - Excluding Wine&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Vegetables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='food pie (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food 中的谷物占比逐渐变小，蔬菜、肉类、鱼类、水果增多&#10; &lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Cereals - Excluding Beer&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Fish, Seafood&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Fruits - Excluding Wine&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Vegetables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='food-area,item group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food-item,area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food&lt;feed pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Food and feed percentage in Area(&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]&gt;) in &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>Globally</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>, most maize, sorghum and soybean were produced as </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>feed </run>
            <run bold='true' fontcolor='#555555' fontsize='12'>in 2013.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>However, most maize, sorghum and soybean in </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>India</run>
            <run bold='true' fontcolor='#666666' fontsize='12'> were produced as </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>food</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Maize and products&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Sorghum and products&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Soyabeans&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' value='false' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' value='Item for pie' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='foodfeed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>World </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>food</run>
            <run bold='true' fontsize='10'> production in 2013 is </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>3.7</run>
            <run bold='true' fontsize='10'> times as large as in 1961.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='10'>World </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>feed</run>
            <run bold='true' fontsize='10'> production in 2013 is </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>2.9</run>
            <run bold='true' fontcolor='#f9a655' fontsize='10'>Æ </run>
            <run bold='true' fontsize='10'>times as large as in 1961.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1992' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</cols>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666' fontname='Tableau Light' fontsize='8'>Data of 19 countries (Russia, Ukraine, Belarus, Uzbekistan, etc) had been collected since 1992 (after the collapse of the Soviet Union).</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1958.3068783068784'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9738561.7894736845'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1991.4497354497355'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6807976.0657894732'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='foodfeed pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='level-members' level='[none:Item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='food肉蛋'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='gif area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</run>
            <run bold='true' fontsize='12'>&gt; Production in  &lt;</run>
            <run bold='true' fontsize='12'>Page Name</run>
            <run bold='true' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='33' lines='true' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='gif continent  food'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif continent feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-transparency' value='173' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='gif pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production in &lt;Page Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='10'>Feed percentages gradually reduced from 1961 to 2013.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='item code'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Item Code]' derivation='None' name='[none:Item Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item Code:ok] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='map点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>In 2013 Asia produced the most food and feed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Area:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]' field-type='quantitative' max='22632900.47249392' min='-18101244.776992112' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]' field-type='quantitative' max='11333290.785034472' min='-8836043.2705362774' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#ebebeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='milk'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Milk - Excluding Butter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;China, mainland&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]' symmetric='false' type='interpolated' />
            <encoding attr='color' center='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='2013' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' num-steps='5' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' num-steps='5' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='ranks'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcdf:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;China, mainland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production Top 10 Countries</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#666666' fontsize='11'>Negeria, Mexico and Pakistan became the new members of Top 10 countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1729663756639514624]' derivation='User' name='[usr:Calculation_1729663756639514624:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' />
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' included-values='non-null' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' value='59' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.62569057941436768' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3] + [federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='中国玉米大多feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='member' level='[Item (组)]' member='&quot;Grains, Roots&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Maize and products&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='工作表 27'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' value='228' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='工作表 35'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='工作表 38'>
      <layout-options>
        <title>
          <formatted-text>
            <run>动物饲料从牛奶转化为谷物</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok] * [federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='工作表 40'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='工作表 40 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Infant food&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Miscellaneous&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Nuts and products&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Offals&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Offals, Edible&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Treenuts&quot;' />
            </groupfilter>
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok] * [federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='德国'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='13' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
            <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
            <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
          </semantic-values>
        </column>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Item]' new-bin='true'>
            <bin default-name='false' value='&quot;Beverages&quot;'>
              <value>&quot;Alcoholic Beverages&quot;</value>
              <value>&quot;Beer&quot;</value>
              <value>&quot;Beverages, Alcoholic&quot;</value>
              <value>&quot;Beverages, Fermented&quot;</value>
              <value>&quot;Coffee and products&quot;</value>
              <value>&quot;Stimulants&quot;</value>
              <value>&quot;Tea (including mate)&quot;</value>
              <value>&quot;Wine&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fats and oil&quot;'>
              <value>&quot;Animal fats&quot;</value>
              <value>&quot;Butter, Ghee&quot;</value>
              <value>&quot;Coconut Oil&quot;</value>
              <value>&quot;Cottonseed Oil&quot;</value>
              <value>&quot;Cream&quot;</value>
              <value>&quot;Fats, Animals, Raw&quot;</value>
              <value>&quot;Fish, Body Oil&quot;</value>
              <value>&quot;Fish, Liver Oil&quot;</value>
              <value>&quot;Groundnut Oil&quot;</value>
              <value>&quot;Maize Germ Oil&quot;</value>
              <value>&quot;Oilcrops&quot;</value>
              <value>&quot;Oilcrops Oil, Other&quot;</value>
              <value>&quot;Oilcrops, Other&quot;</value>
              <value>&quot;Olive Oil&quot;</value>
              <value>&quot;Palm Oil&quot;</value>
              <value>&quot;Palmkernel Oil&quot;</value>
              <value>&quot;Rape and Mustard Oil&quot;</value>
              <value>&quot;Ricebran Oil&quot;</value>
              <value>&quot;Sesameseed Oil&quot;</value>
              <value>&quot;Soyabean Oil&quot;</value>
              <value>&quot;Sunflowerseed Oil&quot;</value>
              <value>&quot;Vegetable Oils&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
              <value>&quot;Aquatic Animals, Others&quot;</value>
              <value>&quot;Aquatic Products, Other&quot;</value>
              <value>&quot;Cephalopods&quot;</value>
              <value>&quot;Crustaceans&quot;</value>
              <value>&quot;Demersal Fish&quot;</value>
              <value>&quot;Fish, Seafood&quot;</value>
              <value>&quot;Freshwater Fish&quot;</value>
              <value>&quot;Marine Fish, Other&quot;</value>
              <value>&quot;Molluscs, Other&quot;</value>
              <value>&quot;Pelagic Fish&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fruits&quot;'>
              <value>&quot;Apples and products&quot;</value>
              <value>&quot;Bananas&quot;</value>
              <value>&quot;Citrus, Other&quot;</value>
              <value>&quot;Coconuts - Incl Copra&quot;</value>
              <value>&quot;Dates&quot;</value>
              <value>&quot;Fruits - Excluding Wine&quot;</value>
              <value>&quot;Fruits, Other&quot;</value>
              <value>&quot;Grapefruit and products&quot;</value>
              <value>&quot;Grapes and products (excl wine)&quot;</value>
              <value>&quot;Lemons, Limes and products&quot;</value>
              <value>&quot;Olives (including preserved)&quot;</value>
              <value>&quot;Oranges, Mandarines&quot;</value>
              <value>&quot;Pineapples and products&quot;</value>
              <value>&quot;Plantains&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Grains, Roots&quot;'>
              <value>&quot;Barley and products&quot;</value>
              <value>&quot;Cassava and products&quot;</value>
              <value>&quot;Cereals - Excluding Beer&quot;</value>
              <value>&quot;Cereals, Other&quot;</value>
              <value>&quot;Maize and products&quot;</value>
              <value>&quot;Millet and products&quot;</value>
              <value>&quot;Oats&quot;</value>
              <value>&quot;Potatoes and products&quot;</value>
              <value>&quot;Rice (Milled Equivalent)&quot;</value>
              <value>&quot;Roots, Other&quot;</value>
              <value>&quot;Rye and products&quot;</value>
              <value>&quot;Sorghum and products&quot;</value>
              <value>&quot;Soyabeans&quot;</value>
              <value>&quot;Starchy Roots&quot;</value>
              <value>&quot;Sweet potatoes&quot;</value>
              <value>&quot;Wheat and products&quot;</value>
              <value>&quot;Yams&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Meat&quot;'>
              <value>&quot;Bovine Meat&quot;</value>
              <value>&quot;Meat&quot;</value>
              <value>&quot;Meat, Aquatic Mammals&quot;</value>
              <value>&quot;Meat, Other&quot;</value>
              <value>&quot;Mutton &amp; Goat Meat&quot;</value>
              <value>&quot;Pigmeat&quot;</value>
              <value>&quot;Poultry Meat&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;Infant food&quot;</value>
              <value>&quot;Miscellaneous&quot;</value>
              <value>&quot;Offals&quot;</value>
              <value>&quot;Offals, Edible&quot;</value>
              <value>&quot;Pulses&quot;</value>
              <value>&quot;Pulses, Other and products&quot;</value>
              <value>&quot;Spices&quot;</value>
              <value>&quot;Spices, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Seed, nuts&quot;'>
              <value>&quot;Cloves&quot;</value>
              <value>&quot;Cocoa Beans and products&quot;</value>
              <value>&quot;Cottonseed&quot;</value>
              <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
              <value>&quot;Nuts and products&quot;</value>
              <value>&quot;Palm kernels&quot;</value>
              <value>&quot;Rape and Mustardseed&quot;</value>
              <value>&quot;Sesame seed&quot;</value>
              <value>&quot;Sunflower seed&quot;</value>
              <value>&quot;Treenuts&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Suger&quot;'>
              <value>&quot;Sugar (Raw Equivalent)&quot;</value>
              <value>&quot;Sugar &amp; Sweeteners&quot;</value>
              <value>&quot;Sugar beet&quot;</value>
              <value>&quot;Sugar cane&quot;</value>
              <value>&quot;Sugar Crops&quot;</value>
              <value>&quot;Sugar non-centrifugal&quot;</value>
              <value>&quot;Sweeteners, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vegetables&quot;'>
              <value>&quot;Aquatic Plants&quot;</value>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Honey&quot;</value>
              <value>&quot;Onions&quot;</value>
              <value>&quot;Peas&quot;</value>
              <value>&quot;Pepper&quot;</value>
              <value>&quot;Pimento&quot;</value>
              <value>&quot;Tomatoes and products&quot;</value>
              <value>&quot;Vegetables&quot;</value>
              <value>&quot;Vegetables, Other&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
        <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
        <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
          <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='64' param='horz' type='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='61' param='horz' type='layout-flow' w='99032' x='484' y='684'>
              <zone h='98632' id='59' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                <zone h='98632' id='57' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                  <zone h='98632' id='51' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                    <zone h='98632' id='49' type='layout-basic' w='99032' x='484' y='684'>
                      <zone h='94269' id='17' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                        <zone h='94269' id='11' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                          <zone h='94269' id='5' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                            <zone h='94269' id='3' type='layout-basic' w='99032' x='484' y='5047'>
                              <zone h='30109' id='1' name='20%80%' w='27131' x='484' y='34902'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='27142' id='9' name='foodfeed' w='27131' x='484' y='5047'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='27117' id='15' name='gif area' w='56845' x='27615' y='5047'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='30109' id='21' name='map点' w='37929' x='27615' y='34902'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='34305' id='26' name='GroupTop5' w='44614' x='33315' y='65011'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='34305' id='40' name='rank点' w='20312' x='484' y='65011'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='26775' id='29' name='GroupTop5' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' show-title='false' type='color' w='12519' x='20796' y='72541'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='29428' id='44' name='Rank各国各item' w='21587' x='77929' y='69888'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='30109' id='48' name='food&lt;feed pie' w='33972' x='65544' y='34902'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='2713' id='22' mode='dropdown' name='map点' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' w='27131' x='484' y='32189'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='2738' id='45' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='37929' x='27615' y='32164'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='4877' id='47' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' w='10687' x='88829' y='65011'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='4877' id='52' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' values='database' w='10900' x='77929' y='65011'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone forceUpdate='true' h='7530' id='53' type='text' w='12519' x='20796' y='65011'>
                                <formatted-text>
                                  <run bold='true' fontsize='11'>France, Italy, United Kindowm and Poland were no longer the Top 10.</run>
                                </formatted-text>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='27117' id='55' name='gif pie' w='15056' x='84460' y='5047'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='2738' id='62' mode='dropdown' name='food&lt;feed pie' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' w='33972' x='65544' y='32164'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                      <zone forceUpdate='true' h='4363' id='43' type='text' w='99032' x='484' y='684'>
                        <formatted-text>
                          <run bold='true' fontalignment='1' fontsize='18'>Global Food and Feed Information</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4962' id='14' name='foodfeed' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' w='8464' x='19166' y='18135' />
        <zone h='11805' id='25' name='map点' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' w='8464' x='27993' y='49957' />
        <zone count='1' h='9410' id='20' name='gif area' name1='gif pie' synchronized='1' type='currpage' w='10157' x='69166' y='6159' />
        <zone h='3764' id='65' mode='dropdown' name='gif area' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' values='database' w='9674' x='58343' y='5988' />
      </zones>
    </dashboard>
    <dashboard name='仪表板 1'>
      <style />
      <size maxheight='1027' maxwidth='1569' minheight='1027' minwidth='1569' preset-index='15' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Item]' new-bin='true'>
            <bin default-name='false' value='&quot;Beverages&quot;'>
              <value>&quot;Alcoholic Beverages&quot;</value>
              <value>&quot;Beer&quot;</value>
              <value>&quot;Beverages, Alcoholic&quot;</value>
              <value>&quot;Beverages, Fermented&quot;</value>
              <value>&quot;Coffee and products&quot;</value>
              <value>&quot;Stimulants&quot;</value>
              <value>&quot;Tea (including mate)&quot;</value>
              <value>&quot;Wine&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fats and oil&quot;'>
              <value>&quot;Animal fats&quot;</value>
              <value>&quot;Butter, Ghee&quot;</value>
              <value>&quot;Coconut Oil&quot;</value>
              <value>&quot;Cottonseed Oil&quot;</value>
              <value>&quot;Cream&quot;</value>
              <value>&quot;Fats, Animals, Raw&quot;</value>
              <value>&quot;Fish, Body Oil&quot;</value>
              <value>&quot;Fish, Liver Oil&quot;</value>
              <value>&quot;Groundnut Oil&quot;</value>
              <value>&quot;Maize Germ Oil&quot;</value>
              <value>&quot;Oilcrops&quot;</value>
              <value>&quot;Oilcrops Oil, Other&quot;</value>
              <value>&quot;Oilcrops, Other&quot;</value>
              <value>&quot;Olive Oil&quot;</value>
              <value>&quot;Palm Oil&quot;</value>
              <value>&quot;Palmkernel Oil&quot;</value>
              <value>&quot;Rape and Mustard Oil&quot;</value>
              <value>&quot;Ricebran Oil&quot;</value>
              <value>&quot;Sesameseed Oil&quot;</value>
              <value>&quot;Soyabean Oil&quot;</value>
              <value>&quot;Sunflowerseed Oil&quot;</value>
              <value>&quot;Vegetable Oils&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
              <value>&quot;Aquatic Animals, Others&quot;</value>
              <value>&quot;Aquatic Products, Other&quot;</value>
              <value>&quot;Cephalopods&quot;</value>
              <value>&quot;Crustaceans&quot;</value>
              <value>&quot;Demersal Fish&quot;</value>
              <value>&quot;Fish, Seafood&quot;</value>
              <value>&quot;Freshwater Fish&quot;</value>
              <value>&quot;Marine Fish, Other&quot;</value>
              <value>&quot;Molluscs, Other&quot;</value>
              <value>&quot;Pelagic Fish&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fruits&quot;'>
              <value>&quot;Apples and products&quot;</value>
              <value>&quot;Bananas&quot;</value>
              <value>&quot;Citrus, Other&quot;</value>
              <value>&quot;Coconuts - Incl Copra&quot;</value>
              <value>&quot;Dates&quot;</value>
              <value>&quot;Fruits - Excluding Wine&quot;</value>
              <value>&quot;Fruits, Other&quot;</value>
              <value>&quot;Grapefruit and products&quot;</value>
              <value>&quot;Grapes and products (excl wine)&quot;</value>
              <value>&quot;Lemons, Limes and products&quot;</value>
              <value>&quot;Olives (including preserved)&quot;</value>
              <value>&quot;Oranges, Mandarines&quot;</value>
              <value>&quot;Pineapples and products&quot;</value>
              <value>&quot;Plantains&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Grains, Roots&quot;'>
              <value>&quot;Barley and products&quot;</value>
              <value>&quot;Cassava and products&quot;</value>
              <value>&quot;Cereals - Excluding Beer&quot;</value>
              <value>&quot;Cereals, Other&quot;</value>
              <value>&quot;Maize and products&quot;</value>
              <value>&quot;Millet and products&quot;</value>
              <value>&quot;Oats&quot;</value>
              <value>&quot;Potatoes and products&quot;</value>
              <value>&quot;Rice (Milled Equivalent)&quot;</value>
              <value>&quot;Roots, Other&quot;</value>
              <value>&quot;Rye and products&quot;</value>
              <value>&quot;Sorghum and products&quot;</value>
              <value>&quot;Soyabeans&quot;</value>
              <value>&quot;Starchy Roots&quot;</value>
              <value>&quot;Sweet potatoes&quot;</value>
              <value>&quot;Wheat and products&quot;</value>
              <value>&quot;Yams&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Meat&quot;'>
              <value>&quot;Bovine Meat&quot;</value>
              <value>&quot;Meat&quot;</value>
              <value>&quot;Meat, Aquatic Mammals&quot;</value>
              <value>&quot;Meat, Other&quot;</value>
              <value>&quot;Mutton &amp; Goat Meat&quot;</value>
              <value>&quot;Pigmeat&quot;</value>
              <value>&quot;Poultry Meat&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;Infant food&quot;</value>
              <value>&quot;Miscellaneous&quot;</value>
              <value>&quot;Offals&quot;</value>
              <value>&quot;Offals, Edible&quot;</value>
              <value>&quot;Pulses&quot;</value>
              <value>&quot;Pulses, Other and products&quot;</value>
              <value>&quot;Spices&quot;</value>
              <value>&quot;Spices, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Seed, nuts&quot;'>
              <value>&quot;Cloves&quot;</value>
              <value>&quot;Cocoa Beans and products&quot;</value>
              <value>&quot;Cottonseed&quot;</value>
              <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
              <value>&quot;Nuts and products&quot;</value>
              <value>&quot;Palm kernels&quot;</value>
              <value>&quot;Rape and Mustardseed&quot;</value>
              <value>&quot;Sesame seed&quot;</value>
              <value>&quot;Sunflower seed&quot;</value>
              <value>&quot;Treenuts&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Suger&quot;'>
              <value>&quot;Sugar (Raw Equivalent)&quot;</value>
              <value>&quot;Sugar &amp; Sweeteners&quot;</value>
              <value>&quot;Sugar beet&quot;</value>
              <value>&quot;Sugar cane&quot;</value>
              <value>&quot;Sugar Crops&quot;</value>
              <value>&quot;Sugar non-centrifugal&quot;</value>
              <value>&quot;Sweeteners, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vegetables&quot;'>
              <value>&quot;Aquatic Plants&quot;</value>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Honey&quot;</value>
              <value>&quot;Onions&quot;</value>
              <value>&quot;Peas&quot;</value>
              <value>&quot;Pepper&quot;</value>
              <value>&quot;Pimento&quot;</value>
              <value>&quot;Tomatoes and products&quot;</value>
              <value>&quot;Vegetables&quot;</value>
              <value>&quot;Vegetables, Other&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98442' id='5' param='horz' type='layout-flow' w='98980' x='510' y='779'>
            <zone h='98442' id='3' type='layout-basic' w='88782' x='510' y='779'>
              <zone h='49221' id='7' name='feed总量' w='88782' x='510' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49221' id='9' name='food肉蛋' w='88782' x='510' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98442' id='4' is-fixed='true' param='vert' type='layout-flow' w='10198' x='89292' y='779'>
              <zone h='8666' id='8' name='feed总量' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27167' id='10' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' w='10198' x='89292' y='9445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8666' id='11' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='36612'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='foodfeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='20%80%'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food&lt;feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' size='216' type='filter' values='cascading' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' size='193' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' size='90' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' size='41' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' size='101' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2013</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GroupTop5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rank各国各item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:11]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='milk'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ranks'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='20%80%'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GroupTop5'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Rank各国各item' />
        <viewpoint name='food&lt;feed pie' />
        <viewpoint name='foodfeed'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='gif area'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='gif pie'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map点'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='rank点'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-item,area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-area,item group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CountryLine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent  food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ItemTop5 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]' show-morefewerbutton='false' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='德国'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food肉蛋'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed总量'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='仪表板 1'>
      <viewpoints>
        <viewpoint name='feed总量' />
        <viewpoint name='food肉蛋' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='工作表 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='中国玉米大多feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='foodfeed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' size='193' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' size='90' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' size='41' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' size='101' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1992list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='80% gif'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='工作表 35'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food pie (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='item code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item Code:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='工作表 38'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Cassava and products&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='工作表 40'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='工作表 40 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Nuts and products&quot;</value>
                <value>336435</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Treenuts&quot;</value>
                <value>336435</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Offals&quot;</value>
                <value>522729</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Offals, Edible&quot;</value>
                <value>522729</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1992list' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='20%80%' width='192'>
      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
      xp2a3/oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='80% gif' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdk0lEQVR4nO2deWyk533fP+8190VyOLyXe0m7lqxbciTLCaTGaR3HNtzYVXqhRQwUqGME
      QerEaf8o4KZB3TrtH0Hh2m5atEjiFkZdJ6jb2IkrS3Vty7pXq9Uul1wul+eQnPueea+nf2xJ
      7YrcXQ5nZmeG83wAQdjhzPd95pn3+z7n7/kpQgiBRDKgqN0ugETSTdpqAMdxWtawbbtljbm5
      uZY+L4RouRyu67ZcH67r4rpuSxrtqM+jrCFbAMlAIw0gGWikASQDjTSAZKCRBpAMNNIAkoFG
      P8ibhBDk8wVikRAbW2nisQDFugC7Riw2BJoHQ1M6XVaJpO0czACuRS5fpF4pouNwabVG1ONS
      yKRIbuWYPnaMaMiH67q0urDsum5b5uC7rbFTD63Ux85nW1kL6HZdOI6L5bjUGiauANNyMG0H
      23FxXYFlO7ji+v/h+t93asy2HZwb6q/eMFHVdzstrgDL2rvWIoTAtPdfg/nQA7OMDYd3/30g
      A+C6bG2uM55IUCwW8ARClGuCe8+c5dpaku3tLYajJwHQNO1AkrfCtm10/WDFuhWqqraksXPj
      taKx8zBopT52bvwbf/RmOUx92o5LrlSlWKmTL9cplKqUaialaoNStUG51qBu2hQrdWoNi2r9
      +s29H7qmYugaHl3FY+h4DR2PoaFrKqqq4tE1VFXBo1+vJ0PXUBRl97OaqtykdWNdKMq7n7sR
      VVWIBL37lsfrMW6qjwPVjGr4eOqpp/b9233vix1EQtJlCpU66XyFVL5MOl8hXaiQKVbIFqtk
      i1WqdeumGy8a9BENXf8v7PcyFA4wPhLm9HScoM9DwOch5PcQ9Hvweww07fYmbceDrV0aN9Ka
      mqQnqDUsNtIF1lNFNrMlNtIFtrIltnNlLNtBURRCAS+JWIjEUIjRWJDZ8SEeuXeK4UiAeDSI
      32vcUr8dN16vcjS/1RGkYdmspwosrmdYWEuzspljK1fCdQUBn8HYcJiZRIzxkQjPPHKKseEw
      o9EgII7szdsOZM30GLbjsrqdZ2E1xfxqissrKfLlGl5DZzoR5cTECI/dO8Unf/b9TIyEd7st
      t9Rrwwayo4w0QBcRQrC8lePi0hZvLyZZWEsjhGAmEeP0dJzHz0zz3F95iMRQ+M5ikkMhDXAX
      qZsWF65u8uqlVS5e2yRTqHJycoQHTk3wsafv457pOB7j3Z+k1a3QkjsjDdBhFtfT/OTCMj96
      6yqm7fDgqUkePTPF3/1rjxIO+LpdvIFHGqDN2I7LuYV1fvD6AhevbTE+HOHZR0/z5V/7ONGQ
      vOF7DWmANuA4Lm/Mr/EXL1/m4vIWD5yc4MOP38Nv/srPYcgZmJ5G/jqHRAjB4nqGb714nreu
      bPDQ6Uk+/exDnJ1NALRlW4ik80gDNEm6UOF7P53jey/PcWoqzsc+eB+//befQWthu4Kke0gD
      HAAhBOcXk3zz+XOk8xU+9vR9/Psv/A0CPk+3iyZpEWmA2+C4Ls+/tsC3XjzPVDzKr370Ce6Z
      Ge12sSRtRBpgH1wh+ItXLvMnf/kmT7xvhn/12V9iKBzodrEkHaApAzhWnWSqwGjMfyQDYlzX
      5fuvzvNH33udJ943w1d/61PEQv5uF0vSQZoywNbGBlubm6RKE8SOWEDMD99a4g+/81MePzPN
      H/zGJ4gEvKiqeuiyyICY/tBoygAjo6OkcwU8inVkAmLeWdrkq3/6E46NDfGVf/QphiMBhBA4
      jjOwATGDpNGUmjcQ5sGHH7nptX4NiNnKlvjan71EoVLnC3/nWY6NDXW7SJIuMHCD4IZl81++
      /wb/582rfO6Xn+bxs9N33FIsOboMlAFevrjC1/7sJ/z8Y/fwH//Jc3LxSjIYBihW6vzr//oi
      tuPy+7/2ceKxYLeLJOkRjrwBfnR+ia98+8d89pNP8bMPnZTdHclNHFkD1E2LL3/jBWoNi6/9
      9qeJBuVWZMlejqQBVrbyfOlb3+JvfvgRPvIzZ+RTX3JLjpwB5p7/c/70O6/yu//415kdH+52
      cSQ9zpExgOs4vP7138eslPjcZ56TN7/kQByJeUDHMvnh732eQDzBBz//z3GEDCiXHIy+N4Br
      2/zff/EFJh57ivuf+wyKqmIYBsViUUZkSe5IXxtAuC4v/8HvMnrfw5z52K/svq6qKqFQiFKp
      1MXSSfqBto8BFhcXMU0T13UJh8MkEgkuXLjAyMgIuVyOQCCA1+slkUgQDLa2IHX+T76KNxrj
      vk///T1/03Udr9dLpVJp+TqSo0vbWwDTNKnVaoRCIRzHoVqtcuzYMTY3N5menkYIQTqdZmlp
      qaXrrL70AvlrCzz8md+45TSn13v9iOx6vd7StSRHl6ZaANc2WUumSYyEKN0iICYcDuPxeHAc
      h1AohGEYbGxscObMGTY3Nzl16hSVSoVcLnfoQlfTW7z9ja/z81/6Oqp6++3GwWCQQqGAruvy
      kFjJHhTRxEgxnVxlLbmNJxLHr9kUMilUb3Q3IKZYLLK1tdVSgVzXve3+d+G6vPbVLzH7zEdJ
      3P/Ivu9ZWlrixIkTN722s7//oF/3TuW4E0IIhBAtabiui6IoLS3ktfo9jrpGcyGRtoPr2lhm
      DQdlT0BMJBJhaKi1ffV3Cnq4+K3/zPsffYJHPvW3bqtz9uzZm/4thKBQKBCNRu94Q8mAmMHR
      aEptbOY4YzPHb3rtbgbE5K5eZvWlF/jwv/wPTX9WURRCoRDFYpFIJCK3R0iAPpoGdcwGr3zl
      Szz1m/8Mzbh1NpPboes6Pp+PSqXS5tJJ+pW+McBbf/zvOP7MLxKZPt6Sjtd7PdhdzgxJoE8M
      kLr0FrnFOe756KfbohcIBDBNE8uy2qIn6V963gB2o85rX/syH/j1f4ra4okTNxKJRKhUKnLP
      0IDT8wZ4+xtf5+SHP0F4Yrrt2tFolEKhIPcMDTA9bYDslUtkr1zkno9+qiP6iqIQiUQoFAod
      0Zf0Pj1rANe2eP0P/w2P/8PfQdU6t4KraRp+v59yudyxa0h6l541wOL3/wfxsw8SPXay49fa
      mRmq1Wodv5akt+hJA1jVCle+923uf+5X79o1A4EAtm3LmaEBoycNMP8/v8mpv/pJPMG7mx83
      FArJmaEBo+cMYFXKrL70Aic//PG7fm1FUXZnhiSDQc8ZYOmF/8XxZ34R3dudc3x2TCCjyQaD
      njKAY5ksv/DnXXn634iqqvh8PmmCAaCp+cVyIcvGVobx8QQNm7ZniNl47cck3v/YXe/774fx
      /zfc1Wo1/H6ZJeao0pQBQtFhQqUKqWweVdjtzRAjBJe/800e/gef75lMIoZh7K4PGE3uQJUZ
      YvpDo7mQSMfEVXQ0p0Sp0d4MMcX1ZXSPl9jMibuaIWY/dm48XdeJRqMUi0U8Hk9T300GxPSH
      RlNqquZhemoCmNh9rV0BMVe++985+QufaItWO9nZLpHP54nFYjKQ5ojRE4NgxzJJXTrP5ONP
      d7so+yL3DB1desIAm+deYejkma5NfR4ETdMIBoMUi8VuF0XSRnrCANde/C6nP/LXu12MO2IY
      Bh6Ph2q12u2iSNpE1w1gVkpUtjcYOnFvt4tyIHy+67NdjUaj20WRtIE9BqgWc6zMX+Tb3/nf
      mHehABuv/ojxhz6A0kcJ64LBIPV6veUpOUn32XPXGbrKW/NLDMWCHO7sheZY/uFfcuxDv3AX
      rtQ+dgbF5XJZbpzrc/YYoF6uEBsZ44NPPk6nf1qzUqaWy9yVPf/tRs4MHQ32rAOEExM8Hh7C
      e8izd5ph++3XmHj0yb7q/tyIqqqEw+Hdw7Yk/ceeOy+7neTcuXO8/fYFyrXOBoesvvQCUx/4
      uY5eo9Pouo7H45GHbfUpewzg8YeZnEiAqhP0d64VcEyT3NI8Qyf7Y/bndvh819cv5MxQ/7Gn
      CxQMhTA8HqK1Gp1c9M8tzTNy6n1ohqeDV7l7BINBSqUSmqbJY9j7iD2/VCmfI7W+TtXrpWEJ
      xkZbO+35Vqz86PtMPflMR7S7RSgUolAoyPFAH7GnC6QAiqbh8fowjPadxHYjQggy8+/c8nz/
      fkXODPUfe1qAUGyIfDGPVW0Qnrn5SWY3qiwubxIfDlCquyhmlcjwKMFwBE8TATGV7SSeYBhP
      qPuBL+3mxpmhcPjofb+jxh4D5NNbNCyHSMhDoWwSD7/bR0+ub+AKh3zZwqO51Bt1VlZWGB2b
      ZCweO3BAzOpLL5B48PF9V1LbHfSwk6nlMJjm4dfCA4EAjuPgOM6hNQ7LjfEDvRqI0isaewyg
      6h7MQgFXREmM3dwFGokPU1pL4toWVVthZnqGTL6AaZq7gR8HCQDZeutVnvjs7+w7WGxH0MON
      ATGHqbAdw7Sy97+bGpqm7X6mVwNRekVjj1okNkRlbBTLAd97npyByDD33Td882vhaFMFaJQK
      mKU8wcTEnd8skXSYPQZwijmKNvg0HZ+n/dN56UvnSTzweNt178TKygrRaJTt7W1Onz7N5cuX
      sSyLer1OJBKhWCxy//33Mz8/Tzgc5uTJk2QyGebm5hgZGSGTyfDkk0+ytbXFtWvXePjhhzl3
      7hyBQIBwOMzIyAjRaJTFxUXi8TilUonh4esPi1KphGVZLC4u8sADD9BoNDAMg0KhwMTEBMlk
      klOnTnHlyhUSiQTlcnn3KaVpGhcvXuSxxx67Xn/p9G6QvhCCK1eu8PTTvRlI1A/sucNzlSr5
      jWVCo7O4QqC2OQRw5cfPc/ojv9xWzYNQq9VIp9Pouo7ruvj9fiKRCLlcDtu2SSQSCCHw+Xy7
      fX+v10s0GsWyLGZmZqhWq3i9XuLxOC+99BKlUomZmRkuX76Mz+fj4YcfxjAMlpaW0DSNQqGw
      e+ao1+tldnaW1dVVpqenWVhYIJPJkMlkcF2X2dlZ6vU6CwsLCCHwer0IIVAUhZGREZaXlzFN
      E4/Hw8LCAj6fj2g0Six293K0HUX2GMAbCBKNxjA0cByBqrfPAK5tkV+aZ/jU2Tu/uc2MjIww
      NDS0m3Y0nU7v/jsSibCxsUGtVqNarRKLxUgmk9i2jWmajI+Ps7m5STQaJZvNUqvVePbZZ8lk
      MoRCIWZnZ0kmk0QiEZaXl4nFYlQqld1Tp48dOwZANpslHo8Ti8U4efIkHo+HkZERisUiiqKw
      trbGgw8+SCAQoFC4PrYSQuC6Lo7jEAgEqNfrzM7OAmBZVtOnVUhuZk+eYNd1SSU3yFcrTE2d
      IBQ4+Eqt4zi3HQTnrs5z6dt/xAd/6/du+Z52DHTm5uZ206Tatt30LFA3BrBCCGq1GoFAoOVy
      6LouB8EH1NizELa1toJTt3B9AUrFw2dz34+1l1/sWuB7tVrlypUr5HI5rl69ihCCarXK4uIi
      QghSqRSrq6vYtk2j0UAIwTvvvLNHx3EcstnsvtdIpVI4jrPv58rl8m1DKRVFuenml9wd9thp
      bPoYme1NfLUGw5NTbb3Y1vnXOP2RzmR7uROLi4tsbm4SDodZXl7mxIkTvPLKK0QiERYWFigW
      i7iuy4ULFzh58iSxWIzNzU3K5fLuWGF0dJStrS3i8Ti2bbOysgJcv3k1TaNUKnH27FmSySS1
      Wo1gMEg+n2doaIi1tTUeeeQReZP3GHtaAFVVGR2f5MSJE3i19u3TbxTzIAT+oZG2aTaDbds4
      jkOlUqFarZLP5wmHwxQKBYrFIltbWwQCAeLxOPl8nkgksjsw3emP7wxYFUVhfn5+dxZoJ/ew
      oigEg0GOHz/O+fPn2djY4M0332R7extFUahUKjKMssfYMwbIbm+ytLyEohjMnHmQ0XB7xgCr
      L71AduEiD/29z91WY1DHAO3UkGOAg2vsecTrHi+GojM6Nobf377NcOsv/5DJxz/UNj2JpB3s
      MUA4EiEYClCpVBFOe9KHuo5NYeUqw6fv/vSnRHI79rQniqoRjUVYXE5x2tueleDK1gbeSAzN
      422LXjMcpskUQuA4TkvNba8cjiu5PfvW7GYy2daLrPz4B8x88Nm2akok7WBfAxi6QT6Xb9ux
      KNsXXifx/kfbpCaRtI89bbwQDo5t03DcPe6o57eYT5YZCmlUGw6KVSMYiTM6PnbLgBi7Uaee
      SxMab++agkTSDvbp5AoaFowE/VjveYMjNDS3RtWOEvCquIpNKp3CcgUzk4l9A2JKm+uEp47j
      uALcO8+B92rgRLPIDDH9obHXAMJhZXmF2OQM7x2yKrqOrnsZDhpUTUFifIhwo0HdUm4ZEJO6
      8Abxsw8ceEDZ7oCYw3BjhpjD0iuD4F6df+8VjX1mgbxMTY+RzRUwgRtP7A+EY5w5c/P2W/8d
      EtplF97hnl96rqVCSySdYt9Hy8zMFBie5vIn7YNwXQorV/vy7E/JYLCvARRFRXVdWg3nNisl
      FE3v6cwvksFmz0O+mk/z0qvnMDQvra4Dl5NrRGdOtKgikXSOPS1AIBbnsYfOonh9LecHyF+7
      Quz46RZVJJLOsW8XKJncxq1VafVs6OziJYZPv69FFYmkc+w7zo3FIuiRBK323Evry4QmZlpU
      kUg6x74tgE/XKJcqtLLk4No2Vq3WtQAYieQg7DFA6uocby0tMzF1oqVp0EapgOGX4X+S3mZv
      QIw/QNAX4Nr8Oy2NAcrJNcKTx1pQkEg6z95zgaJxHnsk1vIZ94WVRbkAJul59rQAlmVRLuZJ
      XrtCunL4NkBOgUr6gb2DYMcklUqRqwuCxuEDustb63ILtKTn2WOAYCDMsVP3EB/2Uy3VDiUq
      XJd6PodPzgBJepy9+QHqdTK1MrVsnmhYZWTk3d2eQri8df4CYyMRivVbB8Q4lomq66iaTBYn
      6W32Ho/u1RAZE8U2GR4bv+lvyeUFktsZAuEIAa9xy4AYq1FH0bRDBS/0auBEs8iAmP7Q2GMA
      wx/m1IkgihC47wnEmDx+hkBsDGHXKdZvHRBjC4FmeA4VvCADYm7WABkQ00mNfdV2Kny/n27n
      PPqd5Kn7BcTY9Rq6z99SQSWSu0FHDpyxqmWMQKgT0hJJW+mIAcxyEU9IJouW9D6daQEqZTxB
      2QJIep+OGKBRLOCNNJc9UiLpBnIMIBlo5BhAMtB0xgCVMoYcA0j6ANkCSAaajhjAMRtdyQUg
      kTRLRwwgV4Il/UJnDFCrYkgDSPqAthtACHG9C+STxyFKep/2G8BxUFQVRZF5rSS9T1N7S2vl
      AleXVgiEw5j2/gExrmOjyEAYSZ/Q1J3qDQTAcbDQbpkhxjEbKKp66MCFXg2caBYZENMfGk0Z
      oFoqofsDRP0GdWv/gBgXUHXj0IELMiDmZg2QATGd1GhKLRQd5kx0+KbX3hsQI9cAJP1E20eq
      VqUsj0SU9A3tN0CtKvcBSfqG9htAboWW9BFtN4Bdq8oukKRvaLsB5FZoST/RmUGw7AJJ+oQO
      jAFKMiBe0jd0ZBZI9wfbLSuRdISOdIFkCyDpF9o/CySDYSR9REcMILdCSPqFthvAsUw0rwyG
      kfQH7TdAo44uDSDpE5oOiJm/PI8WjOI6Nm61QGBokuMnju0GxDiWKbtAkr5BEU1EbNRKBXJ1
      G6taxnVdAobCRqaIPxDinpOzuK6LWczhfc+W6WZwXbel/e8A8/Pz3HvvvS1ptFqOnWpVlMMn
      GmyHRjvq8yhrNNUCCATlXJbx8QQNRyES8DI0EqdivhsQExxJtFRAGRBzswbIgJhOajSlFgjH
      uDcce8+rXjxy1lPSp8ijGyQDjTSAZKCRBpAMNNIAkoFGGkAy0EgDSAYaaQDJQCMNIBlopAEk
      A400gGSgkQaQDDTSAJKBRhpAMtA0tRu0UStzbX0br2JTrO8fECOR9BPNZYjxh4iESpgNk3DA
      IBANsJEpcPXq0m5ATCsZUaB3M4k0i8wQ0x8aTRmgXi5QLJYZHxvFdNV9A2JaCQABGRDzXg2Q
      ATGd1GhKzReKcube6HtelQExkv5FDoIlA400gGSgkQaQDDTSAJKBRhpAMtBIA0gGGmkAyUAj
      DSAZaKQBJAONNIBkoDnUxopGtUixLsCuEYsNgebB6LHdoMvLy6iqSqVSYWJiAq/Xy/z8PJOT
      k+RyORRFIRaLEY1GMQyj28WVdIlDtQCbqRzlQpr1lWtcunyVUrna7nK1zPDwMK7rEgqFyGaz
      bG9vMzU1xerqKoZhUK/XWVxcZHNzs9tFlXSRQxlA2A3KNZt7z5xF12F7e6vd5WqZxcVFVFUl
      nU7j8Xjwer0sLS0xNDREqVTi+PHjJBIJGo1Gt4sq6SJNJci4E47j9MR26Lm5Oc6ePXvozwsh
      cBxHboceAI22GcBxnJ7NAtINDZkhpj80WrPTDWiahqIoLRewFzSEEG3R2ClLNzV6oT57WaOt
      XSCJpN9oWwsAgHC4eOECQnHJVeD08UnGx8bu+LFSPkWmaGNW0li2oFCpMT0zy8zkOAd9+GW2
      k6xu5fAqFsJxyTbg5MwEE+MH0xBCsHxljmrDpGZefyb4fR5Gx6YYHXlvFNytuTp3HkfzUSxV
      0TQFj2EwNjnDSCx8MAG3zutvXGJ8bJjN7RyGR0XXdCZmjjMUDhxIIru1znbRxKdalOouZj5J
      eOoMJ49NoKsHqVBBcm2Fte0cAV2guC45x8OpqQTj43f+PXe49PY5XM2DazXAFdQUD7OTY4wl
      Rg+o4PL2uXN4/QGqtTq4AqF7mJwYZ2x05EAKySuX0MdnWJ9fwOv10DBrCC2AR4eJqWNoX/zi
      F7944G90J4RDpeFgGAZBj042vYnrCRMO3D5vsNfnpVZtoKgqumEQ9nspFrLUbZVYJHSgS9eq
      VUbiCRzXQfd4CXlUCvkMlvASPdCNI6hWqjiNKtGxabyahlAEqwtXGT8xy0GGsrZZ4criMmbD
      ZGxyGq/Xg2NZrK2sMX5s+kAaru1QKGTIFyuMJUbxBQNY1TrryW0mpiYONG2XS2+RSmfBFyTk
      NYjGYpQKeYrlOvHh9+Z42w8FHYdAdBRFEeheH34NcpkUwggRDh4kD7Qgm0njOBAZGsEwDDwa
      pDY28ISHCfgOsvaigGOS2s4Qn5jCMHR0DTavrRAZG8er37lGfSo0FAVV9VHOp5maHEP1htHt
      EpdXUm1uAVSDSMCDLzKOhku1PEQweucnXz6doVKrEY+FUL0hvLpCo1pGDxz8yStcm0w2x1Ao
      gBGIYaiCWrmIPzp0QAUFIVwmT91PMZtm+sQslmkSi8TwHFBB9wR54meexLJdMuk0U9NTWLbD
      0EiBgy61KbpBJBLj1MQk6VSaybE49ugouVzxQAYCmDh2AkffYnQoQqnhEg36GImb1J2Dz0gp
      niCjPh8Zq0IgFkcVDpVigfBw5KAKjI2N4Wh+3EaZyPgsuDaloSFi4SaCyBWN+x5+jFJ2m4nZ
      WVzbYigaJeQ9WI2mShUczY/fcJl69DG2N7c4MR3HNIcJDeXkGEAy2Mi9QJKBpr1dIMlN1Go1
      dFXBEgoBn/eW7xOui+04CNfGdBRCO2Mm4VI3bVzHxu/3U6tWEUAwGKRRryEAw+NDUxUsy8K2
      r7+vUixiBEN4NBVhN6g7IIRKwKdjmQ1sR0NVHDw61ByDgLe1xct+pr2D4AFHuA7r6xsowqFS
      t0gmN/D5/YCCXd7mP/2373HP7CSFUom1tQ1UYbGVqxCLhMiuXuFawWE8oHB1K0Mju06qbmDX
      SmysrRMKeHj+By9Sq5nE46Mk1xZYWsshXJtoJMLq8jVKpSLBcIiL77xDrZ6jXDaolLKsLS9R
      Nh38CDYLeWq1BordQNTSXEwJJn1l/u0ff5eoXyMej3e7Gu8qsgvUThSVaiHN3PwVXMCyHLLZ
      LKFggMtzl/CKBs//+BUyyau88c48b75ziZ/+9Ce4joXpqoQ8DslUjq1UBrNWRdU00qkUum7g
      8fkZHRnGtuu4qoZjN9ANP7VaA2HXMW0b23YpFKtUyiVqDRPhgmm7+HwG9Uqdhl2nVrWw6lVK
      5SK25RAMBlECCZ6+b4KrS4u88fZct2vxriIHwW3ENquk0gWy2TQj4zP4DSiWysxMT1MoFAj6
      DFK5KonRKJfn5hkeilJ3NY5PT+CYNSq2QlATVFwFj12jrgbw61Aul4lGwuSyWRwE8eE4pUIa
      oYeo1+uMRIJspbexHIVjM1OUyyWikSiqqpLP5xFCUK3WiER9JNcyBGNRRoei6KJOzgkyEtQp
      l8s0KgW80TFCvsHpGf8/vEp+bzchfM4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CountryLine' width='192'>
      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
      /wfrRzqPg05n9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GroupTop5' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ItemTop5 ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rank各国各item' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bar' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='feed 2013' width='192'>
      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
      /z8/JN6tJNZSoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='feed pie' width='164'>
      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
      2Iiqquzdu5f58+ejKHKEIjoR+R9SVZXt27cza9YsFEUhJSWFESNGsHv3boLBIA0NDWzfvp1p
      06bdcW1SUhJffPEFdXV1AHi9Xjo6OqiursbhcFBaWkpLSwulpaUkJiZSXl7O6NGjSUtLG+xq
      SvpARIS8dOkS7e3tTJkypbMQisLHH3/MiRMnsFgsjB07lpkzZzJ58uQ7rp02bRozZ84kPT0d
      k8nEuHHjOHr0KG63m8zMTFJSUkhMTGTr1q0sWLCA06dPM3XqVHJycrDZbCxevLjbsakk8kRE
      yB07dvDcc89htVoB8Pv9vPvuu8yePZubN29y6dIlysrKbnsiMYSiKCxdupTGxkY0TcPj8fD0
      00/zyCOPYLVaKSwsxO/3c/z4cc6fP09GRgZ79uxh7ty5eL1e/H4/LpdrsKss6SWDLmR1dXWX
      RCEqKytpb29n7ty5XWPI1157jYMHD94zv9bWVn744QfGjBlz2/t1dXWcPXuWrKwsrl+/TkZG
      BrGxsWRnZ9PQ0BD2eknCw6ALuW/fPubMmXPbsy6pqalUV1dz5MgRgsEgN27cYPfu3YwYMeKO
      69va2jh37hwdHR34fD5Wr17NsGHDmDBhQtfvqKpKcXExs2fPxmq1kpCQQEVFBe3t7Rw6dIik
      pKRBqaukDwzmE2Uej0d74YUXtMbGxjvSzpw5oz322GOaoijaAw88oL355pua1+vVNE3TnE6n
      lpeXp2mapvl8Pu3VV1/VbDabZrPZtHnz5mlNTU235XXixAmtqKhICwaDmqZpWlNTk5adna1Z
      rVatoKBAa29vH+CaSvqK3KArEQq5MCcRCimkRCikkBKhkEJKhEIKKREKKaREKKSQEqGQQkqE
      QgopEQoppEQopJASoZBCSoRCCikRiv8HWBpQYcabdYsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='feed总量' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dyXMcWX7fP7lX1r5iJQgQBLdukr3M0pLDERqHrHFYUliSJYcVivDV4f/B
      B4/DZ/vokCNsH+yL5fDB1kGWRqGxNKOZUc9MD2ea+wqQ2JeqQq1ZuftQQGYViQbBbgIkWO8T
      wUP9mC/z5cv3fcvv/d6DFIZhiEAwoshvOgMCwZtECEAw0ggBCN4ZHt27RbPrvFIa9ZjyIhCc
      MAHLiw+otjya7RYJLHKZFHcfrvBbf/DPSWsHpxI9gOCdwG1XaYdpmrUNCpVJPMem123gejaH
      dQqS8AIJRpnX0gP4vv86biMQnDhiCCQYaYQABCONEIBgpBECEIw0QgCCkea1LYQFA95UCZAk
      6XXdWiA4Nl6LALY7Ln/xoBH9vlgx+dXZ7Ou4tUBwrIghkGCkOXIPsPr0IUoix9bGFqXxcQzJ
      I1ueQFfEUEdwejmSAFyrydLKKqVCSChBo1bFCyVKYxP4vk8YBEPXh0GI53nHkmGB4HVyJAGo
      Rorr167T7XjUG1WyxTEyekjPCzE1BUkeHklJsoSqikBTwdvPkWqpJCtkskUyWRifHDvuPAkE
      J4aYBAtGGiEAwUgjBCAYaYQABCONEIBgpBECEIw0QgCCkUYIQDDSCAEIRhohAMFIIwQgGGle
      KRxa1jJsbW9RqEySVEQ4tOD08wrh0GskpDTnP7rI41uP0JJJEQ4tOPUcPRz66lV6dsjak2ec
      mT9HUvFFOLTg1HP0cOhciQxQGSsfc5YEgpNDTIIFI40QgGCkEQIQjDRCAIKRRghAMNIIAQhG
      GiEAwUgjBCAYaYQABCONEIBgpBECEIw0R4oFCnyXJ48ekshmqW3titOhBe8MRxKArGgYuopv
      u+J0aME7xZEE4Hs2PTsglTUw9B7ZQoWMjgiHFpx6jlRLFdXgwuXLAExNTR1rhgSCk0RMggUj
      jRCAYKQRAhCMNEIAgpFGCEAw0ggBCEYaIQDBSCMEIBhphAAEI40QgGCkEQIQjDSvFA5tJNPU
      67vky5OkFI+MCIcWnHJeKRy6Wd3l7KVzPL71iN1kkmsiHFpwynmlcOjSxBirj/dOh5Y9EQ4t
      OPW8cjj0xMTEsWZIIDhJxCRYMNIIAQhGmhcEYNs2QRDQ6/XeRH4EghPlBQH88Ec/pNPp8N3v
      fvdN5EcgOFEOHALdvHWTVrvF4uLiSedHIDhRXvACfePr38DzPC5dvEQikXgTeRIITowXeoBM
      JoPs97h//zGo+pvIk0BwYhw4BFp+/AgnCE86LwLBiXOgACbPniX0XUDE+QjebQ4UQLvRxHdt
      LEfE8wjebQ4QgEvPCVFVHUNTTj5HAsEJckAskMTio0co2SyW7ZFJaAS+x+LjhxjpLLXtOuWJ
      CQzJJVMS4dCC080BAlBYuHSZbKVEYq8HkGSZdDqLbqhUJdit7eAFEtcqIhxacLo5sAfIZA1u
      33nA13/lVwEIXIftapVyZQxDV8gUKmT1UIRDC049B9ZS3TAJrBYtyyGTUFH0BFevXQdEOLTg
      3eLFYLhug9t3H6Ikkpi6mAQL3m1eEICRzDFZymI7No4bHJRGIHhnOHAdIJXNECJjGmIcL3i3
      OVAATs9G0zR8EQ4heMc5UAC9bgtf0tBV4eMXvNu8MMbx7DZrtQ4ffPQJKUP70jfudDr89V/G
      m2omp6b4+JuffOn7CQTHwQs9QH1tmYbV5c//z5/T6rlf+sY9y+KHf/PX0b+7t29/pYwKBMfB
      Cz1A5dwVfufclTeRF4HgxBGnQghGGiEAwUhzoo5+1/P50x/ej36Xc0l+7cO5k8yCQDDEEU+H
      9njy6B6eL9O1bRLpIlk9YOzM3CuFQ7tewH/7i8+j3+/PVYQABG+UIwlAksAws+QV8BJlVpc2
      8BIGUzJfGA7t+/6wLQzx/eEQ6RARNi14sxxJAGEQYHU7mOOT9BoNLl+5gC4HOF5I4gvCoRVl
      OJBOkiQUZfhxEiJsWvBmOdrfB1B1Ll7uu0bLhXxk//LLZALB24HwAglGGiEAwUgjBCAYaYQA
      BCONEIBgpBECEIw0QgCCkUYIQDDSCAEIRhohAMFIIwQgGGmOGAznc+vOfS6dn+DmnVVKlRJq
      aL9yOLRA8LZxtHBoWaFcKkAgoyoe9XodRVVFOLTg1HPkDTHt5i6yopLO5BibmCChhCIcWnDq
      OVo4tKJy4VI/HHp8rBLZRTi04LQjJsGCkUYIQDDSCAEIRhohAMFIIwQgGGmEAAQjjRCAYKQR
      AhCMNEIAgpFGCEAw0ggBCEaaVwqHXjhT5u7SKolUiZzuUxHh0IJTziuFQzs9h+mzZ1h5soZn
      JpgU4dCCU84rhUOr5QmsZoPL710Up0ML3gleORy6UipEdhEOLTjtiEmwYKQRAhCMNG/FAPzR
      n31OGIQA6OkEs9+69IZzJBgV3goBOK1eJABJEm5VwckhhkCCkUYIQDDSCAEIRhohAMFI81ZM
      gg/i0V/9bzzbAkDRDS78w3/6hnMkeBcRPYBgpHlre4CD+PT736PdaPR/SBK//tu/+2YzJDj1
      vJIAHKvOzTsrlMZKaIF94uHQgR8QPBd5KhB8FV6tBwhkVNWjXuufDv26wqHDl9gI2QubHrLi
      eR5/t7TITqcd2b59+T305yJRBYIv4pUEoOgJ0ukclfEJTPX1nQ4tEVftQdvAhXth08O9jaqq
      /Nm9O/xidSWy/YOLl1n82ffZWnoU2b75239IKldAIHieVxOAZnD+/Hz0+20Nh95++pjFz38S
      /f7oN34Hf9EhWK9FNuXqLDtag01rLbKdTc+T04VQRolTNQn+Sng+OANDsCDkcfM+P9r8XmT6
      J7N/SPNOnbt/eSOyvfftj9gp1fmvn/5xZPut93+XfzR5HW7/z/h+kx/jFr/B5v/9NDIlZyco
      /ur7x/M+gtfC6AjgiHi2i7XbGfjtYfs2O53tyNZ1uhB4YDcGElr4lsPuT+9HptAPKHxyhXC7
      GV+nq8iF9LG+g+DoCAEcN16Af3c5+ikV0kj5FH/8p59FtkouyR986z14ugT7DgVFhbNnYWUZ
      XHcvsQRz504w8+8+QgBviD//NJ6kz08V+gL42++DbfeNqRSc/SP49Mewv/ahKDB3jtuLWzS7
      TpT+m5enUBSxpvllEAI4hfz3737O3ac70e//8W9+H1MI4EshBPCO8FcP7vG0Fnu5/tmHH5NY
      /gHBxs3Ipn34R8iZiTeRvbcWIYB3hB8tPuHHS4vR79987yra0x/i3vxfkU298Bss3W3y7OeP
      I9vV3/waCdOktbYb2bIzRVpmkweN25FtLnOBkj7JRiue0OcSJlk1ZHfrVmRLpCqYmTPUN2JP
      mm4WyBQvEoTxQqYkSciSRBgOL26e9I5AIYARo7vbob4ce7RcyyHs+uzciddDjGyCHWmLT7e+
      H9kSionTS/Inv/hZZPuV2Xk+zvn89M/+ZWQ7c+n3WPjavxqyjc1+i6u//h/4vf/ynyLblfEJ
      /v3v/j7eD+7EE39TR/vkEtz6E3D2VvcVHT74F/znH/9H1hrxgue//va/Y+3zp3SqsSAX/v77
      hNZNfKvvdJBkHWP8H0NzFfx4zkR+Duo1sO1XE0AYBqyvb1Iql1AJ8BVDHI0oeP20VqG31yOp
      CQCWak94Un00dNnKL5+w9SAW7tw3LxI2buDWfgyApKT6Arj/p9BejxN+69/CTz6FtdVXC4du
      ba/hSwG3bj/g/pNlNDHvEpxyXqkKK6rKbr2OnjBJahKOH748kUDwFvNKQ6BkYZyLqSKath/A
      JoY/gtONFD4/DX8FwjAkCAJ8P8ALIQz7i5WKLCGFAXavR0g/hlNRVTRNo9NzB66TSegKoRsQ
      EiIhgSQhqRKh7/VvCH2bohL4PmEYRtcqqkrP8/CCAPaelNJ1Atch8D3CMESSJFQjgYIMQZw2
      kCGQAtzQ3U+KJulIvoTvxmkVTSWQA2yvF9l01UBFRg6c6F2QNYJQJrTd6BmSqoCmIPvxc5El
      AomhcpBlGVNXkF136J0DTUP2PAiCfhb3bD3Hxw+CKH0qoWH7Pq7vx+WgaciBDX6cx1BNEYYS
      vuvH76erSJJE6AUD+Zb3ysYZKBsNQhk3COJylWVkAgK3E31nWdGRZB3fbUc2SdGQFZO240T5
      U2QZU1WjsmH//WSpn+8wjg8OFIOe1yMI43wntRSB6xP4A/kxNCTJhcCNyiuUTOTAgTCI8hMo
      CWTfh8D/agLYJwgCZFnG6rTpeSGFXCayHXTdUW2+62A5HslkEsK+zbF7yKqOqsjRdWHg0+lY
      JJJJ5L0KdZRnSFJfqJbjYyb0yAZgdbvoCRNF7v8edM+FYRi57/YLX5blQ9/FsiwSCRNJim2u
      3aPRsSgV8oRh2H9nz6XT7ZFOp4Ewup/v+8iKQnjIM8LAp9O1SJgm8l6ewjCgUa9jpDIYmoos
      SbSbNTBypBNqXA6EeAEQBlEouwT4QUgQ+KiqupdHiW67hRvI5LLp+P26bXpuQCGXjd/Psek5
      Hpl0auCdLRqd3tA7H/jtPYfdRotcvvBK33S/DL1AwtDVl9Y55Tvf+c53+IrsV44f/eD/sdO2
      OTs9Gdnu3L5JIGukkyaSJNHrtrnxy8/Z2NxmanIiuu7h/bvYXkgqmYwy9+zhLT6//4j82BlS
      Rn+05jk97ty+jR3IFHIZALZWl7l58wZSepxiJgGBz+P7t9nYrtO0A0q5fvCZ29nh1sNV0ukU
      hq71nx2GLD66z9rOLuVyCYWAleVnhLJKu1FH0gwMTYXA4/PPb6ElTJJmAkmSaDXqVGt1eq4f
      vR/AnVufE8oaqQFbp1nl7v1HaAmTVNIE4Mndn/HZvTUW5s+i7q3kLj16iItMOpWKwhuWnjzk
      yf1bKLkpMol+OawtPabW6WGaSTS1X2HrW2v87MYNpESeUi4FgNXY5Ac/vYmiJagU8wBsrzxi
      aatNKmliGjqSJNHeWebn95fxPJdiIY8kSVjdNjd/+Qs8JUEhm94rL/je9/6Kng9TE2PR+336
      t3/NZqPH7Jn42z+4dxdZM8ikU5Ht8e2f8pP7m1xeOBsJ4sYvfkmtuk0qX8HQ+u+y9PAud+7e
      Jz85R3rv2688eciu5ZBIpNBUGQKPOzc/Z7depeXrFDL9cg19jwf37tANdArZJIHvcOPnN+i1
      tumoBXJmP5B/Y+Xp69sU73se1z/8mPOzZ4fs6YTBbqMV/U4k08xOTZDJ5oauy2VSVGv1ocWS
      bLHC+PgU2US8ucZ1LHLFEoViHLefSme5ePk98imjb5AVZs/NIxNS3BMJQIBG4HTo9gZ8woGD
      i8b05ARyvw/H7zV4/HSNRCpL2ty7pyST0GWarThS1DBTEHg49sD9gFQyQW23OWTrttskUjly
      6WRkq0yc5fLCLLIc9y6e5yFJMoObfwq5DFoyT9qIyyGXz7FbreJ4ez70MEAxUszPn2eyHJet
      ZqT42ocfRI0FksT02Tk0Ara343CKdGGMnKmiG0ac6TAgXahQKcb383yfb3z965yZno5svu/x
      /vWPuDA3/O09zxvaLBUGPuOz7/HJtYXo7TTD5PzsNGoijbHnVgx8n9LYNNeuXSdvxtPUfCFH
      vbqD6++9s6yysDCPF8oUM8koz+1Wi+L4NJW9qFtZ0bly8RxWYFBM7e1iCTxsx3t9Aui0G6xv
      btFqtYbsLcvG6g7btqpVMunUkK1Z2+TJ01Xcgd2Vjd0G6eeua+w2efr4Hh03toWhR6djDW2Y
      bDdq+EoialEAZFVDCn08b2C7ZuDS6TpIsoy810rNLVyhkNJpd7oDD/F5tPiMWj0ONzAMg2qt
      xuZ2vLAEsL7yjJWNYVuzUWdts4qmxduI6lsrPHy2zuCO0nKpSHWnOvQuqmagSR7dgcKp1ZvU
      N5aodmLxdTstLKuH4w5vPW3s1ggGb6ilKKR1isUSw8jUqzt4exXMTGXAtajVh8XcaLVJJxND
      NqvTot4Yvi6bNllZ3RiytZu7NNqdIdvW1g6ZTGZA8iHPnj6lWd9k14rfpVprsLu+SM2Kv1+9
      uoOaSKMNxEJJssTGylPa3V5k29zYIpXLoe4/RFZJJ43XJ4BsvoQsSTh2/FDPdUinTIzEcCUu
      5zMsLscLGIQhqdI0H1yeJWoMA59cqYI60DoC5AsFJqbnyA/0Cla3i2KkSOqxLZUt0qlt0Boo
      hNDtsNN26LQHBKkkUCWXZjPeV4wk7Y3VB4QiqVxZOEehUBzKT7vVwB+oXWEYMjN/ibmp8tB1
      49OzzJ0ZG7LJyRK/9s3rqANfodFqoykBPS+u7O1Wi/G5y5STalRehpnk+vUPMPcFLslkUkmS
      6Wx/yLaH4/kYCZOUOVhhJbSEia4MqEJWyaaM/ph7v8wDl0eLy+xUYzGrikLguTRacXkpikqj
      0URRh7fBJtNZAj9uqXpWl+W1DTrt5pDAK+UCT58+i8pRVlSmxgs8WdnB3F9sCkOMZJpr16+T
      UOM6kS+WqW0s09nv1SUZyXdodnt0BhqwsfEx1pYWsdz4m6qa/nrPBTJ0jbHx8ei3rCi4gYSh
      Dlfi5m6V3ZYVG0Kfra1tHI+4wssKcuCyvrHBfl0IPJvltc291jpOnk6n6XXbUcsF0Gk16Dn9
      CeU+ipZkZrxENpeNEwcOgaQTDlZ2JCYmz8TDBoDQo9bqsrH6FHugEM/NzjExHldsz+mxtbOD
      JA97mFuNBlavN2RL6AqPF59FlcFzethegKbqQ8JPJU3u3f6crhM/t1bbptq0SJtxl765uYXt
      OAQDglTx2Ko2Ik8LAG6Ln964zfL61lB+XD9AVyQcb+9aWeOD9y9SLA6L+d7jJ+zWq0O2rmUN
      HYTguw6hpDA9PRXZzFSG8+dmmZycGnKg79ZrdC0LdyDfXiAzNVbEG7DVqttUm3Y0D+qn3cX3
      bTp2LDTP91lYuIA20BBs79RRgi5tZ6AcAv/1CsB1naFCCAMfq7VLy4ozZ3WamPkJrl6cjRPK
      KqYesrKyGhc+0O3ZaArRmE9WDcaLGQJpuKVpNlusLt1nq2lFL9Z1AubmZhkbGL8GvovjhWys
      D3bLEqaZIJ/PD9gC1tdWnhvHy3Q6bdK5wtCwanNrG2NgWKMZJoHVZHVzh0EUTaNSHh5yNFoW
      Ch77ulX1BIVsCiSGgsR2dmrgWXTc2EWaSpg0dlbZbuyJKnBJFqZYmBmjbdnxc40U2VQC14lt
      hCGXr1wjMdBj4ltsVZv8/LOfDMwrPLZqzReGO3OTY3Q6PdyBhdBisYA6cOiBoulY7RY7m2ts
      DwyhdnaqqAMHJji9Dmoyz8Xz8yQGukLbsSmNT5HS5eidk4kEzZ0VNpt79Snw8JA5c/Y8lWw8
      B2i1OzRbLYr57N5lDrJuMHH2IuVk/OxAkl6fAFqNOqlMHmVg0qOoOp7dpTpQkcxUFtvqoA9U
      GgKPQnmahQsL6AO9hdOzSOXKcTcIGMk0ktPBHmiwDSPB+x99wnRxb6uhrJBLG3S7FrvtbvSM
      1a0GCjb5wmBl97EsZ2gi2rM9MukkmczABDoMOTs9TS4Xp322+BjVMKnt1iOb69jMzF9kYfbM
      UPn0LAvbGW4IJmfOUSmXGQyn6na7dFsNHi0+6+fO7aEkkszMXaRg7n28MCRXLDB2ZoHx3P7E
      X6O9u8XT5XUMIy7bwLPZ2Fin0xuYNOlpujtLJDPxcK5hhUxWMrx//SNSRvwc1/OHHBMAqAaq
      vc1yNR5itNrdqML1k/YXH3RdHxoWG4aGOzBH0RMpnE5zqPUHyKRSWL0eg4/O5bKMzV5hMrv3
      frJK2tSp7Wyx29l/hkR5/AwzUxPoe0MyWdUxVImnj+/TsPfFHQLK64sGzeQKZA44eqQ8Nce1
      qbgbDMO+q9NxBz6IrKJIIZ477E0plits11tRIQS+i+sHKFLQH4YkFAhDkqkEm6s75PJFoP/S
      mm6iaVrcekkySugyOTOPP/hsZDRVwh+YiXbaLXo9Gz122NBqNtBNk0a7BfSHeeGer31Q9Jpu
      EPo+jj98VpKsqLRbDaAfj68oKjd++nfkJ+YYHwjRLxaKoCYwU/15k6IlMOSAje0qyeIE5bQM
      kkS33e4vMO2vT8gqFy5efKH8A8+lNDY15A3DbtINzcjrAvB06Qm242Gms9HaB5JCpVwcarF7
      tk25VIDxacYr8dwuZepsblcp77larXYTWdXJFjJMT8RDRFlWaA6UA0C5VGCnG+CH+18PGrtV
      HjxcIleeopLRCT2H1dV1zEJpqHfsL3YppCJvnUQyNTznBDCMJGdmZjD2W5vQp16vHX84dOB0
      ePhkmSsX5vrPDVxUPYE/MMmzrTbtVhPbj7Pj2Ra7jRaO57P/jZ3GBreWWkzkM7FLsLvN0loL
      OVUiud/yeRa3HyxiJlPk033fMJLMzLmFFzMoqfjesPBKhSwrGzV63iblQr9VyxVK5ApQsuOh
      xOzcPM/TbtRpdfrd+iDJZBKcAVHIKl/75O9h6PrQdVtbmyQLY1RK8XDJTCbxqcctM5BOmmw2
      ey+2zs8RhgFBEA4t5NmhztnJQn9leo/r1z88KDXdTpdMPu5ubatNt9ulafcYr8Q9iOUE+MTz
      umQmx72bn9FUy5EAgiBA13X0cHgI2203ebbW7LtWFQnXsciPneWqZpDcWwOQVJ35+TmePFsj
      GGgwZHzURArtOWfJ8zQbVTbXV5CL58iZKsgq01Pjx3847tb6CisD42FZ0dlZuc8Pb9yLbIaZ
      xm1XWV7fiucAEkiKihK4UdCdmixw7coFzs/PY+6PX80iuXSSjNyjt3/siaRQyOfQFIZ9/gcR
      OKxXm2xvxuGyO9UaneYOspp44XJj0E9+AOlcge21p9x/FG9O6bab1KpV1gbKodus89nPb7C6
      vhlX4jCkMj6O3bMim9XY5O6DJVzbojngEmx1umwvP2CzMTC2PwDdzKEGXRrtuHLqmr7nen1J
      EEAY8nRtg/qAF6i1W6PW7DEzFbfqnVYDTddJZ+IhkGtblCZmyCWNIZtlWVjPfRPLl5kZL0RO
      DNdqs7a1Tc/qRbbQc9iuVqnXqnHvGng0ez7FbArpkPrvO130VJ7y2DR5MxZfs9E83h6g22mS
      q8yQU4dbuWx5mrlgeG2gUJkk3atjaP03CYMAx3EIwjBqqdREmizPIatMTE4O2xSduecW5L6I
      UE1zdX6CbDle2ClXJrBsj1qrc0jKg2k3aqQLE5wdi/NkdZq4ksb5uXgomC+PM9Pu0GzuMj4+
      hiyB02vT7vk4PQs/CNGU/hCoVC6CJGFq8VeuVMo8W9ukkj1EkIHHrVs3WatbXH7/WmSWJInA
      d0A+vP0LZZXL8zPkyrFnb2p2gcmzwz1KKpNDVTaHJtqLT5exHRtNjecjhpnCcT1C34/icgAS
      qQySb0eVOJktcylVIJSkaPglqTqBF6IGHVpOSD4JyCpTU/F3+yK8To31uk8h7LHZ6JEz+3PF
      XC53vAJIprKoyia9oTE3NFsdzs7ElcG1LR4928DUVXpuQFJX0BIpzp8/f5zZA+Dh48cQeKyv
      r1DI7o2hJRlVkY8sokFW1zdI6BIecUtTGj9DafzFaw3DwA5iT4Ss6Gyv3kLJjEULO3oyx/nz
      uRfSbq1vUJmcRjms6ZNVrn34MTPVHdpdm2xqr0fzu9TbDj1/g9zCFx+z8vDeXSoTk2zu7ERD
      wefjavYJgoDSwEtOT47TaHWQlLjxq+1sc/7iJbY2N+PBV+CxubFBvlCksr+OIPUDHZ8nk02T
      z3+AK79a+Jqen+JqJkBikmC/ygcejx49PoE5gGsh6cPjYVmWcb24O1dUnUzKJJRPfodmNmnQ
      c1VK+Ups9LqsbtYJ1rf42scfx5PCI7Bw4SK+H3Bon7yHapiUzWQ0EFFUjfc/+BoAL3uk53mg
      HH4NvsvNGz9DK5xhLj1wQ1nDUCUmn+85nyOVTtPr2VHs0mFoioI7sMKeyuRIZYaFq4Q+z5ZX
      sG2HwXb7zPQ0tue//J2RUbwunvpqJ4RLkozdqXP3wRMuXfuoH0ckyeRK5eMVgO04BGGAbQ+P
      Uy9deZ8giMNTJVlmYnoG17ZeOpl53UxMH9DKyxq202NyvHKUejyEoqgc9XBqt9el1XPJZPsN
      hO85PHz4GENTmZpbGFrZfp7iWIWN7RqO5w/784cyo3H5yhWePNvE9nwip5ak9EPLA//gdHtM
      z8we+v/7tJt1tETypQ1FrjJBttx3j0ZXyiqq5PNsc4uJ8YlD7xHYXW7cucnFX5n6wmu+MK3v
      IcsD5STJeLZ1vJPgpaUnWL7C+bPD4zTHtlhfW6G157t1bQur22Vza4e34vR/ScJQZSRFj92M
      r5nQdwgVFU3TI5GpeoKJchFJ1YbWJV5M67K5U6fV6vRbs8MI+n783ebenCsMuXvvPopukM+8
      6C78MqSzBaanpxmvPB9b9CLSYOXfw/c85Je0GqFnoyYynDs/j/mydz4AWVHJ5XNDB4iZicTx
      CmD+3DwL8/MvnFr2+M5nfHr7WTQmDXwfy7IwzNQLsT9vgocPH6JpGqkD/MmvC8dx6XXaQ6Ea
      AN1mlY2d2tCK+PNIikbe1NCTLz9j1MiUuHxxgdkBr03CTCLj0+pYh6Q8GXqdFpJmkEymDxU9
      skKrukrVUvtuzFek2Wiy+uxx7EkLPLxQPt4hkKbprC4/w8wWSQ4EYxXGZrmaiecAiVSG8+cz
      B93ijaAbCfxQRteOr3gUVeuHicsyXhBGp2sYqSwpK0R7yWkbyVwBtb5Ex/Yx9S/Op9XY5Ge3
      lpiaOdPviSWJc+fmaXe66PqbP+C+026wtLpDuZil5wZDax3DSIydmacv40Ef0ssJPAdPUimV
      xjD3Iw2k/qbe458EBz7ec+G59XqdVKHyBSnePLNnZ2h0HAi9l1/8JQnDgEzaZKdhxZ6cwGNp
      ZZ1ioXjo591f3FIUhZesg6Gn8oyPlShkBxoYp8HtB+u8d+ncsYr8KJTGz1Ac2xsiHzLclGRl
      KDTllQh9Ws0mmeI46f1AusDH8U/gr0R2mzXuL8anIwe+Q2lsYsiP/Dayub7KblBZqXAAAAQ8
      SURBVLP78gu/JJqeoFgo9PfURpVYYuH8AmYqzaHD3M4Wn91fQdISh7SYfdxuiyeLS9QaA+He
      isHu9gqrz+1ZeFNIknTg3OC13V/RmJqeJps24zCKvbWiY5V/EAQUyhPQjb0NsqLj2BaacXzj
      669Kz3bJpJLoxzgHALBth3yhiBIvBNDcraGnsoc3EKrJpQvnGc+9uFL9PI5jc+X9a8NrXoFH
      oTIVr6a/40iy+ly0b8yx9gBhEJDK5CgVYn+w1W6wU93FcdxDUr5ZErpCo318rf8+Pdum12lS
      a/RXnIPAR9dUOl3rhTMzB5ESuSNVfoAglFh9tkhicFOSYpI3JST18LCOUeBYBaCoKk8e3Obu
      w6XItrNd5b3r1/HcN++B+ELCgG7XHoryPA5Uv0s7NMjtuSMD30Mz0/hWY2j741dB12Q6PZfd
      3fjwW0K/H2T4Wp5wujn2OcDUzBxj5bj7mZgcY+XpU7TBWOO3DVml16qyvlV7+bVfkjAMSWby
      aFIYrYAGnkuz2URP5l86tj/yc5C5du0qZiIOSQiQyZcqTI4VD0k5Ghy7C8B1bNKp2F+tJdLM
      n3vL/0aW77BrBWTd3suv/ZJsrjyl2Woia+nI+aGbac6ff51lE1Kr77JRbXHxytXI6noeO+vL
      BJLG2cnyIenffY69B0gkTFZWll9+4VtEvdnlg6sXmZw8vj8mkUilyWRz5FIvj7P50vgu29UG
      +XyBra3NyGxgsVy16TR3D0k8GryWk+G+CN9zePDgIbKe5NIhUYdvG4Hb4+mzFWQzw+zUAWGc
      p4YQz/P7J8TRP4qSMGR9a4uxUqm/S27E/7TSsQ6BFp8skjVVOurb6/I8CFmW6do+xcwpnyaG
      IZsri7RchVQ6zczkGBCyvPSEbrtNoTw2vFVyBDnWHqDd3KXZ7iBrCSaOECj1VhD4bG5t4fkB
      ZipDJpUcOl7jtOHZbe7ce0xx/AxnJkoQhgT755D6fnQO6KhyrF82nc2Tzh68APHWIvXPHHIc
      Gz8IjzUg7iRwe11WN6skskWgBJKELMFurcpuu8vszJm3flX+ODm9TdtxIUlUxiZItJqo+vDR
      iqcRLZHm4w+vYZgDbudejb/5yU0W5qZHuvLDCXiBTiW+xb2HS/Te4tXqo7K1tsTaVm3oTCK0
      NBfPTjA+fpon+K8HIYCDkA1M1adab7zpnHxl8pUpUnr/gKoIz6Jleajq6e7dXgdCAAcR2GzW
      Oji9tzhc46h4PbquFJ2SBtDzVSbHchxf/OXpQQjgICSF2bMzLJw72p7Yt5YwJFRMCunhoLeE
      4rPT6B2+A2tEEAI4gE63B4FDrdF6+cVvNSGeH5A0lPhQrjBkeaNKSgerd/ihWqOAEMABqJrO
      5NT08PHop5EwpNnYpdnpn3CxT6trc27uDLVa9ZDEo8GxLoQJ3k667Qb1ZpeJicOPIRkFhAAE
      I83/B1miPUaLE0LqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='food pie' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='food pie (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMxElEQVR4nO3cfWzch13H8ffvnnzn8/M5tuPYcRIncR6aJmFtQlvWqmV9Qipjq4bYH0wM
      BkNiIBggoWmrYAPEkwQaU6cWpDGpE+tQR2ArW0q1tiRx2iZrknXOoxPbcRw/P53P93z3449k
      SV3bieM7x06/n9d/9f1+d187v/f9Hu53dVzXdRExyrPcA4gsJwUgpikAMU0BiGkKQExTAGKa
      AhDTCg4gl00zMjZBKplc9HOkkilmfxjhkkqmChmtaLLpJCOj43zwPjFxSSbe8++Wz5FMZ5Zv
      nEVIJGZud8nUrW2HvkIHePPgQRpbt/Djg6+zcdeHyMaiZLIZalc3cfniRbbv3EWJz8OFcyeJ
      xTNUROqZHu2jurqaaMZHMjZBdCLKxs0txBLgz07hBqtw40N09sZ5/NH7Cx2xYIcOHCBSv4Z8
      NsnEdJZSJ0Ui4xJLJPAHQkTCHpKeMOnoIN5AGdU1ERyvj5rKsuUe/SYyHPq/dpqaaymtbiDa
      20HXlI/tG9YxHp1k59134XWWe8YbO3DgEFta15DylOHLTnGqq5f1jfXU1TfQ3XuZtS1rGRgY
      IVIeIE2ATDZOfDzKxh27CAe8hQeQzuWJVFdRWlFDf1cn+eQ0bsUq+o68wWD/EN66TdzdVEZv
      /yiOk2ZipJfRwRGynjCBqhrqq4L0TySh8xxdl8ZZt7oOT6aLVKCKkL/g8Yoik8sxcP4Mxzsy
      NDQ048ajVJeXMp5xcXyTjPXHuDyRpmFVNWQHOH7kTX7hyY8v99gLk8/SPx4neeplwo3byMZH
      OHfyFL0Xe2jecherSpZ7wJtx6ekbwHHSpFNBPKlxRqMVdJ/eT3jNJv7jP19m9eoGopVB8o4f
      UiNcvDhAvKyJ+9rqcQq9FSKTnKarb5iG2hrAxc3ncHx+3FyGocEhEqksm7ZtIx2P4eCC6zIy
      PEhlZQR8PgI+D8l0Hic7zXTOT3U4CMDE+BDB8lXURSqL8VcqSDI2QVffKE31lQyMJ6ivqcTj
      QNYFHEhOTZD3hwkH/eQzCTrOdvPAfXtZ4W+eQJ6J8Ukcrw/IMTowQHmkDr/jMjQywfqNrfhX
      +Fni+PgE3qu7qej4KP5wJYnJMWrr6snjkMvlGBgYoqqsBDdQRlnQy1D/IHVr11MRClwPYGpq
      Ct0WJNYUvAcQuZOt8B2cyNJSAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTfLfj
      RbK5LMlsgkQmiZstJRTwURr04/WoP1leSxZAIpPg3cvHeOfSUU4N/JRYOkYqnSfe+VFK/AEq
      wyVsX1fH3m1r2LWxgYDfu1SjiMzLcV3XLeYT5vJZ3uo5zHeOvcBQbHDGY27OT/zcrwAzN/a1
      9ZX86sPbuP+uZu0V5LYqagDR5CTPHvwnfnL52JyPzxfAz+zZ2sgffeI+SoP+Yo0kckNFe7vt
      m7zEX/zwC/Nu/Avx9qnL/NnzrzI4HivWWCI3VJQAEpk4X33j7+mP9hX8XD0Dk/zDv7eTSGWK
      MJnIjRV8EpzP53mu/Wv0TvQUYx4Azl4a4/nvvcMfPL0Hx3GK9rwyWyKT4MzQKc6PnGVyLExJ
      dh1bWmrZ1lJLqOSDfyhacAAdAz/hSM/hYswywxvHu3ns3g1sbVlV9OcWyOVzHOp6g5eOf5vh
      6SEA0qNbyQxPAxCpCPHJj+zgkZ9b94G+MFHQb5bNZ3nx2Au4FPVCEgC5vMsL//suRb5IJVzZ
      +L919Bs81/7P1zb+9xuNJvjad9/m2X1HyeXyt3nC26egAPomerkw2lmsWWY52T1M38jUkj2/
      VT849d/88PT3F/Tm8urRC3zn9ZO3YarlUdAh0I973y7WHHPK511OdA7QtKpiSV9nseLpJEFf
      CR7PnXOeMhYf5aUTL97SOvsOnObh3etoqClboqmKx3Vdftp/gtc6X2W4Zy0bajfzsQ9voaos
      OOfyBe0BzgydKmT1BTlxfvDmC91mw7ER/vKVL/HZb/4xn/6bfbx8+Oxyj7Rg7V0HSGWTt7RO
      Mp3llSPnl2ii4jp1soOvt7/Em90H6bjYx74Dp/mTZ19hdDI+5/KLDsB184zFRxc96EKNRRNL
      /hq36qWOU3RPJElnM0zEUvzr949xvHNguce6Kdd1eXeRn9Oc7B4u8jTFl4tGKfvHr/LUiRzl
      Tv21nw9PxPn2jzrmXGfRAWRyWabTt/aBlQP4yd3SOmNTKyuAVDLJ1IUeNme205BZA0DedTl6
      +vIyT7YwY/GxOX/uy3sJZeY/lBuNJlb8BYnMpUsQi7H9XDeffjtLKHv9CP9s79xv1os+B/B4
      PPg8t3aduDKwmt+Y/hGvVzZzLNdKwp37uOy9gv7bcsPqggX8fj752kEm09P8y6q9cPVPUH8H
      HB8DhPyl+LwVBN0w9WNTVGXCtA7n2DCcoT3s4wfz/BrBgG/FfybjrSjDH4nhK5tksHQ98VTN
      tceqy+fe1ha9dfk8PqpC1YzMcxltNodweCflU+38euI4v7bpVV6MP8Lh1HbyN9gR1VWHFzvi
      knC8XiKf+wxf39dOV7IWgF0bG3hiT+syT3ZzjuPwZOUTTB/YT/PlAUKpPHD9Kls2Mv/eeVNT
      zbyPrRS+Nc1UPbWd/e9c4huxx7lyzAFej8PTD22de51CXnBDpJXOkTMLWrbEX48vUEvG5yMb
      LSfQleN3N/4XDwff4VvTj9KVbZxzvfWrqwoZcUmE7r6Hz7dso6N7mOryINvX1d0xV4J21zYy
      1N0Lsw5nXPIlOeY7Qn1oZ8uSz1Yox3HwP/wMw6kThE/0EU9maFpVwaee2Mld6+vmXKegAHY3
      3cMrZ/5nQcuWhbbiOg5Z35WXzIxVkuhppK2ll2eqvslryd18d/pBYm7pjPU+1DZ3GMstUlnK
      g3fARvF+JZs3E9pzL4m3Zl7Cdnw50l7PnAHc07aaHRvqZz+wAvlKQnzml/fyqSdzJDNZwsEA
      Pu/8RxgFXQbdXLeVqlD1TZfzekoJBprAcUj7f3be4JAajJC8vAofOR4LHeWvq5/nwyUn8F79
      V2ioKaOtOVLIiPI+juNQ81u/ib+pacbPPSVpMs7s29TX1JbzuY/vuWP2cHDldywJ+KgMB2+4
      8UOBAYT8IZ7a/rGbLlca3IjHEwAgPeOk1iF5qYH00JXjyxpvjN8p/x5fqHyBdb5+nn5oC36f
      vilWbN6KCuqe+SKhe++Fqye2npI0aff6RQ3HufLO/1e//QjV5aHlGnXJFXyJ5Rc3P87+0y/P
      +vbXdR7CwU3X/ivjf/+VI4d4TyOOP0ugJorjQFugl680HiK8+/cKHU/m4a2ooPbzf0iqo4Pp
      g+04U0cIeqpp9lawuSnCg7ta2Nlav+Kv/BSqKN8I6xo9z1f2f5FkdvY1+2CgmdrKR6/9IR88
      fIQdZ+a4f8iTp6ztAv6KOAQrKf3Ev+Gt3TR7OZEiKsp9rusjrXz2gd/H55m9QykLtc14F0nP
      2gNclfcwfXY9uUwNoSf/Vhu/3BZFu9F7b8v9/OkjX6K85PqNa15PGcFA84zlMoH5PzzzlEcI
      ffQ5vC0PFGsskRsq6jcddjTu5Mu/9HfsWXsfXsdLOLQZx5n5EnPuAXw+Sn9+L/Vf/nNK2rZ+
      4I87ZeUo+v8WBa7cdHVm6CRH+sbonogTS6evPdbWeYGPHHwLHAdvVRXBHTsoe+IxSjZsKPYY
      Ije1JAG8Vzaf49LkJBPJBLFUisrpOK1T03gjEQLrWnDmOycQuQ2WPACRleyD+21nkQVQAGKa
      AhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKa
      AhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKa
      AhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKa
      AhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKa
      AhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT/h+PuuZLUzlxRQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='food-area,item group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='food-item,area' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='184' name='food&lt;feed pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='foodfeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='foodfeed pie' width='192'>
      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
      g9fu/wENWxWP/RzBEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='food肉蛋' width='192'>
      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
      EQgE58P/BzekEYsnSVK2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='gif area' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif continent  food' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif continent feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif group' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='gif pie' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARA0lEQVR4nO2da0xUV7vH/+xhBnVgCgi0CkghYtUaNQfNFJqaiBKsoUDLgbZpP9Aaa+Ol
      r1WbtEdTb5ijfRuMH15j8B5ToQwmjhobRSFpI2hVYhWqAfsOlBlTGQUZmOkMsPc6H3hnjig3
      YQbW3vP8kolhX9Zee/mbZ1322msCGGMMBMEJwnhngCCehoQkuIKEJLiChCS4goQkuIKEJLiC
      hCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQk
      uIKEJLiChCS4goQkuIKEJLiChPQT8vLyEBAQ4PnExsbCbDZ7JW2bzYYNGzbAZrONOq1AL+SH
      kAExMTFobm5GTEzMeGdlUChCElxBQvo5HR0d+OyzzxAUFIRJkyZhy5YtcLlcAIC6ujosWLAA
      KpUKcXFxOH/+vOe8ixcvYsaMGQgICEBMTAxqamq8kh8S0k8wm82IjY31tCGTk5Nhs9lw8uRJ
      pKenw+Fw4MmTJxAEAZcuXYLdbseRI0dQXFwMURRx9epVFBcX4+HDh2hoaMD27dtx4sQJiKKI
      u3fvYs6cOV7JJ7Uh/YT+2pB///03DAYDLl++3OfYrVu3IjY2FsePH0dhYaFnu06nw+rVq2E2
      m7FmzRro9XoAQEhICDQajVfySRHSj+np6cHkyZNhMpnAGPN8tm3bBqfTiczMTIii6Nne3t6O
      5ORkdHd3Q61W+yRPJKQfExISgri4OBQUFKCjowOSJOHevXv4+eefMX36dDQ0NHiq7K6uLlRW
      VqKxsRHx8fE4ePAgGhsbIYoibt++7bUhJBLSz/nmm2/w5MkTREREQKPR4OOPPwYAhIeH4/vv
      v0dBQQE0Gg1CQ0Nx5MgRTJgwAXq9HsuWLcPcuXMxadIk7NmzB4GB3mn9BdAKugRPUIQkuIKE
      JLiChCS4goQkuIKEJLiChCS4goQkuIKEVAi3bt2CXq9HYGDgc7N2Ojo6cPDgQcyfPx87d+4c
      NB2r1YqCggK89tprMBgM/R7T2NiIGTNmIC8vz7Nt79690Gq1iI+P7zPzp6SkBEePHh32fZCQ
      CsBisWDLli3YvXs3XC4XmpqacPfuXVy6dAkAsHHjRjx+/BjfffcdtFrtgOnYbDasWbMGMTEx
      +Pbbb/s9RpIkHDhwAKmpqdDpdACAP//8E1euXEFTUxMOHz6MAwcOQJIkWK1W1NTU9BF3KEhI
      BTBlyhQYjUYsXrwYKpUKkZGRyMnJgcPhAAAUFRXh66+/RkhIyKDp6HQ6lJaWIj8/f8DZO1eu
      XEFrays++OADzzaLxYKUlBRERERgwYIFCA4ORmdnJ4xGIzIzMwf9EjwLCakABEGASqXy/G02
      m3H+/HksXLjQq9ex2+04ePAgNmzYgKCgIM/26OhoVFVV4dGjR7hx4wY6OzthtVrhdDqRkpLy
      QtcgIRWEJEk4e/Ys1q1bh927d+PVV1/1avrFxcVYtGgRZs6c2Wf7tGnT8PbbbyMhIQGrVq3C
      F198gYqKCmRkZGDlypXQaDTIyspCW1vbkNcgIRWCKIrYs2cPbt26hZKSEq+/zGUymXD9+nV8
      +OGH/e5fsWIFbDYbGhoa4HA4EBoairq6OoSFhcFutyMpKQlGo3HI69CM8VEg2SxgtgeQbBYA
      gNh8/T/bH4DZLJBsD7Ch538RFapFVFjvBwBeDtMiKlSLOQlRXsvLgQMHEBMTg48++giC4P04
      c/LkSRQVFaGoqKjP9gsXLqC6utrzBbDb7Th37hw2bdqEU6dOQa/XQ61WIy0tDdXV1UNeh4R8
      QSSbBaL5OrrrjBDN14c8vqXNjpY2O2Dqf/+c+CjMSYjCh0tG/k7Kw4cPcfv2bRQWFvpERgDY
      vHkzNm/e7Pm7uroahw8fxqFDh/ocV1ZWBr1eD51Oh6ioKFRWViI7Oxvl5eWYNm3akNehKnsY
      SDYLXNX74TB8AvvhdDgvbBmWjMOh1tSCksu1yPqfEqz851kUX65F7b9bXiiNpqYmlJaWIjg4
      uM9iANu2bYPNZkNycjICAgKQkpKCjRs39nnJy2AweIZlnn4RLC8vz7O4wHCHbf744w/cunUL
      S5cuBQAsXboUbW1t0Gq1uHnzJrKysoZMgyboDkL376fRVb0fku3BiNP42LplROdFhWnx4ZI5
      SP2v+BFfW46QkP0g2Sxei4IjFdJNVJgW/8jRe7W9yTMk5FNINgu6qvej+/ehe4PDZbRCupkT
      H4V//Lfe0zFSKiQkekXsrjOi6+p+r6ftLSHdfLBkzqg6QLzj90JKNgv+NnwyqnbiYHhbSEDZ
      1bhf97Jd1fthP5zuMxl9RUubHZsPVaCiZoCxJBnjl0K6h3F8UUWPJfvKrmFf2bXxzoZX8Tsh
      3R0XucvopqLGhM0HK8Y7G17Dr4R0txe92YvmgVpTC1b+8+wLD6jziN8I6evOy3jT0mbHvlPy
      r779Qkj3QLdSZXTT0maXffXtF0IOdyKEEqg1taD4cu14Z2PEKF7I7t9PK6YDM1xKRjBBgxcU
      LaS7qvZHNh+qkKWUihXS3YnxZ/adutY7F1NGKFbI0U4bUwItbXbZtScVKaRksyhurHGkVNSY
      ZFV1K1JIf203DoScoqTihBTN1/1miGe41JpaZBMlFSekq9q/hniGi1yipKKEpOg4MHKJkooS
      kqLj4MjhWbdihHS/L00MjOcdcY5RjJDddTTMMxwucz7LXDFCUnQcHry3IxUhJFXXw6fW1MJ1
      ta0IIUnGF6PWxG+UVMRiU9R+HB4RqieIFNrR0ywAnC7RInshqboeGLeAs9RNmKVpwix1U++O
      fwPA8Nf9HktkLyTz8xk9TzOggP0gmq9DFePdJZ+9geyFdC8W6o9EqJ70yqduQqSqfVABn0Wy
      WaACCel1pHb/iZCjEfBZeC032QupZLwp4LMwTmsW2QvJa8GOBF8KKBdkL6ScX1MYTwF5LTfZ
      CymnCMlTBOS13GQvJK/fdDdvTfiNCwGfhddyk72Qgm4qt4ULAKtCzo53FvpF0E0d7yz0i+yf
      ZQfoosc7C7KE13KTvZC8ftOJkSF7IYmRweNjQ0ABQvJa9RAjQ/ZCCi9RlT0SeC03+QtJEXJE
      8FpusheS17YQzwi6qdyWm+yFBAD17KF/ZZT4f3hudytCSFUsn992XuE1OgIKEVI9O3u8syAr
      Ajn+AitCSIAGyIcLz+1HQEFCBlKUHBa8l5NihOR1XI03eK6uAQUJqZ6dzXVVxAO8V9eAgoQE
      APXrNPwzGBPSd413FoZEWUJSlBwQOURHQGFCAkBQ8urxzgKXyCE6AgoUUhWzUBaRYCyRU5ko
      TkiAouSzyKk8FCmkKmYhPd/+D+rZWbKJjoBChQQAjYyigq8QdFNlVw6KFVLQRWNS7tHxzsa4
      IeimYkL6Lm7nPQ6EYoUEeqtuf5UyUKZDYIoWEvDP9qR6dpasOjJPE8AYY+OdibHAYfjEL1ba
      lXut4DdCAsqXUtBNhXbFxfHOxqhQfJX9NBPSCxQ7b1LQTcVEGUdGN34VIYHepYydF7YoKlIq
      ITK68Tsh3biq96Prqvx/rFPzxmrZdmD6w2+FBIDu30/DeWHLeGdjRAi6qQicna0oGQE/FxLo
      /XkMh+GT8c7GC+Ee9JbjOONQ+L2QQG+7srvOKIsqXD07C5rk1bJ7AjNcSMin4LnDo4pZiKDk
      1YqMik9DQvYDT2IquXruDxJyEETzdTgvbB6XJaPdM3X8bRGEMRXSbDYjOTkZZrPZsy03Nxel
      paVeu0ZhYSGSk5ORnJzstTTdbcye30/7VE53zzkwVj4zvL3NmC96n5ubi8LCwrG+7KgQdNEI
      Su4d73PLKZqvj7pKF3RTEaCLhvr13km0Su2ovAiy/xWGscYtJ9AbOZntASSbxfPbgcxmgWR7
      4PnXLZ37kaV7YSxBF+23UXBQ2BjS3NzMvvzyy3731dbWsqSkJCYIAouMjGTHjh1joigOua+5
      uZllZGQwlUrFNBoNi46OZlVVVWN2T4R3GXMhY2JiGADPZ+vWray9vZ0tX76cnTp1ivX09LD6
      +nqWlpbGqqqqBt3X1dXF8vLy2L59+5jL5WIul4tt376dhJQxXLQhf/31V7z88svIzs6GIAhI
      TExEfn4+KioqoFKpBtwXGxuLV155BWvXroUg9E5cCg4OHutbIryIrKef9fT0QBAEj4yE/OHi
      f3LmzJl4+PAhTp8+DVEU0dDQgGPHjiE1NXXQfeHh4aivr8eZM2cgSRIePHiAmpqa8b4dYjSM
      ZfvAF52aq1evssTERCYIAps3bx7Lzs6mNqSMoSc1BFdwUWUThBsSkuAKEpLgChKS4AoSkuAK
      EpLgChKS4AqvCmkwGBAQEPDcZ9eu3vWt79+/jzfffBOBgYHQ6XTYuXMnXC5Xv2lduXIFs2bN
      gkqlQlRUFI4fPw5JkgAAkiTh+PHjiIqKgkqlwty5c3Hv3j0AwN69e6HVahEfH9/nqU1JSQmO
      HpX/yg6Kx5ej7l1dXWzt2rXs5s2bzOFwsHfffZeVlZWxnp4e1tLSwnJyctiRI0eeO++vv/5i
      S5YsYdXV1UwURVZfX88WL17MKisrGWOMnTlzhr311lusvr6eiaLIGhsbWWtrK2tqamI5OTnM
      arWyy5cvs5UrVzJRFFlLSwv76quvWGdnpy9vl/ACPq2y79y5g6CgIMyfPx+tra0ICgpCWloa
      VCoVIiMjsW7dOjx69Oi585qampCQkIA33nijzwwfq9WK7u5ulJSUYMeOHUhMTIQgCIiLi0NY
      WBgsFgtSUlIQERGBBQsWIDg4GJ2dnTAajcjMzIRWq/Xl7RJewGdCSpKEEydOICMjA4IgYMqU
      KYiIiEBZWRlEUYTVasWJEyewaNGi5859/fXX0d7ejkuXLkGSJDQ0NODixYtYuHAhWltbIQgC
      5s+f/9x50dHRqKqqwqNHj3Djxg10dnbCarXC6XQiJSXFV7dKeBNfhd67d++yzz//nHV1dXm2
      uVwulp+fzwCw0NBQZjAYBjzfarWyJUuWMAAsLi7OM2GiubmZLVu2jC1evJhpNBqmUqlYRkYG
      a25uZowxdujQIRYSEsKmT5/O7ty5w4qKipjJZGKffvopU6vVLDMzk7W2tvrqtolR4rMI+cMP
      P2D58uVQq9UAAJfLhU2bNuGdd95BT08P6uvrUV5eDoPB8Ny5bW1tWL9+PXbt2gVRFFFeXo59
      +/bh2rVrAACtVot//etfcDgccDgcSE1NRUFBASRJwooVK2Cz2dDQ0ACHw4HQ0FDU1dUhLCwM
      drsdSUlJMBqNvrptYpT4REiTyQSLxYLU1FTPtt9++w1OpxPvvfeepw2Zn5+PCxcuPHd+ZWUl
      ZsyYAb1e72lD5uTk4KeffsLkyZMRGRmJl156CSqVChqNBrm5uWhtbUVnZ6cnDbvdjnPnziE9
      PR0tLS3Q6/VQq9VIS0tDa2urL26b8AI+EdJoNCIrK6tPJyI2NhYmkwkVFRUQRREdHR0oKytD
      RETEc+cnJCTgl19+QW1tLSRJgtVqxY8//oi4uDhMnDgRSUlJ2LlzJzo6OtDV1QWDwYDExETo
      dDpPGmVlZdDr9dDpdIiKisK1a9fQ3d2N8vJyhIeH++K2CW/g7TaAxWJh77//Pnv8+PFz+27c
      uMHmzZvHBEFgEydOZKtWrWI2m40xxlhpaSnLzc31HGs0Gll8fDwDwMLDw9mOHTuY0+lkjDHm
      dDrZjh07WEhICNNoNCwnJ6dPu/D+/fts/fr1fY6nNqQ8oAm6BFfQo0OCK0hIgitISIIrSEiC
      K0hIgitISIIrSEiCK0hIgitISIIrSEiCK0hIgitISIIrSEiCK/4PRj9btAeAUUkAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='item code' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='map点' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='milk' width='192'>
      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
      Uf8fFWgM74zegN8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='rank' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='rank2013' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d2Ad1bmv/czM7kW7qfdeLMsVd1ww4IJpNpgaYnpCCJAEUk7KveSe5Mu9
      KYeckx5CN82AMWBcce9VbpJsFat3aUvavc/3h4ywKQEXMKB5/rL3rFnzzmj9ZlZ533cJsizL
      KCgMQwRBEMSLbYSCwsVEEYDCsEYRgMKwRhGAwrBGEYDCsEYRgMKwRhGAwrBGEYDCsEYRgMKw
      RhGAwrBGEYDC50ukly1P/oIf/HULIUAO9bDmf37Gf62pudiWAYoAFD5vVA4mzb0cXdUGDjkj
      9NfsY78/n6smpl9sywBQXWwDFL7+6DImcMsl63hx+Q6m606SXDaFzDgdwb4mtry7nF3VfaSW
      Xs591xSwZe0qth1qImZOY/r8a7m0NJmq1X+lMW4aQs0+pAnXML806YLZpnwBFD5/BCMjFt2K
      adNfWdMgMH5MCTrZz+Ft73I8VsS1ixcyIrwFX1QiPncMCxYtYlpumD1r19E8AK2H1vDGu5uJ
      ZE3mkmzbBTVN+QIofCFIplLmXlHA2/IY8lL1xLx9VO9fz9b6eGr2aUlKSyXP08nBzW9RXtuH
      x9ONmDGDcARklYHCiVex4LIC1BfYLkUACl8IAgI6oxFVUIUECJKELbmACSMW8q2FEzBLXqp3
      vkltKJuHf/ljAkdf4Y0dQQAklQqL3XrBGz8oAlC4SIgaPaMnT+fQKy/y8x0vkZ5TwF3XjsLk
      XMbvf91AZqqakOD43O0QlIgwhS8EWSYSChBCjV6rQkAmFo0SDPgJRWKIkgqTQUvA7ycUAZVa
      QhBEtFod0aCbmMqITn1hh6yCIAiKABSGLUpIpMKwRxGAwrBGEYDCsEYRgMKwRhGAwrBGWQdQ
      +FoSDAaJRCIfe0yj0aBWDy6rKQJQOE9koiEvHU0NtPa4EXQ2MnNzSIjTIod9tNVW0ToQw5yU
      TVFOAipkwv4BOppbccl2cotS0AO+/naOVNWDykRafgEZNv15WfXqslfZsWPHxx67afFNXH75
      5YAiAIXzJkzb8d2sfe8YQb0Wf383przLuPHa6QSPreK5lZWY4030t29m3kPfY5Khg+3bd1N7
      /BAV7SP5we9uJRPwN5Zz+HAT/p5mundN59GH52E/D6tGjxqN1Wr92GM5OTlD/1YEoHB+xASM
      8XnMvmEMaelWOg6+zvNryulylVK7di226Y9z73QLNa/+mqfeq2bcjWlkFY0nxeqj/o0PqrHn
      TebesnmEG9fyk58fpZ3zE0BPbw+NDY2kZ6Sz8PqFn1hOGQQrnB+CCltKNjmZDgSfk+qKWiRr
      DlZTOydP2CkdmYpWY6JkdAHOQ1X06qzk5uWSHKdDOK2asMZIU/VB3nxzG+YrLqXgPM1yuVx0
      dnXS19f3b8spXwCF80MQEOQwvQ0VbFj1Nici+Sy6dS4phmpiMRFRGmzmgikOo8dH8BOqcTr7
      ePK5FWhsqYzNiSMqwxkKOUvGjB5DamoqAHv27jnjWFZmFsnJyYAiAIXzJsZA8yFeXbqSaNEs
      vn3tLBJ0AhCH2dJPX38Y4tX42prxZIzkk8JZkpOT+NV//gJn/Qb++P/eJGtcKePjzt2qbdu3
      /dtBsCIAhQtDxEPVzu30WMdz74Lppxo/QApl4wy8vWUv0xPS2bjmMKWX3YHpE6ppLN9C6ujp
      6CURnzdA+Dw75/PnzefSaZd+7DGH4wM3a8UbVOH88Pey6bW/8OyGuqGfLCNm8+CdN5Nt6OXd
      fz3BqsoA+TNv45Hbp+A+to4nn3uJ6u73S1uZdd8jXOLfxB+XbkeyZHHlN+/lxvHpCOfRBXrh
      hRfYvmM7xcXFfP973//YMoo7tMLXlr1791J3so6kpCRmXzb7Y8soAlAY1ijxAArDnk8cBHu9
      3k/0pVBQ+LrwiQLw+/0Eg580a6vwdeTAiRb2VjVdbDO+UD5RAPHx8V+kHQpfAt7e28iK3Q0X
      24wvFGUMoDCsUQSgMKw5y5VgmaCznu0bNnOk2YUjdzyzLy+k+Z2dxC24nlLLeaxcfNEEu9m9
      /hiGieMZlXhua+7+gQb276oia8p8Mi0X2L6vGKIoMKU0i4kjMhEFkaMn29h0oJZwNDZURhIF
      8tLiGV+Uzu6KRurbnQCkJ1i4amoJtc097DjaQDAcwWbWM3FEJrIss/FALZHT6gFQSSIF6QmM
      LUpjS3kdrd0DAFxSnM4VlxQC4AuGeXHdAdzeIPMmF1OclYgoCJxs62X17uODdp/NTUbd7ax7
      eSnbuoxMmzWD3ESJgKeTivVbafCeWXag6RB//dc/qWh1n92TvED4uut59l9PsLPG+fEFwgNU
      7DzIyT7vxx//DIS8HRzes4fOc6/ia4Neo8JmNrDjSAPbDp9kTH4ahZkJZ5QpzExk1tg8jHoN
      9jgDAFaTnmumldLQ7iQr2caYglQ0aokbZo3CEWcg0WZCJZ3ZTEVBYHxROhNKMlCJIonWDxws
      ijISqWzoZNWuKt7bX43HF8Js0JKZZGXzwTpW7apiX1UzgWAYOJsvgByluWoj5V0J3PzQDRQ7
      pFMHTrKZGO6eZqoHPMT0drLTEzEm5LLw6iQsdiOBvjZaB6JIUR++kIAjPYcks4Crs512p5so
      aqyJKYM3+2FJxkI4O7vxhkL4/H5ErRmTFtwDbkSjg7TUJDShXppau/GFY2hMDtJT4tFakpm/
      4EYMNgsRdyf1PWG0sg9PIIY1NZvU0+48FvbT095CjyeEqNKTmJ6J3RChu76ToE7E3+8mqrGS
      kZmEQZJxOzvp6B5goKcVb/QzP8GvNd5AmJU7KwEw6NRkJVvRqKQzylQ1dFLV0MmMMblEY4Nv
      dIfFgNPtY0v5SXJT7eSlxaMSRf71zh6SbCamjMzmwyu1MVlmT2UTeyqbmDE694xjep2ajQdr
      ae91Df2W7DDT1efhSF0bgdCZU/tnIYAYnnYnojUPu1X1IT8NPzUHttLbU0NFk57bH3uA4sBh
      Xlyzj3mLv4N+/7P8aquGKYVqOo9XEJ78MD+7MY3qvdvYcaIFr8dLOGUMd9+ygAyL5szrBjrZ
      8NwzVIhmzLKLli4XmQWlqNwtnGyPsOiRnzHGf4S175Uz4PXQP2Bk9jfuYJKlhzdeeYlR1/+E
      stZX+dkyP3PHGOg8foyekrv49c0fzHIFXd0c2LySY51hwh4n5rLbuetGA2//6gm6Zk4irrOO
      yhq47kcPMcXQwlvL3qbBo0KFl+6g4k/4Pka9hvmTirGZ9XgDYWpaej71nN4BHzaznlsuH4NW
      o0KSRNRqCYLhjzT8j+P0MmpJJD3RyrzJxbi8AY43dlJR34lJryU7xc6Nl42m3+2jvKaNtp7B
      LtPZDYKFwQt+1DAthdMW8q3v3cMMk5f6nsCHjktYMkez6M7v8siiMhqrW/HJKoxGDcGgF1df
      OweOHafP9eHz3kdPxoR5fOv+uxmZriOh9DK+9fAjjIlrpLXXj6g3oo2F8LlctB8/zJGW/o8Y
      bkwqZsEd3+Gx2ybRUdfK6b0WUSWhVasIer04O1up3H+c/lN250y8jm997x5mJsZo7/HScuwA
      LbESlnz/MR64cx7Z5xe6+rVCjsm4/UF6BrxIooBBq/nUc/o9ft7aVkFbrwu3P0gwFEGOnZt3
      TlSWWb/vBD39HkRBYMHUEaQnWGjrGWBvZRMDHj/xViNzJxZhNQ3+4T7760sQMaclENt3ks7u
      AEnJWuRYDFmQARUmkwGVuh+1KBL5sP2CiEZnQKuRhqLxA40HeXFTPTNuuJUMTxX/2tr0bxSv
      Rq/XIAkColqLQa9DEnVodYDcxY7XVtCVfg3fvFbLzmfexP2R6wuotUZ0WgmNWo1wxucrRlvF
      Rnaf0DL75iXo6lexbMv7Fagwmoyo1B5Uooggy4T8IbQGG0a9CvrE84nZ+FohCAKhSJS1e06g
      lkSmleUwqTSTd3ZUfuq5HU43nX1upo/KxWbWEwyfY79Shn2VzYQiUVSSyJyJRRRnJ7L5YB3b
      j9QTicawmvRce2kpjlNjkLMQgER6wQzGZT3P28uX4yxLJxqDrKJz27FDFkCQovh7umnr68Tl
      GxyUeDpqafYYyc5NQf+Zvk8CAhKR0ABdLVG6Btxnl0deBmIisViA/t52Yq09BEj8+LKiREJu
      OtGD+9i4XoMtXM1HPnbDlGS7mallWfQO+JBlGFOYxp6KRvRaNYk2Ex29biwmHXlpDkZkJ+EL
      hBEFgfp2J9kpdpJsZkqyE1m1q4qYHGNsYRqp8XEUZMTT586kob2PHpeXFHscJ9t7SbabyUqy
      MSI7Cf+p7pLLG2Dm2Fwa2p2oJInR+Sm8uO4gYwpSyUl10Ol0k2g1oVZJON1+AKTHH3/88c96
      k6LWTHZuJhpXK9X17QimVPLzMzCpDaSU5OPQAmiIz8khyaxBpY8jIyMDo0ZE58ggL9WCChnB
      nErZyDzSRB819R1o47PJL8ynODuVqhW/Z11nOmNL09CJQxcmISudpDg9gqQhOS2bBLMGBIHE
      zHGUFdnobqilXzaTlVdAQWEeqXY9ktZAakYuFr2IZEmjKNOOCpANSYzIjUct6kjOzSQjORkp
      0EpTZ5CkwlIKMrLIyUtEK+tIKconXgeyrCE+J5fcjHTiND4a6pqImNMpKsgjNy+HOO0FblEX
      gf3Hm9lX1XxO50ajMWxmPSXZScRbjFQ1drK3son89Himjsymrq2XRKuJiSOyUEkiWrUKk15L
      W48Ls0FLfpqDHUcbON7UhVqSmD46lxRHHOFIDIfFiDcQIslqYmJpJkfq2slJsTO+KB2VNNh9
      NerVVDZ04g9EKM1Nxm42sOVQHSeauulz+wdty0oiEpPZUl5Hp9NN15H1v/xyuUMHqvj7E3uY
      9cBtFFk1SvfiC+Zvb+7kL8s/PozwXFBJIhNKMvAFwhytayd2Hk1No5KYOTaPhnbnZxpcfxYq
      lv5I+HJNYWjzWfJIHlqD0vi/DkSiMfZVNROT5fNq/AChSJTN5R9dEDtfvlwCENToDRfbCIUL
      yYVssOHIhW388GUTgMJFZWyunbuvyLvYZnxhPLpUEYDCaRSkmrGrvxw7uH8RPIriDaowzFEE
      oDCsUQSgMKw5qzGAq/koz6xYw5QF9zIx99NWgPvZ9dJyGpIv5cYZuUTDYSSNDrWkTHB+HZFl
      mc6ubpa/uRJZjnHLzTfgsNvOOH7iRC3PPP8SDQ1NOBwOvn3/nRQXF7Bm7QZWvPUuqakpLLnj
      FvJys+nq6ubFl1/nwMHD5Ofn8r2HvoX9tPpaWtr401+fpO5kAypJYu6c2Sy+4To2btrGG2++
      g16v464ltzFxwjgam1pY+tIyjlUcx2qJ45abFjJt2mTgLAUQDQfo7e3BH/osvhpRfP1OBkwh
      PM4TrHl7FyXzbmdMuuI99nUkHI6wZetORpQU4vP5iUY+2kY0Wg3337uErMx0TtY3suKtVSQm
      OEhPS+UPv/sV+w+Us3ffQRIT4lm5aj25udk8+MA9+P1BDAbdGXX19DqZMnkCj/+vH6PXDR6r
      qamjobGJ/3niN/j8fpa+uIzcnGxEUeDmxQv58WOZ1Dc0snbdRgoL8oHzmAXyth9h6652BN0A
      7e1esiZfzYzSBOSBRnZu3kGNs5+Wylas6aDSxJFXWEiiRU/U28T6dzbT6g6jcuQxZ840Ukxn
      5b2j8CVEo1Fz8+Lr6enpZf+BQx85LggCuTlZAAQCQbq7e0hJTsJsNjMuOQm/P4DfH8BhtxEI
      BvF4PCy6fgE6nQ6d7szGL8sygUAAs8mESvog5sDn82MyGdHpdBiNBrKyMmhobGLCJWMBCIVC
      9PcPYLNZ0eoGfVfOWQC+tkOsXdPG7CXTyfFs5fVnt1D0mxmceOUldscKmFqWQ7CmmSgQcDWx
      d/NmpIIZJGk9SLYsCtJinNzxNq9Zsnn48uxzNUPhK0QgEGDlqnW8t2ELZSNHcN018zEY9Ljd
      Hn7/X3+moCCPOVfMIhKN0tjUwu//6y/09fdzybgx3HLzQoxGIzAogL6+fpa9/hbLXl9BQUEe
      Ny66hpzcLNa9t4nvPfpTVCo1KpWE4dTK6pp1G3ln5RpysrO4esEcrJbBMNjzWAeQMDtyGDtl
      KukdfaxY1Y6/u4EtrUbmfusKpqRGiR6poOZDZwX9Axza+CrHu7y4uppISfecuwkKXym0Wi1X
      zbuS6dOmcORoBRs2bWPxDddiNBr4zgP3sHXrTvYfPEzpiCJSkhO5afFCjEYD69/bzLr1m7ju
      2qsQRRFBEJh92QymTJ5AOBxm/8HDvLdhKzcsuprvfudeAoHBfFYr3l5NUtJgWOasGVMZN3YU
      FRXH2bvvIAnxgxmiz2sWSBAkBFFAEE75xavUaKMBPP4IsWiYYCjMh3uCJ9Y8Q1vJffzP3/7K
      968vRa8sxQ0LZFmms7OLaDRKYmI8Y0aX4fa4aWpuobOrG5vVwoiSIjo6OlGr1DjsduSYjN1m
      JSc7E38gSOxUGGU0GqW7u4dIJILDYScnOxO1SkXAHyQaixEXZ8btdtPe3kFGRho9vU4CgSDx
      DjujR5USCATo7R2MFb+wzc+axWUlGt5Z+g+qkk301fViOzNkk4S8YnzL3+aZcC5yfR/Rsgtq
      gcJFwu8P8Nrrb1FTW0dnVzfbd+xh6pSJTJgwlqPHKhk3ZhSHj1ZQfujo0AA5LzcbnVbLuvWb
      aGlpA2D8uNHYbBYKC/NY9voKotEoWo2Ga66Zh9PZz779B5l92QxaWtvYtXs/Pr8PZJg4cRwm
      k5E33niHlrY2goEgEyeMw2G3cbD8CNt37CEQCCAjk5KSjOPUF+Cs3KEjAQ/t3b1Y4lPRR/vp
      cIokZjrQhvpoaAqRnJ+I5OmhsbmToKBGK2kwOpKIN0bo7XZhSkzHEHNSV9dGWG3CrAkRNaWT
      Ha94wH0Z6O1upbe79ZzOjUQinKxvxOv1Df1mt9vo7u6mtraeqxfMJRKJ0N7eSTAURKPRkJGe
      hl6vo6u7h56eXvR6PWmpyej1eoLBEK1t7Xg8HmxWK2lpKWzdtouu7h4W33AtwWCItrZ23B4v
      RqOB9LQUtFotjU0tDAy40Ot1ZGamo9Nq8Xi9tLd34vP5UKvVpCQnYbVaKCmboqRHV/iA8xHA
      xxEKhamoPI7DYSMjPe1DoahnRyAYpLz8CAX5ucTHOz79hM9AUekkRQAKH3ChBfBlp6h0krI/
      gMLwRpmDURhCW7GOuE1PXWwzvlAUASgMIQQ9SAPtF9uMLxSlC6QwrFEEoDCsOYsukEwk5MPr
      i6A3W9BIMuGAB29QwGT+mKS250vUj7M3iCnRyvsJ9mLRIG5nH55QFFGtw2qzoVdfTA3LREN+
      Bvr78csGkpKsQw9UjkXx9HXiiumJt1nQXvAH9NVD0JkRDHEQixHz9EIkBCototEKogrZ24cc
      8oEgIprjQaWBcHCwrPyhgHhJhWi0gUqLHPQh+/pBUiOa7CCpIBIi5nFCNAwaw+A1gJi3D0L+
      oWrOSgDdNZtYtqqBuXd9l+L4KC3lb/PmAYHF37yNjI9Lse/pZN+RLrInjsDkaqeuJ0hOdg5G
      zWdoDH37+P3393Pbiz9g5KmfWstX8uKKA7hlEckQx9h5d7JwvJHG8lrIKSHL+km5KGO4u5to
      65HIKMzAIH1CsbMlGuTknpW8+M5uQmmX86NHFmA9dSjobubV/3yYNwOX8vMf38fkHNsFSvUS
      prephjavhcKCNLRfkVGcoDWhn7kEKSEHohFC1TsIHlqNKnMU2jFXIRosRBoOENj/FlJyIbpJ
      ixE0Ogj58O9+jUjjaR6mkhp1wRS0o+YgaAxEmo8S2Ps6qowytOOuQVDrIBYhcHAlkYZytOOu
      Rp01BmSZcMNBgodWI/sHs0d/vo8vGsI94CEsw0DDAd7c0c2S2zMw2j89aepHiXB000qkyT/n
      f8/PJtzXQE2/CDjZ9eIyhCWP/RsBRGk/sZ3Vuwws/m4GhgsVkhDyUlfdSPz0Jdy9YBSnr2cH
      eqvoVV/CjHiRurY+JmXbzmvn8w+QiQS9eHw6zjGH7EVBSsoj5unDt/FfCGod+qm3IlqSiPU0
      4lv7JxBFdJdcj2hLQ1M8A//2F4i2n0CVORp13oQzBCCa41FnlBHY9SqR1koElRY5EiTa3Yj3
      rd8gBzyossagKZxKrH9wUO9Z8f9BLIp2zDykpDwiDeXABRTAxqce5aA/j/7qQwyYyvj2Dx+i
      NNDJgZMdpHYeZs2Tz7C1IUzV/t2Mvukn/HCGmtUvP89b+5pJLJ3NHXfcQJFDonLt33hq+SG8
      qjDOgYLTriBi0Eo0VB6mdVo6WfF5jDH3sv3VF3nz4B78zY+wf/RkvnnvXaj2Psdf39mLHxuX
      XH8HNxR08Oc/vkq1W2TfsXe49gd/YVFWJ+++/ByrDzSTOHoBd37zevK0rSz77z+x7kQfxtxp
      3H/vDYxINg++uYOtvPXPv/PuoW4SRs5myTeuJrj5v/n78j2EtAco33sdv/3PW3l/jbKn6jB9
      xbO4zrCTt6oaiU3JIdC0n6dW74LuZipaY4yYMA5tfwUH64JMuu5+bplbRKx2Db/+w+t0i/HM
      vOkeFk9M5dimN6kliciJzXjG38fMaAutPjVlo6J0V29j6XNvcKwzwqibHuOeET7eeOkZtlf3
      Y84cz0133sXkzC+Hq4loSQJBQA75iAXcSLY0wnV7Bo85MkCWibm6iA10ItnTiHbUIprjiTnb
      zqzHZCfmdRLpqIZYdLDbBMT6BhfxBJMDdc5YIh01IEqIBhuoNMi+AeSAd7B7JQ72Qi6YALpb
      6pHG38dP7vsGW574DqsP3kxp7gD1jZ2oHQu4+d47ce/o5o7b7yDT4mfHy0upkIv51gNzOb5p
      FW+v3MGSCe384c0QD//qzxQHt/GLHx0+/baZctcv8b/yNL97bDXqzInc98DtTF18K817XbDk
      UW4eaUMQAtRnTeTeBy8l2l7Ok2s3MGHsnTz4yGJW7Tay+DsLSVW72P7mO1TLZdz73euoeW8Z
      y5Ynszh7D5ukafz8V5NRhcPo4k4F6sgutj/7Dw6Y5/GHv4zg2Ot/5cnXd/DLWx/k7j4z7dlX
      s+SKIobSg8a62bv9BCU3PUSp2MWTzxyjIzITi7+fhrYQN931Q65zbuHZFXXMueenLHCu4MmX
      t9BU3Mcrf9rDlDsfIs19jOdefoPC/G/ibT3KioNN3Pmdb3NrqZWDyzvo8Djwe+pY+pdlJN7y
      E/46Np4+TxBB0DH+ytsZO09N3ZZlrFmxg/yHr+Ri7/kZaT6KOmcc1vufQo6Gkf0uAq5ukFTo
      Z92DOms03pW/R/a7CVVuQn/Z3Rhm30+48RD+Lc+eWZnGgKZwGtqyKxG0RkI1uwjseImYqwvj
      tf+BKr2E0NH1RBoPEfM4iSbmEXfbbxFUGqLePkKVm0A4JwEIxOQYMTkGxAiHI8iyAVEESaPF
      npCISRuHyfThb70w6AciCIiCiBj00tHZQl1zG9H+k4jYyMtOYKB2M9Hx1zI6QQs9GlQf6jNo
      zWnMv+9nXHFLB9uf+x1/enYP//dH+QjCoEu2KIrg6eLQ5vUc8YLe10lnv4MonHLZFhBEEUJB
      ulpqqGrsIOquRSSN4hw78flTGLF/K68va8GSkMuMuTNw6IFIH02NZi5ZUohZZ6NkZBF9a7uI
      xuTBa4uD137f2kjnIXZWRUgpf5c18kmC1RXsbrmPuQBxFpLMBiSXmjibDUecCZ1gxxxzE2pv
      paa/HXHzGqqAtJwszFoVXsHEqFlXMK00A0n8IH4i6m/BFxrDxPGZaDWQrFHRXL6TDav241Hp
      8LT0IOXHPtNGE587cgz/lmfwb3kGBBH97PuJ9jZDNIJ/wz8ImBPQjb+G0IkdaIqmEzzwNt63
      f4s6ZxzasVfh3/w0xE4514f9hGp3E9j3JsSi6CZcjyprNKFj7+F9+zeg1qHOm4h27AL8W58j
      WL6SYPlKkNRoR81BDvqG6joLAQgYTQnIwT3UtXSSZ1Bx4uhJZMvlGHWffrYoqQh5vXhCYWIm
      LXabnRR9GffePQdLzE1/QEBdnUh0dy2t/pHYXG58sdNH/gPsX1+OY/xEMuNsJMfrCNUEkZFQ
      awJ0On3EZAtCTy3rj0b51u9/QGbDe7Q9dxwQECXwB90EgmFkrRqrI5ksw3juWXIF1qiX/kCE
      QEjNtTffQrCvmpUvbGRnVhEF03IRJDNJyV72H23iylw9DXWNmA0lg4L76F+atkP7cY+czPwk
      IzCSWWMPs3NvE3PG/PtnpLLHk6o2M37ht5mXZ8Td3kVMr6JDpcVoNPDhCS9Rm4hW9S4VxzvJ
      LrHhdvXSfKKGYPI0vnX7RCpe+iObL84WbR9FVCEYrcjeftQ54wa7Ma5OpJRCZG8/cjSMoNYh
      Gm2IcQnI0QjIMnI0PNhlOe1lGHP3gqRGsqYQ7WsFWQZZRpU5mmhXPXLATczTi2SfBSoNglqH
      7HcjJeWiShtBYO8bg+dwlgIwpZayYMZJXnz+f/FGv0DGmCu4bd4E4iRQaw1oVINGqjQGtCoB
      RBV6nQZRAHtmMSN12/ndTx9m5E0/5b4rLqPu+Vf5yQOvIcVlMPvG27lmwg3Mf+9xfvrgRrJy
      HATE+NMWKtQwcIQ//2IpvT6ISx/Fdx+YiRU1E+eN5LfP/Ywf7ZjCnXdew7zCtTzx6A8pyUsl
      JJmRBBVJmaOIj/yN/3x4Kwt+9N9cMWM2tc+/wo+/8woaazZX3ngHEy0VvPD0Kmr6A+iSxnNP
      un3wrS5amXrL9dT97TkeXOnCnDmOxXdMRK8RUGu0aE6f4oz1UlXpZ8aCu1gwJRmQ8ac7eezV
      I3SMdaDXahEFAUFSo9VqEQUQRDVavRZ10gTuv7mKJ37zPZYJKhKyZ3L/g/NQabRoT9tvS1Jr
      0WpUaE0FXHvTeJY+9XNWuARG3vg9bi0pZP1TL/AflVsZmW7EqFd9ORINiyLGKx9ElVFKbKAT
      7/q/DTbK7LHo5n8fQWcmuH8FkeajyL4BDHMeRLIkE+tvw7vhnwgaA7oJiwjX7qy+guUAACAA
      SURBVCHSUU20tQrD3IeQ4hIIVmwkfPQ9NAWTMc57BEFvJjbQgX/bCwiihG7iDWjLriTm7cO/
      5VmiPY1DZineoApDeNf+Cd/qP15sMz4WKaUQVfpIQsfeG5rCPF8S//uk4g2q8NVA9rkI1+5B
      9l/YPt1XZBlFYbgTG+j4XOpVBKAwRDgK3uDFtuKLRRGAwhANXVBecbGt+GJRxgAKwxpFAArD
      GkUACsOas3KH9jobObBjLx3+wcUbe0YBo8tKiL8A/sWBzhNsa5G4YlzeeaXPUPhyI2l1pIyZ
      RMDVR0/VEfSORBJHjkNjNNF5ZD+ulgbUBhPpU2ahNhjpO1lNz/EjyNEPcgwKkgp7fgmOghLC
      Pi9tB3YSHOgDIC4jh8SR4xFEkY5De4gE/KReMg21fjCvaCwaobvyEH0nq4Gz+gLIuNqPsXXz
      LgZiBnRSiENrlrN2fwPnvll6K6v++jf2toGvaR/PrjuIsiz39caeX0LO5VeTOv5SBFEkLi0T
      ncWGpNWRNXMuhoQUsmdfhTEhBTkaI2PqbCyZZ27cZ8nIJmPKLBAEdFY7ObMXoNLp0dkcFF97
      GyqdHpBR6fTIsSiRgJ+w30s0HMSWU4A5LXOorrOeBTIn5zH9iqspNPdhdLZS2d5LmGzwhhA1
      EpFwDI1OTTQYIByNARIavR41UQLBAJGoDAhIag06rY2xc+ais4M8fNLRDFu0Fhv2vCK6Kw8h
      qjTIsRg9J47RXXUEtcFIzmVXYUxIwuBIpPK1Zwn7fcQXjySxdCz99dVD9Rjik+k7eYKmHRtQ
      6fRkz7oKU0oGjvwSemsqqN+4EjkWAwTkWJTGLWuGri+q1fRUHh6KMDtrAficbRw9uJuOWDMH
      umOMm5qHkSP8+htPE3/jWDqbVCy+cxqVS//JjmYPUT8U3vIoS4rdvPbSSxys76f9ZCO5Vz/C
      D+/N5NXHX2DsE/8XJUXo15+E4lEEXQP4nT04CkoBiIaCWDJzseUWE/K6GWiqI23CdLIvm4+v
      uwOtxYYlKxdBUg06yAFhv5fksZOIRaPIsRjGxGR8PSkYk9Nx1lSSNHoSsXCI/oYagq7+oevH
      F48iONCPr7dr6LezFoC/v5MTx8rp0YIpIQ1tLEhEhqC/n7B5JN9+aBwOTR8DhaMZY/fhbdjD
      lvcOcfvli7jnh6NYWLmGv71RxaXzJhOva/v0Cyp8LdDb47Fk5VK7dgVxaVlDvwuCSFx6NpbM
      HLorDxOLRKh+dxk5l1+NMTEFORJBECU4zanbWVOJ1mzBUVQGcgyVzjDokq6SsBeOQFKpUWl1
      2AtHcHz5UuRYFLXBiD2/hNrVH3iCwjkIwJE7lrnffIBCi4s9bz3L7u0VFOfHo7ekMXbieJJN
      Ep7Knazc3cGEK8aTp2llWyXEgFDrXp5euo+Rt32bKXk2JBQBDBeyZsyl4KqbSBk3FY05DrXe
      SDjgpXbNcpp3bKDzyH5yZl9FoK8HZ20VFa8OJuhKvWQalszcMwbB0VCQlt2badm9GbXBSPH1
      38Db1Y45JYOOI/voqzuOzmKj7PZvozYYCXlcxJeMxtvZir+v5wy7zloA4YCH7o5WjK4+mpp6
      iSUbUIkgiho0msHZoIinh37BTk5eOtGOGCAT6TvO0n++RrjsWsZYI7j6PVgt5/FEFb5S1K5Z
      TsPm1QA4ispwFJTSvHMjyWMmEQ2FiIaCGBxJyLKMJSMHQZLQxtnInD6HquUvgCCgMcURCfiR
      NBpMKRlE/H7SJl4KyLia6xEEkewZcyEaRR+fSMTvI+z3ojHFYcsppH7ju3x4luWs4gF0llQc
      qp2sfukvCIKKpOKpLJw/AYu6jRFTy3Ccikk3jpzLlbufYsUrHiYU5jNlVAbhfg+CRYP76Br+
      cVRD7oQ5XH9VJoWTR5OgBY09i8kj1Hw5nNcVLjSRgJ9IYDAdiau1AWSZoKufSMBP9sx5qI0m
      Tq5/m/76auJLRlN49c3I0Sj1m97F1XwSvT2BwgWLadqxAV93B2kTp2PPLWKg6SSVrz9HNBTE
      WVuJISGJ0pvvJuTxcPytF5GjUbQWG3311QRdfR+xS4kHUBji0LN/ovzpL2c8gD1/BObUDFr3
      bh0S0vly97aTguIMp/CVwNXagLut6YI1/vdRBKDwlSDi9316oXNA8QVSGNYoAlAY1igCUBjW
      KAJQGNYoAlAY1pxVPICzaR+vPfUSVQMg6R1ccuWNXDOzBNOFSjd+DnRXbuDF196hoQ/AQOkV
      i1g89xKs6k8+J+LtZfOmdeiL5jKtwP5FmTqsEVVqSm74JomlY5FlmfqN79K2bxv5cxeROmEa
      giji6+2m6o3ncLU0UrzwGySWjqO9fBc17y4jGgoN1SVptGReeiWZ068k0O+kctnTuNubEUSR
      lPHTSCwdS+PWtfSdPIFKpydz+hwyplyGqFLRsnszJzesJBocdOI/KwEE3V14tenc9tDdpEaO
      8dILS1kb910WXpJyzp+SkLuHN1/5B9bJ9zG3LPGszw84m+m0jOGR+xZg0alQ6wwYP+Wu5HCA
      5oZq4pJnnqPVg+x/9XE2mr/Bj67Kh1iUE6ueZq13FN+8edLQPgEKg6h0elwtDTRsXo2oUjPi
      xiUMNNZSs2Y59ZveRWe1kzZxBiGvh7SJ0xFVKg48+Qfy515PYtkltB/YOVSXo2AEppQ0Dv7r
      v9Bb7eTNvZ6qN5fiKBiBNSsXd1vjqZiAQbH4e7s4+PQTIMtkz5xH0ugJtO3dNmjX2d6IpNYR
      Z7GTbipjdMYOKlq7CFyio3mPk9RJeZhxUbOng8RJ+ah7mqioqqMvIBKfWUhxfjLBpqMcrO1C
      VpnJGlFKttXIhEvno0u1QaiX8r1H6PFGEM1JjBpdgk3wUN3QiBwM0dXrQuvIYkRJHlbdB5IT
      NQasVhs2w9D+LHTVHKCiwUlUG8/IcSNJNkp4upuoPH4SZ38/jc4wZYAcC9F0bC81HX5UlnTG
      jM1H7W6jpTdCnOSlvtvAiFE2Oo4fp7nXi8oYT0HJCIwDFew/dpIa3XbWGt2MHV9C4qhpXC4n
      YwJ8XdUcPNaIXzCSXjiC4lQjzpYGOnq9eD39uMJasopLyUmJGxaLMSGPi+YdGxBEEb09AV9P
      J7FIhIjfS8TvRRBFvJ1t+J092PNHUP3uMnzdHZzc8A5pk2aeIQC10YS3sw1vRyu+ni7iMnMx
      p6TTtn8H7eV7SL1kKu97jwZd/bQf3AWA3p5AoL+faCAwlGv0nJ+9f6CN+i4X8SMsqGng3b/t
      59pJeZhpZf3f3mPGGDu9763nQE+MRKuJoBhHut3DO0tXEczJwiI7EROySFbD5pXPknzVr0hN
      76Suvp2gGKVj1wZqg/dzR/4Aby9fhjV9FHExJ0e37SFgfJDZhR+8YwcqN/L3PzehVVkZOfMK
      Ls3o4ZV39mBLshLs3Mf+LpmHZjtYt+I16kJWko0yHv+gd6G7+j2Wb24l3qHFdXAXteHbuUK9
      l2WvH8CQX0Zexlhy3QKtrc10ucL0de6ntiXCZcUeXL4QwUg/PU43wUiEll1v8W70Sn6Q6OLd
      Z16m3ppNstzDpi3V3PuTRfTuXsPKiiilJcm01R7jSH2QJXfMwvFvumtfJyyZeeTPvwFBFOg6
      Vo67vXnoWCwSoefEUQRRJBYJE/IMpj8MOHvR6I2IKhWxyGA8gKeznZTxU4kvGU0sHEal1+Pr
      6frYawKYUzLIufxqdFY73RWH6Ks7fi7JcQdp2b+KXx49iF6no2TWzVw/Ng0VH3UyQojg7m6h
      vllLwaipjB+Zi11dS3fdSXzxOYyaOokROfGoQqe5p0pa3E0H2V3fQ19HM9a0G7gjXwU6OyWT
      rmBycgDf80/R7/LDaZ0MfUoR02fNwqzVYU+107v/OVasO0x6igXZ3Ul3TRLXFKfQ0K9nzh1L
      KNF3E37hKSDM8Y1v8O56L+nxOgK9LYTVU7jiUvCLFqZNn8/MkgQizjo8bTXs3F9Pb+8AqVOK
      ueqaRcwYtRpf3HxuX1gEsQjdp+wJ1+9hva+IXz2ymHi5lWW//CU7aq+jGAlrWgmXXzeD3n1B
      Vu7qJRABhokA/M5umravR2dzYMsppOPwHkKuAYDB/x/Zj6R53yHylFekANFI6FSE1yCulnqO
      r3gRvS0eQZJIGDGGWDj00QueIjDQR+verRgSkjGnZKCPTyLkHUyxeNYCSLtkPkuuns57zz6L
      Lj4Jw6mc3bIcIRqJEgr6CMRiIDm4bMkDFFRXsXXd8/x6dRL3Pfht7v/DLzixazvrn/oV7475
      Jo9d/cEuMFVv/ZG9jtv47Q/GUPvG47z8/j2rVGg1KgRBQJI+OtrQ2NIoHVk21AVqjcXIn/8Q
      /+/+SzGrZELBML0nN4IoopZE5FiU6Kn9hWRBYOqS/8OPrs1FJ0Twh6L0Hnub+PRs8tISEAUf
      ldvXcMRbyk//8D16d7/MulP7dgiCQDQcJiLLnDEPIMvIgnjqKysiCvKpF85gNmmVJCBI0rCa
      gpM0WmQ5RnflIQRBQGMwkTx6Ik3b1qO12EgYMZaOw3uJhcPI0RjW7Hx6qytwFI0k6HKdIQBk
      GV93J572Fkwp6WhMZjwdLR97XVGtAQGctVU4606QPnkm9vxi3K0NwDkIQEBAlTCGux+4gaef
      fZnl8o0smhWHVlPJmpdXkGPtpS0QhsAAVQf2cKIzgD45jzRNGKHvJJv3VREOqUjMyKTfAKdH
      +piT0qDqEO+t68FZ10Mo8xPN+LekjJtDyroVPPNyO+lmFaq4AqaPKcCuOsDaN14i3aamoTeI
      HTXF0+ax7OnneD4wigStgCZ9LKPFD+5VQMIUZwN3LZvWSoTbW/Cd2m8lPjUTz/p3ecXg4rLp
      o4eur86ZxOWa53huaYQ0uYuj6ku5p0Ci7/i53c/XAWNSClnT5xIJ+AABY1IKNateB0EkZdwU
      eqqPAiDHYrTt30HenOtIGjUBY2Iy1e+8gqjW4MgvwdPZRiwaIX3STNRGE6bkNHpPHMPb3YGj
      qIyEEaOxZuUTCfqJS8+ht/oYKeOmDhohgM5ip+3ADmLRQUFJjz/++OOf9SYkjQFHUgapyfHE
      2VPJy4pHozGRmJBBaoYe0JKQO4JxpYVk5CRhkMMEfCFUpgTGTJ5JSU48qpAPXxCsGaVMnzyG
      JIsBiz2Z9PR00rLzsRJENMVTUFrGyKIC0hOt2OKTyUxNwqTXEmdLJD01FathsN+g0ppITMkg
      LcGKShz8bArmFAozrYixGJLGRHJ2HnmZqaQnJSDFImisaZSOKqM4O4PEzELyEnXEYjJqnZWs
      glzSEuJJSE4nOdGORpIw2xOwGiVklYm8srGUFuSSmmTFmpROog5kjYX0jCTstnhS0jNISUwj
      vyAJ2RdAZc3k0rmzKLYb0RqtJKenkegwodOZSUhNJyXJ+pGNLy4WHYf20lG++3OpOxIKIkoS
      oqQiEvDTfnAX/Q01AAiiRN/JamKRMACB/t7BgbEk0VG+h76T1RgTkkifMgt3WyMhtwuNKQ5J
      pabv5Ana9m0jFomgs9rRmuPw93YR6HcSCfjoP1lDLBpGUmuIhgJ0V5bTe+IYcjTKW019v1Ti
      ARSG+NLGAwgC9vwSNCYLnUf2DQXHny9KPIDCVwNZxllT+blU/SX5+CooXBwUASgMaxQBKAxr
      FAEoDGsUASgMaxQBKAxrzmIaNEZ75Wp+/x9/R3frz/npjRMxOit44pnNjLzhZmamifT0hLEl
      J6M/D98WV1cTHslBksPIRQwzULjAqHR6xt//GI7CwaS4rXu3cezVp1BpdZQsuoP4ktEce+Vf
      dB7ei87qYOw938OWU0hvdQWHnv0fAv3Oobp0VjtF195K6iXTCLoGqFr+PB2H9mJMTGbkzffi
      KCol5HFT8doz9FQdofDqm0g/FQ/QeXgflW88j/9Ugtyz+wLIMok5NjoPVNDsCgAyMTmGLMt4
      ++o4uOcoznPfLACAtsqdHKjp5sIsdSh8aRAEala9zprvf5N1j92NSq/HkplL0ugJBPqd7P3T
      r0gqG4/OFk/GlMvoKN/Dusfuor+xluSxk8+oyppTSKDfyfof38veP/+K+JLRGOITMadlUbf+
      LVY/fDsHnvwvEsvGE4tGad61mfd+ch/rHrsLT2fboAjP1R1al1bGlapuVpe3U3xaTnM5JqAS
      Dag1EB5oYNVrr3O4LYgj2UHGuBu4dryJhn0beXvDQTyGNGbOv57JhSr2LnuJQP4MevcdJPWq
      +ViIIen1aOln1yuvsqm6nZguhWnXLmRGUSKSkjrxK0nE78NZW4UgqYjLziYWiRDyuNAYi+mu
      PIS/rxdPZyt6Rzz6+EROvPUyYZ+H1j1byZox94y6JLUaQZSQYzECA/0EB/owJCQP+v3LMggC
      Kq0Ob1c7Eb+XgcZaQMCSlYtab8TX0znkDn0OYwA9pVdPJ7J+I9WnJeny9TdSeagWTyTAzqVP
      sDdcyg2330pB4CB7m1w4T+xmdXkbZbOv4dI8gZ2r36Ku10vNtlUsX70bXdlEShLi6Kjex7FW
      N4TDGLLHs2DhImZk+Xn13W0Ew9FPNkvhS09C6Vjm/P4ZRiy+i5Zdmwe3NZJlwn4f8ik/IK3Z
      ihyNEg4MJsIKed1ozHGDXp2ncNYdx5iYzNw/PMflv/4byWMnoTFZQJaRNFrSJ1+GLbeQlp0b
      gcFdaWb98n8Yf9+j9Bw/wkBT3VBd5+QKobJN5oqxq1m3MZnQRzyJ6jmyW82s382nNBmiVhWy
      EKSjuZrDGzZwsLwcjSRgLpgG0QhoTJTOWsiCqbYz8uJGvH0c2byCPa1OQv1dVCdeheK29NWm
      u6KctY8uwZycTv78G4iGg0Nva0FSIcdihDwuBFFEpdURDfhR6QyEPK4z/P39vd0c+OfvgcE9
      x/LnLSLociJpdWReeiWxSIja1W8QPXWOs7aKzY8/jDEhhexZ8wCZjsP7gHOOCBPJnTKPHX98
      iVpVHuPPOGbGbPHQ0dZHOF6P1xsBk4TBaCF51AwW3n0XZUkqXG4/Wr2ffSoJh932kaTQ3uNb
      WD1QyBO/uwn/zhf42XbFbemrjM5qR20w4eloxdvdTmCgD1NSGmG/D0fhSMI+L6akNDoO7SU4
      0EfSqAm07dtOyvgpg12W0xDVaiSNjrDPiz2/BGNCMo1b15I4chyxcJCm7e8NxQ9ozBa0cVa8
      Xe34+3oI9PdiiE86tenGeYREmhKKKMiReWvTh0PRkph+XRlP/OMXHErKwjHQTSxRRUrxBMrK
      X+CZ//dTJI2B9DGzWbyg9BPr12eXUOh5id/+n2ayzB580RHnaqrClwCV3sDIW+/D4EhEjkXp
      b6yjYcNKEASKr7+Ncfd+n9o1y/E7u2nZs4VR33iAwqsW42pr5NjLT6LSG8iaPoeeE0cJuQcY
      sfgurFl5hHxeji9/gZDHRcq4qSSWjiF//o0AuJrrObHyFfLnLMSSlY8gCriaG6hZ/frQhhtn
      4Q4tE42ECAajaPQGVEKMUMCLNwgGkxEVIYIBGa1RT0/9IdrcElLEya7XX8Nw82+4Y7SRUNCP
      zx8kJguotXoMejVhnwd0FnSnpBjyuwmLeowa8Lk9BKICGrVIBDUWo1bZQvVz5HN1hxZENEYT
      omrwD336fgEqnR5JoyXkcSPHBhum2mBC0miIBANE/D4smbkkj51M49a1BPr70BiNiCr14GDa
      6wZZRqU3otLqhi4Zi0YIe91D9QNEgsHBoBxZPlt3aAFJpWUo8QIiGr0Zjf79/+swmAb/FWg9
      ytvrKgnIBrImLmHhSOPgA9AZ0eiMZ9Qqmc7cJkajN/P+cMcQZ8Xw2Q1U+DIjx4YC3T/M6WJ4
      n7DPQ3goIbRALBql49CewfUAWSbkcX+0nlMZJj5M2Ocl7Pvo7/A5pUfPmn4H/3v651GzwvBE
      xt3a+LnUrLhCKAxrFAEoDGsUASgMaxQBKAxrFAEoDGvOahYo7B+gqa0Le3IWNqPm00rjbG7D
      p3OQGm9CVKbvhz06q4O4jGwktQZPZxvu1iYkjRprThFacxxBVz/9DbVEQ0GMiSmYUzMAAWfd
      cULugQ8qEgQM8UmYUwczp7maT+J39iCIErbcIrRxVkIeF/2NtUSDAbQWG5b0HESNZnAlurN1
      aKX4rATgaa/muRde5/JbfsjM4vhPKe2i/J3XqEmfxz1Xj7zgAohGWtnx9mEyZl9FjpKL/EuP
      Sqcnf/4iNKY4BFFElCQqlj2DpNVRdM0tBAacuFoacbc1ozHFUXz9N0AQkKMRAgN9ZwhAb08g
      78rr0JjiQIDgiNHUrX2TuPQcMi+9gmg4hEqro/PIftoO7CRr+pXEpWcjx2JEw2EaNq0aSsr1
      lXWwEQQDSZlpmIZJYtmvOnIsStu+Hbha6omGQ+TPXYQxKRU5FqO7spzaNW8OrQLnXXkdrtZG
      Tq5/68ycoKcwJiYTDQY4/OZSBAFyZl+NOSWDpFETqFv/Fs6641gzc8mcPgdn3XFUeiOVbzxP
      oN9JxtTLMCan0t846BF6zgLoOfIaT/y9ElOml7qKFrIW/AeP3lyC//gWnnluORVOP6FembFL
      5hF2tbLhtX+xYlcDUVMm1937IHPLwqz85dPUpZjoOniUTqmQOx+9j+nJEXa+/SKvbTpKUJ3M
      gvse5aqSKFtffoZlW04Q0Wf//+2deXQc5Zmvn6rqrt5b3a2WWvu+2paELO+7wdgGg1kMAZyA
      A+NkhiXMZLl3cufcZJhkcmcmGWYG5mbIBAjLQGIWE7ANGK94k3fLuyxb1t5SS62lW92t3rvm
      D8kCruGCHTix437+6XNq+c5Xfeqt+ur7fu/v5ZYHH2Bx9RAfvLSD+T+tQdf4Pv/83DpaB0OY
      C2azevU9VGeZSKomrhzikQiDzacRJAlDWgYaixVffQe2kkoURUGflkHYO0g8FsOUW0jHrk1o
      rfbRN8DHssEAQkMDiLIaa2EZSiKGSqfH53KiaTlD+sRaYqERbKUT8Ha2EPF5ScSiWAvLGBno
      RWez03v8MCiXMQT6OEo0RETOZPkjqyjtX89f/WQf3ctktry6ndSbf8Czc4xs++VvaAa6j21g
      Z18FP3zqf2HpfJf/8x+/IednKwn5vOjm3cdPV93Dxqee50zzAMWDB9lY72XGrfei69vPlhfe
      pPSRcjacUbjrkf9Jmd2M1mpGws3IcICYAhhymXfLncwODrB/w152nJ5HVZbpIoVpkj8ukkZH
      2oQarEXltG5eT8gzQDQYIH1iLVl1s+k9fpCO3VtQ63SU3rQCrcWGklBo3/UB7Ts3j9+04WEP
      gT4XZbfegyiJdOzZRiw4wlDLWWwlldQ+9F0CfT20bX9v1B+0rZmC+UtRG024TzYQGvrIkv8P
      GAKJ6PQ2Uswa5IAeDUMwPESnlMkd5XZUYgRpzALc39+PqmQW2SYZobiWIt1G+gcBNNjT7Wi0
      ETRqNSIQ7OvGHVUIeN0omhIW31JGmiOHFTOdHK/fxJGomknzlzJv0oV+DHNu3zb2dGopcCiE
      Y/EL/1OSKwxH9RTUBgOtW9ePP9Xdpxpwn2pAY7ZQctMKDI4sQp4hOnZtwtvZitGRxYQVq+g+
      sJvomM7HWlSBWmfgwL//FEGUKLrxNuyV1diKyunc9yHHX/0VloJS8uctJh4JY8kr5vgrzxD2
      ecmfeyNpE66js3478GVPg5rMZARdnO0cJhoM4PUFiAAmh4Po6QbavGGGz+zlzEgZjs/4htZn
      ZmPX6pk0Zzn33nM70yrTiPuj2CfNY8U9y6lNG+bY4dP4whfO8NHc0Ebq1GWsuHkehXZd8sl/
      BaI2GLEVV9BzqH785hfVarKnz8NeUY2k0SIbzcSCAQabG8maOhfV2LZ4NEI89lFCjKhSobWm
      IqrUCKKINsWKpJaRzRZkgwkY/ejWWmyj+22pSJpRJbFsSkGtM4zX37ikN4BKoyczMxujVoVK
      sZGZpR5VbqrN5OSH0ZgquO/+GfzyN3/H4yobGRobpRYtOZNXcGvP8zz9/YeJWCt54K8fYZLR
      R3dOFoJOAtSY0zOwm7VkVi7ltnmv8sY/fJfnEgYmL7qPFXMtHNnwW7Yd7UKVWs5t37gOq96D
      Iz8DvZTJwhUz+ccXfsLf7iolx5hJplmTDIIrDG2KjdxZ149lZEEsHOL4K8/g7WhhwooHMOcU
      cnLNc3g7WhjuaseUmcOif3qO0NAAh3/9C2SDiYrbVtK5dzvuxmMYM3OY/7dPIQgCZ999ne5D
      e3A3HmPy6u9R963vMezs4MRv/xNvRwtaaypTH/kbNCYznXu307J53eXkAyT5U+eKtUcHrMUV
      WApK6dq77TOlzZdK0h49yVXDSH8vwcH+L+3mv0AyAJJcFYS9n1KI8UsgqQVKck2TDIAk1zTJ
      AEhyTZMMgCTXNMkASHJNc4mzQApRTxf7du/k2Pl+VCnZ1M2ZR01ROnIylJJ8DtaicnLn3ICs
      N+I6egDn/p0gjJrW2kom0LL5HQDUegPFS+7A6MhmuKuNlq3riQXHPVIQJIm0yhqyp81FUaBj
      92YGmxtRafWULbsLXWo6/Y3H6dq/g3g4hGxKwVE9FbXeQOu2dz9RZvWSAiDu6+GDNS9zJFbM
      otlzEH2dONs7KcxMx274/POTXLvIJjNFi2/HfaqBWHCEnBnz8XV3orPZsVdU4+/pGj+2cOEy
      BFGia/8O0ideR8H8m2jeuHZ8vzEjh6wpc+hvOokgCBQuvJl4OExG7TRi4TDdB3eTPqmOsN/L
      4NnTFCy4CSWRwJCeiaiSiF9WAChxOhq3cshp5WuPr6DSrgJqL7hREw0O0ePsYyQuYkrLJssm
      43cPEFLrwD9IRGvDhA9vWCEaCBBTG7DoRfzDPhKyCUeGA5MmTm9rB55wDFQ6HNnZmKUIfYND
      KLEY/kAIlcFGhiOFYK+TaEoeDpNE3O+m0y+Tl5GSHNNdoUT8Po48+yRKPIYgSmgtNlQ6Ha5j
      B3AdO4i1oAQAUaVGb3fQsmUdw90dBAf6yJoy5xNtaUxmQp4Beg7XA6O6pjm+DgAAEM1JREFU
      H50tFY3ZQtO6NYS9QwT6esibvQjXkX2c3fA6Ko2G8uX3XdSvSwiABAHXECpbMalWNR2HN3Cw
      LYS1sIbpVbmc2biG7Wc8xJQIUbmUVQ8vofmNF9kbMJKmF0mrmYX1zO9Y15tFmcpDozNAQXkR
      cqCXc30RFqx8lOU1cXa983vOh2IEBwYw3bCahycGefHl1zCk5BL2uOgKGbnrwa8TX/dzNud8
      nx/fXUDPh8/zS/cifvbgFD4vUTPJHwlFQYnHUBuMpFXWIMky3o7WMZ/+j9Q4iViU7sP1FFy/
      jIjfh2ww4jyw6xNN+Xq6SC2vouzWe0ft1Uf8eNqaMecWUXHbSkLeISS1GnNeIaJaTSIa/Uxn
      8Ut+YF7orqiSGO48wvYdBxkaPs+6l97j3ECA0MgQTbve4qATIIwnoGXOilXcPqcYDWAtnse3
      HvsW1xfY0RVM48FHH2VRiZbu3iFiiozJLBOLhgh42vjw0JiPu9pC5YIVPPbIaiamBugbkqi7
      ZTGxA5toHXCx/2iCeXNKkjf/FY7GbCF35kLUeiPtOzd9qo0hgKiWiY4EiEfDJOIxNOZP2meK
      koQSjxMLBYlHI4hqGUGSaN32LkOt50atFoNBEtHIp2aUfZwv/gYQRExZdhIHWujrD1NVs4iF
      I4N4jgAJPwl1Bcu+8U2qzCKCIGDJgCNoya+eQlm6DpHRi9XqDKgkEAUZvUGHWpLQyBoURcF3
      +G3eaLHwFw8sg4Y1/KJjLD5lDUadBlGMoVKPdlmffwMz837Gnk27caVN4KHM5EfIFY0gkDNj
      Af5eJ/2Nx4lHwp96mFpvIHPyDM68/QrBwX5MmTmU3nw3rmMHx2sEWIvKSUQjtGzdgCBJFF1/
      C5bCMnoO19OxaxMIAll1s1Dr9eOqz8/iEgJAIqtkLlXpv+aNNa8xMK0YX7OLhKYElb6Sqiov
      DbsbsNXlIIZ9hAx1gIhaJcEXFCfHiaMoUYID/Qy5h4jFPzt6RbWBqik1/NvTu6h55GGs+mRy
      8JWM3paGo3oqoZ2DpFfVoSQSeNvPI6pUmLLyMOfkI5tT8Dk7ifi85M25EV9PJ5a8IsLDHkDB
      lJVHaHiIkGcQR/VUcmYuHNuey0DzaSz5JRgzslHrDaRNrOXce28iyRosBSXoUtMw5xaScd0M
      hrva8Pd0AiA98cQTT3zRi5C0ZorKitH6nDSe6yAoZ1E3cwaFGXYKS3MJ9bTQ0taDX7YzobwQ
      o0rCkpVLdpoRUVBQEgLGzCLy7XoSqEjNySHDqgdErJl5lFSWo3OdpXUgiqOwmNzCcqrzbaA2
      kJ+TS4pOhSKpycguJN2kIRZw09jhpnbuEgrt2mQOwB+I6+gBXA37vpK2Ja2WlLxCTJm5mDJz
      MKRnMOJ2oU2xklE7A22KFX1qGv7ebvpOHMJaVIaloISIb5iWLeuRjWaKF93KSH8vw52tJGJR
      7OVV6Kx2nAd3MXj2FLLBSObkWWhTrDj372Dg3GlUOj2ZtTOwFVcQD4cwpGUQC43gd3XzdtvA
      3121+QB9e1/iH9aeoWLeHXxtyRSsmuT8zx/KFZsPIAjYSiegT3XQc3jPZw6fLpWrOh8gtfZO
      flSRQGcwok2uwv1poygMnW/C09JEIvblFtC9agNA0pqwaT//uCR/GijxGF/FUCX56ExyTZMM
      gCTXNMkASHJNkwyAJNc0yQBIck1zCbNACdzNO3n2n5/BN+M7/O+VszDIAuHmrfz0//6OUPED
      /Og780n5/IZASRCLRkkIKtQqKWliey0gCGRPm0fF7SvRmCy07djImd+/giBJpFfVkVk7gyPP
      PgmAWmeg+v5HSK+qo+dwPSdfe+6ifABLYRnFN96Gz9lG07o1o+cZTFSt/DYZNdMIDro5/l/P
      MNB8GmN6FgULb0KTYqXhhadIRD7mMncp1xAL+9EZdXSedTIYjgJRmk91MrEsHafbz/9fdfEx
      oh4OrF/D2/XniSR9PK8JZKMJS34xe5/8MZt+8E1kowlbSSWpZRMxpKbTuXvr+LF5cxbh7+1i
      69/8OfFomMy6WZ9oS5tiI72yBlfDPuIfWxfInjob19H9bPzu/Zx87Xny5y9BrTeSXlVH/9lT
      hL1DFxVav+R1ADG9mGkeJ6cHw+TKPpo8BoozUsA1uj86dJ7t2/bjDAjkV81g+kQH5+u3kii9
      gRqzm227nExaWI09dwJGhw2VEMN9/ij1B04xENFSu+g2qlO8NOzfy6lOLyl51cycXoXDcNUu
      WSQBIr5hTr3+AqAgyRqCQ6PO0N4z5+k7cRhrYRkw6vtpys6jaf1rRHxe2nduJm/29XR+rK3g
      oJum9Wsw5xSgtaaOb2/b8cGYvFogHokQcLuIBny0bFmHpNGSWlJ5Ub8u/RtAsFBdJXL0zCAh
      dy9+gwa72Ty6L9zDtg276Felkm9X0bB1C0c6PCihDrb/fhMfbvyA40NxtHEfZ/bU09Daj2/o
      JG++tJYe0ijIsUHYw8kd77HlWD9pWRkMNrzHO1tOMPyFXy9JrlwUdLY0SpauwN/dga+746Ij
      BJWaRCxGNDBaCT48PIRsMCGqv4DYUVEQRAlH9RTSKmvoPrTnc0+5jMeqgKOmhtA7xzhns5Bi
      sGG1uAGI9baws34TTR4Rg0ohGMwgd9ESps28jdbT/8TLxyfzw8fqSFF9VO7G33KcLu1MHrtr
      KRkqiHm6eN3poXjWnSyelk2XxcNb9Ufp99ViTpZCuqoxZeeTPXUO7tNHGTzf9Inc3AsoiQQI
      AqJq9NYUVWqiwZEvJIEQJImc6fPRpFhp+/A9wsPezz3nssYVQnoV1YFfsLV9KhVZ0zFLTaPb
      1TLa1CoeevRBlk5MJxoYISZriLpPMyJaMcc9dA34Kf/Yl7Ko1UJwkOFAFIcJogkBjZDA7x8h
      logzMuwnLupRSZfT0yRXCqJaJmfGApz7dzDc1faZxyWiEeKhIKnlVfQeP4Sjqm7UTv0LaDbt
      lTXIRjPnN739uXkAF7jMgbWdCTUCGw/3MG16OtJYwQ3JXsziqj2sffU5Gh0mNJosZi6byuAH
      6wmWruCRKad5be1mir+zcLwlU8EUatNe4bVfPoVRr6Nmyb3UTSpm7ba3+PdjGqIhKF+wgLRk
      vstVjT41nbzZN2DKzBkrVhehfccHqLQ6sqfNxZCWgc/VRfvOTTgP7qbi9pXkzV6EoiRofOtl
      JI2WjOum420/j6LEKV58B6asXPT2DExZeTgP7CRryhyMjixsY2P9QG83rdvfJW/OjaQUlGAr
      rkCflkHPkb10H9oNXJI9ukIkMIR7KITVkYUq0EVbP2Tl52AMuzgzIFOcb0UIDNLR0YM3HEfW
      WcnOTSXU60LtKMCmDtDeMoStMIOou5+YwUpaipagx0WX000wriKjqJx0TQiXswu3N4wmJZ3c
      bAeGpOLzK+erlEOrNDqsJRUI4uirXEnE8TnbEVUqDI5sBFEiEYvi6+4g4vNiys5Hm2JlZMCN
      3+XElJlD3pxFtO3YSHjYiyW/CFGtGW0rHsPf241Kq0VnS+NCAlZsxI+3qw1zVh5q49h3qqIw
      0t9LoK+bB3c0C1dtPkCSL58rOR/AUlCKpJYZOHeaL6sG1lWdD5DkGkJR8LSe/UqaTo4rklzT
      JAMgyTVNMgCSXNMkAyDJNU0yAJJc01zCLJBCPBLE6/ESjoMgSuiMFkx6GfEiObNCLBJkJJRA
      ZzSiToZZEkaFbmqDaUzr4wdGtTuyKQVRpSLkGRyVRwgCGlMKKq2OaHCEiH/4kyvBgoBsMKHW
      G0AQSESjhLxDKPHYWCFsPbFQiLDPC0oClU6PbDQjiCJKPE542DNurXJJAdB3bhtP//xFvLYS
      jHICS/4M7rr3ZsousmdI0HPyfd7c6WH5qj+j2Dq2OdzPiYZO0q6rJeNTHB2CPac4EcxiWpH1
      4p1JrmoESSJn5kIc1VMZGejjzNuvkgiHsVdUUbTo1lHv/q3v0n1kL8b0TCat/DbaFCvBoQFO
      vPorAn09422pdQYq77yftIm1xEJBfM4OGt96GUVRqP76n6O3Owh5PZxe+yLDnW0UXr+MvDk3
      Eo+ECXuHaFq/hsFzp4HLkEJkTFrAqgcfo1Bs5tVfv0D9yVqK5hV+sYYSEbz9gxg/Q6bhaXiD
      /3AuTwbAnyKCQCw4QufuLWhtdmDU1txaWEbL1g34XU4K5i3B095M9oz5dO37kJ7D9eQvuAnH
      ddNp2fT2eFOSLDMy4Gb/Uz/5SFEqCJQsvZO+k0fo2LOVnJkLyaiZhr+ni0Q8xtEXn2ag6eRF
      3brshTBZl0pmqomWQBBv4wae/NV79IUgu+42Hv36go8dmeDEu8+wPz6Xe+eKNB7uJeMWBV/H
      YV77r99xsD1A7uSlLCgJs/71elr6z7D6dA13P7SKWYaT/OLpd3CNJLBULuV/PHoLYtte1tUf
      Jeru4+h5L5U3fI2Vt84mNekRdEWjxGJ0H9ozquEfCwAFUBuMqPUG4pEwiqKgtzvQmFJo3bqB
      WCiI68g+Cm9Y9om2RJV63BZ9fJukQmux0bJ5HfFwiL4Thym56U4kWYOSUD6zwPYlB0DYP0j7
      +SZG4mc42hVjxvxsVKoYyx/6CwzxHt5/dhObplYzHwgPuzn02s9piE7mBw9PwuDdR3tTF4GE
      l6Pb9uPPvpG//mYVaiWKPiWXguApXM5beObPJiNKEqHuQW6+/9sYVR62P/efrG1YxO3yIC3t
      Pm76xndYHjnJS+98SGtfLal5+ku9lCR/ZGLBAB17tjLp3tXUPPAofpeTYWcbSiJBbGyMHgsH
      kY1mRLU87g4tiCKZk2dQvvw+oiN+2j58n/ado8kwsXAIgHgkjKw3IskaUnILmXDn/cQjEXoa
      9tK0bg3BgT7gMgLA29XE1nfXYrelMu32h5hVKnHu7R2sb/Bh0AZodQ1ijwMieDpOsLU5lZmP
      fQOLSvzIvFbUU1BVzNFtDaxf20p6URVz52UjSSKCpEKtVgFRuk7tYN2uAUz6BJ2ufipjgAwa
      m51sawraYTNajfJFlLJJrlB8znb2PvkjNClWim64ldDQAIIkodbpiYeCyEYTEd/w+M0PEOjr
      Yefffx8ArTWV0pvvxlJYhiCKqPUGIj7v6O+In+BAHw3P/ysNz/8rKr2B4huXkz5pMh27NgOX
      EQDpFTNZ8uBjVNgvbGnj8AfHKX34X7g7t5WXXS9yQbrvmDSfu2ZlsuHN33Ek5y+ZphnbEY+j
      yaxg+d3leLsaeef9dehyKpgry0QH+hmOKRglP6f37CFj0VOsrvXw5t834bvMPznJlYtsNJOI
      x1DrDKh0evyuLkbcLrKnzaVj9xZyZizA5+r6xDnGrFyM6Vm4G4+BoiCqVMQjYfwuJznT59Oy
      ZT1ZdbMIDvajtaRiLS5n4OxJEvHY6ExQIs6FqjSXFACCKKGW/99pz0xmLi7hiSe/x5kJxcgh
      kQpRQBBVyGotqaWLuXthJ+tef5eMFZnIWhlRieFu3MVv39qJM6CQPmEOJVlmLHlLKF3zLzz+
      vUOs/NYDTJpZx++f/yHt5ROwhyFVGu2DrFYjCCAIIrJaRkpOs17xaEwpzPvxv6Gz2ZFkDRPu
      WkXTO7/F193JxHtWAwqHnvlHIn4fnfXbqX3occqXr6TvxCFaNq9DbTBRsvQOXMcOEhxw46iu
      47oHH0dJJDi/8S2GmhvxtDVz3apHWfyLF3A3HefUmueIhYMYHVlMunc1Kq0O5/4dtG3fOF45
      JimHTjLOFSuHBiyFZdjLq+jYvXl0XeBL4KFdLcJ/Axa92/TWmY5WAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ranks' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WXDd153n9zn//W7YFwIgCO6LSO27ZFlW2267uyeZdHp6alLVnYdU5SGV
      97zkpfOSVJKHVKWSqqRSk6qumWQy0zPTY7vttqzF2qh9IcUdBEEQ+3KBu/335Zw8/C8h0QKl
      C8ptW8b9lFQULqAfDv/3nHvO+S3fn1BKKbp02YMIIYT22x5Ely6/TboLoMueprsAuuxpugug
      y56muwD2CBfffpEr8+v8/c9fQnb9HtuIrhdobxC76/yLv/5/Of0H/xS1/BEbjYhTRyd46/1L
      PPPtp3n/4ys8/90/5MBwz297qL8xul6gPYRVHmFoaIL7T43zyblzDIyP8emVacxwhcX1FkMH
      79tTk/823R1gD3Hr5k0mDh1iY/Yy00tbTA4WWN7yOXT0OEp32D/c+9se4m8UIYToLoAue5bu
      EajLnqe7ALrsafS/+qu/+qvf9iB+V2lsLPLyO+c4dmicd159ievLNcb39XP2lZdYcxV2Vuft
      T6Y5cnD/ruxuLN7g7PnrTO3r5Y1XX2GxFmOE67z+1jtcXaxTpsG5aytM7d+3K7sL0+c5P7fJ
      vjK8+spr1BMTK1jj5TfeQZQHqN26zI31kInRgY5tJn6DV19/g/6R/dy69AHvnbvGyL4h3n/z
      l8yuewzaMa++9iYt6TA21Pkdorl+i1deexOPEs2FS7x77jr7D4zz9ssvsthMcZItXnvjbWRh
      iKHeYsd2V+eu8Ppb7yGKA8xfepeLN9YYG+nhrRdfojJ1nLXrH3P23Y8oDE7wv/zP//1/190B
      vgS71Ed9aw2STW4sJaTVG7zz5i9ZY5ijU2OUevuprS3v2m6xb4TN9QVa67eopRXmr3xMaeIk
      j58cxy720Ds8xPri/K7t9vQNsra2zPL0ZbTBST59/20uXL7G1P5BPr04S99QL2tLuxuvZtho
      mY8b+Jy/PM/RgYSfvfIm67FD7fLH1K0Bnn7iNFcvXNuVXas0wLNPPcyl82/z6bUqj06avPT3
      f4c3eIZw7iJRaYynHznIhfMzu7JbGZrgkVP7uXj5A2aXMoa1OrPVCCto0kxgZOIQY32C+aWt
      /O+3K+t7DKdYxjI0MEd54VvH2Ko3CEOfNAn52U9+jHDKGLrYtd1SuYIuBH0TJ3nwSD/1potS
      ivc/meaJh09QrlTQdm92+/+beuhp9pcVTddHs3RcL8YxBJVKmd2a1S2HkmOBZvOD7z/LRnWL
      4shRHjs2ylajReKu8/evfcoP/ujbu7Ibt9b5u5c/5E/+5PsIoWPZFlEQYFg2hgatjZu89P4K
      f/yDx3dlt7E8w9krm3zvW4+gCQPTMFDCoFS08x+QCX6iIVQMdBfAlzJ3+WO2qlU+ujLH4q0b
      lPad5PkXvk9fWmVk8iizn35AtbrBxdndfKpKLn94lq1qlYvXF1i4NceRM49RyuqU95+h3xZ8
      /PZZqtVVZlfqu7Cb8Ml771FdWuD63DLzc3M8/PRzTAwPs7lZY2S4j/fe/ZCVpVlWG3HHVhur
      c8zcXOb8uYusrCywGlZ4/swYt+bnGHvwCbwb02imYHrm5i7GCjevXcKwTK7OVDm83+KXn67x
      h//xn5LMvEXYf5DqzDSWlTJzc3FXdmemr6PJkNmlmOFel5maYp/R5NJKlQsfvs+1K5ept0IG
      BvqAbhygyx5GCCGM219IKanVar/N8XTp8hunuwN02bPcPRCmUqYvXSGSX2UiY211/dc+sL1C
      lmUkSX4ej6IQKSW+n1+I0zT9+vaDOkljEZnGpO46SklkGt2TLRW3UHETlEQ1ZlFpgPLXUVEd
      0gBk9qX//+J6nSBKAPCCmMX1/H5zbX6dG0tVgijh3Uu38MOYa/Pr1N2AhhvQ6eezAuI0JYwT
      lFI0PJ8oScmkpOZ6JFlGww/IpCT+3LPdcQEEW4u8+vKP+fRWg8bmOjdvzuFHCWuLcywsrxP6
      LW7MzhFnIWfPvk99Y4XZW0t85Xrpso1SCtdtEoYBaZrQbNWJooAsy3C9Jln2NReAUmRhA704
      iAwbyDQidddQMrknW4RbENZQrQXQLKhNQ7ABrUWUvwbi7v4lN4h4/dwNNuouABt1l1urNYIo
      4dZqjVurdV4/d4OxwR7e+vQmSxtNLtxYYX59F04ApYjTDD+K8aMYBTT8gC3XwzZNpJRESUrN
      zRfGbXY8Al1990Vu+gaNlkHZv0XP6CBhbFL1NXRvHbtis398iM3Ixluvsq8S8tJrH/AX/83/
      yJG+zse8l7k98bPPfXI6doEw9NE0nTiJKZcq2Laza9tZ2EAmASoNkUmA2TNB6m0gdBMZtbAG
      DqOZhY5sKXcJlEQUR8FfRckUypNQnwHdgsQFmYDuIIbO7GjjjfOzCGCkv8zxyWGEEHx4dYEH
      j47zozcvousaU6P93FzZ4uBYP36YkKQSN4jYN1DhifsOdPx3r7k+lYJDtdkiSlJ0TUPTBCXb
      JkwSNE0QJxmVgkNvqbDzEWh6doWiY1OrLqJbJaYOjIPSaG4u03BDCqbG3K1lCqUSkDI7t8LR
      A0PEX3/X3jNomoaUkiSJMXSDJI5RSuI4RSzLzo8r6t72VN3pxSiPgNBAKYRuoBf60K0ySknU
      VxxXPo8oTyDKE6ity6itK/mLa+/lf/ZMgdWb/x55d9dqX9lhbatFrRWwsF7no2uLvH1hjumF
      DeI0I04yqg0P09BoehEPHBljfKgHqdT2semrUEpRbbpstdztI45jmZQLuf9fKkVvsUDBtFBK
      kcn82e64AyilQJAfrNpkaYvXf/E6cWGEP3zhibsEEMSX7YRdfoXbj14IcdezrrjXB6oUX3Z6
      3pXdr7DViU2lFFGSsbTR4PD4AAq+EJTb6bVOx3ovvhxN0z5Lh1ZK3ZORLl2+qei6/lkcACAM
      w9/WWLp0+a3QTYXosqcxdnrxg1f+jpXI4NT9D2GkEYcOTX2loSSs8srrV/jhD577tQ/y9xHZ
      WCc+9yLG/vtQSYhqbaJPniadfgfjyGMomWJM7uxV+VVyv3eLguWgUPhBgGVZpGlKJjOKdoEg
      CikWcs+PY9kd2d0KUupRRtnUiDJFPUoZL1tsBikDjo6bSExN4BgafbaOvssMvkxmNNwWmtCw
      TJMozi/SCoVlWGiaoGA7O94BlFJMr7RYbYScGKsw2utwYaHOlhtzYqyHaytNCpbOUMVmpRYw
      0uswX/U5PFICITg8UgbusgBK5SJpkNDbY3H+vavMX3mXS3NbPHTfFDdrRQ711Vn2+zh9oMgv
      X3uH5/+T/5zjw/lNWyUe/+7/+zes+Q7PPjbB3PwGg+OHWJy7SpBofOuBKV49e47jj7/AHzx2
      clcP7PcBpRRyawmSCKGbYDnItRsIJ39j0C3k1jIqjZD942jlr87dF0JQcopIJUmTjP6eXlq+
      h2maFPUCURKDECRJglQKyzDRtK/e/MuWRi1McQyNoaKGqQl0AboAQxPoQpBKRZDmHpXBwo7T
      6e7jbl950yyjXMxz/i3DxA08MpmRSdC0+C4LVnBktIwQUHYMhBCM9Dg0/IQ4k5zZ38emFzFQ
      tlmuBZQdE9PQaAQJmVT0Fk3gLkeggf3HeeLEIG+/d4HAD1hYXOeBRx7BSn1OPvokZVPnocef
      ZPHmTSZHSmzWAwCSKCRobbLqwqP3H2e1WuORh0+zsbJOcWiSyZEyi7fmGD18H+NDe0+BIEdB
      5CHsIub9f4Bcm0XrGUYfP4ny6pgPfg9R7EWYBeRWZ1mmSimklEipEALiJHcdZllGnMQUbJty
      oYimaQghSDqMMqcS9pVN3DjDSyQlS8PWNcYrFo0oY3/FpGzpCCBMd++yFULQU6pgGgZCaEgl
      0XV9+zVNEyTJ3caquL7aYqji4Jg6aSYxDY3RXocgzth0I/wwRUrFibEe6n7ME0cGqRRMbFOn
      2swj4nd4gYIgn8jV5ZtcX9jkgYcfoLVZx9FCrsytc/TgGFbPGCJYRy+PEFZvMb/R4sCh4/SX
      BOfe/wB7ZIpeWiw34YHj43x6aYaT953CC0J0ldBTKnLx4iVGD51icmTvRs1UEpPOfoQ+ehis
      AtnCJYzDj6IiD63USzr3KfrECYT11QErqSRe+70rOQX8MKTgOGRZRiYzHMsmkxJd0/DDkKKz
      87HiV3HjjGaUMVIySaXC1gWZgg0/od8xsPR8B4iz3HtYtvTdPQOl8MIAyzQxdAMl8wUg2z76
      OE3QNR3T+OLOopTi5rpHM0zoL1lImY8hySRHRivMb3r0FS3iVLLRDDm2r0ImFbaps7jpM9xj
      MzzQK3ZcAF26fJP4fDxlN5RKpW4coMve5Y44gBDi3qOOXbp8Q9nx2n7pnRe5uhYzMHaQ7zx5
      /x3h6frSFVblPk7u72VhYZmJyf071q9efPNlrjcjHn782xwcqfwDDf+bj1KKMPCI44BiqQff
      a1Iq95JlGbbdWcLa3ez6XpMsTSgUKwR+i2K5FykzLGv3CXa3ydIUt1XDLhRJkwRd19F1E9O0
      EB14lgD8MCBNMyqlErVmAyEERadA021RKZXxwwDHshFC4Nj2Xd2gM6st1ho+ZyYH6C2azK67
      oBQHhsq8N7NOX9Gmr2Rxc73Fmcl+Li7UODHeS5JJJgZKwF0WQH1zjf7hk2xtbDJz8QrDY31s
      NX1uXr5BqRTTMgISv4+oUadVnWN+tcnB049Sm/2E0B7l+Wceprq0wfCZ+ylrEa/+4g3KYycp
      BEtsRAXum+rhw/PTnHzkWxyd6L/nN+P3BSkziqVeotBDCI3AdzEMCyllR+7KnVBKIYTAdkpE
      oY8QgjDwMAxz+3v3QhQHlHsGCPxmu25B5uPUNQzN6siGYzu4We7qtEwTpcD1PYb6B6g1G/mH
      Qhxh6DqmaWDoO7tXD42UsU2NJMsvzVNDJW6stYjSDE0I9g8WWah6PHp4iOsrDXRNMF/1qBRM
      wiRPCLxLTptOpbePLPJZnJunsbXOytoyGy2Tg6O9vPPaq1iVXhbml1heXuTEyYPcvHaBG3Mb
      fPL2+0QAQqNUqeBvLrG6vsW7752jWa+xtbnB++9d5MkXvs0n77+16zfg9xMFSmEYFo5TQtN0
      0iQijr6eUyK/0yksp4BlF3IXaRySJPdWFAO3k9XytLVisYKum0iZEfpexza07cUntsd4e7ya
      plEplTEMgzTLcH3/rnaWaz62kQe7hBAYej6dLUNnarjMlaUGiVRkUlGwDI6N9VK0dVpBwtxG
      Xpuw49IaGh3n8o1rjE0doT9d58rsBoePTdFTsij0Rfz5P/snNFdXmDp4gIIV09PTz/5xReZ7
      DE8cRAfGDh9jfGoKtaboHRhkX2UfZauJnaU8eP8U77zyOg889mzHD+33GV03CQKXcqWPLE0p
      FMq4bh3DMO/ZZn6n04jjkHKlnySJcAplvFYdXb93u5ZdwGvVsQv5QjVNEyHymplOaXkuQRhi
      tif57Um/1ajTUy6jaRqOZRNIhWHc3bW61giIU0mcZqRS0QoT1ushPQWTpS2f3qJJf8nmwvwW
      D0wNkGSSA0Nlppcb9BXz3apbE9zlG0+UZAghcg2nXXCHKoRSiiS5h3K5Ll1+ywgABXHnckfb
      3HEE+nUUYnfp8k1ixz1jZfYSN1frSH+Ld89d/azYPXW3NRW/iOoG074CpRRxkpCkuXJBy/dI
      0pQsy7Mi0yyj5XtIpTrO1/kCQR1mXgGvCqsXYP5dSHxY/ACyBIK7vX9fTpImuF4LKSUtr0Wa
      JoRRSJzEZFm6q/e9HqYsNGMyqVjzEuphRqYUm0FuZ8NPCBJJkMpd2VVKsemnSKVYdRO2ghQ/
      kSy1YqRSrLgJSaYIks/ylna8BC9Mf8SM9EhGUi7MrHN8osLc4ib3Henh4wt1CFZoqTKjfQVK
      RYuapzBFzMKtOe5/+AnM3aWE7CmkkshMtpO3DPwoBKWoFEskWYomBK7vdZyy/AU0HSafgOWP
      Yexh2LgCK+fBLMDqeeg/vGuTSinCMKBcKhOEAY7tEEQBmtBIM9A1Hcfu/E0vGBogWPMSDE0Q
      pBJNQJwpUpUn4dXCDMcQOHrndpuxZDNIKVkaPbZOLUxpxZLhosGqmyIErHkpFVvjdoRlZwer
      UcaOPNaSAkOOxvKtG5x7/yMayTOgdK5fmeGjc4u88N0zVFMbt9agUqxAuIV6uBtNvhtCCCzT
      JIwiQGHoJnGakmYZdbe1nbQmhKDle5QKRRyrM986aZR/yk88ArfehvJo/mkf1GD8Edi4mqs4
      3HgFDr8ApaGOx62UIs1SGq0GlmnhBx6GbqDpOlmakiQxaZZSKXUW8MwU1MKU4aJBI8poxZIB
      RyfKwBCgCUiVoh5JokwxVv5qr5VUig0vbddXg59Iem2dTMGqm2DpefK1JmDDS0naCXw7HoFM
      y+b4iEU1KVGwbVaXVxkZG0MIDdtIWav67Bsa5ND9x5i5tMSYk1LcN4Fl3+On1h5BKUXL83CD
      ACE0ml4LAdhmOzdd07BNC9vscNJ/HsOGg9+C5kouUhXUoH4rXxiaDj0T+b/3gBAC0zC3Jxfk
      E86xHAzDbEeAd3MEylCKto8+3xHCTLHmpVSDjD5bp2zpn4sXdMZQUUcXEKSSdT/Nj1ZSIRX0
      Fwz6HIOKpd8h3NDNBu2yZymVSncWxd9r2L1Ll28q3UBYlz3LHYGwz5NEAVIzsXTww5Ri0dl1
      Z5EuX45Sisx30SwboenILEUzLbLAQy+UUFmGtkMlVCd2STwwHJBp7vo0i5BFYBRAZQitM7v5
      5Vdi6BpZu+JK1wRplleXKVRe15v/s6sEu1TK7ZpiyGuM40xtV5ndLrDv1K5StNX0FLqWjzc3
      Ibar4aS6Pe7P8pF2fBLv/vSfc9N5hh8ciPg/Xp/hv/2v//Iu7iJYujWLJhO2GOD0oeEvfL+1
      sUxg9jHS13mjs72Av3gD9+YV0HSKY1OE60tUjt3P1sdvUjp4AqEb9Bw5vXvD7iqqNpvLFcYu
      2D0Ipw9Vv4kYOAa6Cb2daW22wlxo1tT1XG0iSugrFQjipL0g8slmGTq9BadjVcAkk5xfaXFq
      pMxCPci1O02dIJE4poYXZ5QsHUMTjJY7dQgoal5AlKSUCzatIEQTAtMwyLKMcsFhq+VRdmw0
      TdBbzB2hO85rozSMHta4Xrc4NVLi+kev8jf/4VV+8I9+yJZ9GKqXcTZX2Rw9zIC3RJZmXF7X
      MZ46wL/+Nz/m2T/+M2avfEIQwx/cf5RgYB9/+8//PenoA/xXf/Ene1qMSElJ68Yl9EKJ1Hex
      +oaoHDlNGnjodhGFIqlXSbwWdv8Q9sBoZ3azBFWbRfQfhqiJMAuo6tV8N6iMAwrlr0PkQnEI
      YX71B1LZsUizjKJtEacZXpRQsk1aQYRtGmRSkklJmCiUChgod/YhV/USRsoWuoD2OiJTcGSw
      wEIjRNcEcSaJUtj0E4ZKnSwCQU/RoemHCGCgXCSIcxdzJtX2ThJnGTKRGO34wl3momCymLIc
      FdA1uD6zxKMPHWerFbC5PE+17iJEgee//TQCxcGjJzg4NcXsjVkeffgULddlcPIYRw8MkqUZ
      zZU57P2n0RN3F86y31OEwB4YIXUblCaPkgUe0dY60eYqQtMYevQ7mL2DaIZJVNvYhV0NURxE
      bc1AGoJRQPQfyY89uoUYuR/sXtCN3EXaAZstP1eSgLa71qAZRPQUbOI0ZaSnRMEy2xOrM1UI
      qRRekrHmxmx4CY6pYemCTCrWvRhNCKb6HCqWgS4EftKpkK+i2vSwTQND03CDiDhNKdoWJdsi
      TFJGeivYhoEmtG2J9B0vwa36JoZp4cYCXcboKmKzGTIwMkJ1aYlC/yAVXVAYHMCvbVIoVViY
      u8XAUB/VrSaDw8OgQKgUS9eRus7q0jLlvkH2jQx27xOAylLc+evY/cOkXovEbVAYnUSzLPRC
      GX9xlsLofrRdRoRVUEO5qwi7BzQjXwy9B/J0CMOB5gL0HuBuvVE+jx8lRGmK0/60Vwocy8CL
      EoqWidm+G2RSogDH7PzOEmcSQxM0wzz6XbJ0akFCf+GzoJefZFi6ht1BlqdSCjeMyKSi7FhE
      aYapawgEQZxQduz2/SD/2jIMTEMXXS9Qlz3LF9Khu4GwLnuNvXwf7dJlZy9Qbek6r31whWP3
      P8qZIzvnj7z+1ps8/60vCuHG9SU+nPcYqxQ4dGjy1zva3ycSD71+jaz/FJq3hAiryPIkWmse
      2X8S0gBVGr8n03L2bSj0gVtFuRuI/Q+ili6iHXkGYh8xeHBX9pRS+IGHlBLbdgjDAMMwtov2
      dd3AMs2O7hV3jFNKWn4LmUkcxyGOYyzTIkkSTMtEILCtnVUhdhrjXCPGizMmeiw2vBTHEEz2
      WMxsRewrmyy2YsbKJpmEwWI+9XdcAB+9d47n/9E/YcBKefeXv6Cp9XGoFDOzsUUiSuhWAX9j
      ll/8pMqBBx5n/vI5RGWME0Ma5y9eJB48gRlF6PEW56eXeOo732W40k2UuwOzhCyNg5LIniMI
      zcp7bQmBcBdAt1FZnGdw7gIVNCAOwK4ghg6hwhZEPgiBWr0KpgP9kwit8zRjpRRJmmCZNqZh
      kujx9utpluXF7EJg7jKJT9M0eko9+KFPwS7kraLSBIUiTVKEJjAyA6ODgKAQgkN9NkutGAGM
      lg3cWLIVZJi6IGkH3GpBhqFDOc0X645L1rYELTckrq9weW6DC+cvUN2ocv/poyTlSUJ3Hd3p
      4bknj/PWi69S3H8Gf+0WH0/P8uzTT2DrGUvLa0xfucbazVkWa+6uHszvNUqibV3MW4u2Ee4C
      yupBlafI+k+D7oBMEMFa52aTCDn9GnLmLVRrHbVyGZweRGUYUR5Cm3o0D4LFAdQWdzVkIcDQ
      cwXmKI6wbYdMSkrFMmZbZiW6R6WJOMk/9fPCmoyCXaDcVoUACOPOm7YEicTSRTtaDVLCqhtT
      D1O8OONwn41t5Bmtm8GvuEE/fwkOW5u8+/7HjB8+xsL165iVAQ4OFugdGWKxoYO/hhY1mV9z
      eeSpx7n+yQfoAwc4UEm5fGOJkUPH0eMU/FXWGhknH3mMsW4k+E7iFnrtMsoo5D78NET2Hsnj
      JEYJrX4V2XMYzPKuTavYB7+G2pxDxT7asW+DtwlOD/LG22jHnkN02CXyNmEUkqQxtuUQRgG2
      aWNZNmmWbrd0de5ByCtOYkzD3K4usywLq93ILo5jdF3H7tAV3IoyiqaGELDYjCmaGoMFgzDN
      0yIyBYYGa15Cn2Owr7+nK47bZe/yhXRoq9Pqoy5dfk/oBsK67FmEuIvf6sbFD/jJj/6W8zN3
      61CSMX1tGshD+kF4D4IsexwpJa1mjTD0ieOQVqtGlmW0mjWkzO5ZvlDFHvLmq6jmIqq5jJx7
      DRU2kAtvo9IQ5VfvwahCucsobw2VBqils6j6DVTtOqq1hArreQf5r0ESRzQbVZIkxnMbJHFE
      kkR3VYVQStEKU1aa4fbX662IG1WPTCrmawHztYAgybi86uJGKdfWXfw4oxF8pn+1o3/p8OnH
      WJmfo1gp8M4rv6By8AwV1eTm/AqVikNhaD/n33mNheUqTz10kMsrIaVglbro56mHT+66lnMv
      opSiWKrg+y0ALMvB91touo7rNikUSvcmYisTxP6nUSsfgZKIyWfzBDmzhFq7gBg8fm92hZbn
      E8kEBk6C3Qebl7dTrrF7d2fvV9B1g2Kpl8BroukGUeRjmBaG8eXH8rjdmkkB9SCl4uisNEOU
      gv19Djc2fY4MFcmkwtAE87WA4bK1vbB23AFqi5epWlMcqSQsbrX46c9/zvmPP2VyMGbL3sel
      D95DL/Rx36DHqx/PsLSxyeLqOq+8+gvCePe9ovYiQgjC0KdQKKOJPJh0u02Qpmk0m1tEuxDH
      VWmEnD8LCNT6RcToAyh/E3n97xGGk6dFK4m88SL4653bbc6jmrfAbqt4WxXYugprH+WTXghw
      l2HlvV0+gV9BCAKviWnZ7dJcQRT4eG7jLj8uqLSb493G1AW2kdcVrLsR55aauFHK1TWX9VaU
      F/frgrmtgIV6vnPsuAO8d/YtAmuMKzOKZgj7Rgfp7S1RLJXoN8qI/l6ixjpvXFjjsScfZ67q
      sbHksW/faMdFEXudOA6JohClJAJBq1WnUulDyww0TSNJIrRdRFaFYSMOPItc+QT8DVTdRvTu
      B3cdCv15Bq5ZQLWWoUMZcwDRcwCURK19BP4GDJzIy6+MApTHPvvBr3mVjCN/u9mfbRfJspRI
      3V0eXinFfC1koR5gGxq6ECRZfvQ5PlwiSmVeF1AyWWvFOKZOwcxteXEeHIPuJbjL7wFhkiEV
      FHfZpO8L2aBZ1mnxQZcuvzsY7Yqde9G2veMIFN+LvG6XLt9gdjxgVVcXuXXrFpuNHbp+ZAkt
      r/P8jC5dvowsy7bFguMkRkpJmibtxt+7E8dNpaIZ5TXAzSgjTCWZVLSiPGHPjfPv3U6Mg7ss
      gNir8vNfnCVJU3zPJYwTlmamqW4scmtuhpfev0Icx8zMXCNJElzXw3fXefWXbxMnKZ7rkqQZ
      cRTieT6ye83osgNKKTzfzeMeaUKWpfiBRxAGBFFAFHceC1FKsdCMiTJJKhVBKllsxiy7CfUo
      Y9VLWXUT1ryERvjZUWlHL9D45EFG9zXY12/wf/+v/zvrhUmeGS4xeqpM1R9k9uI7vF208Den
      aa3M8OFcxHOPTnLx4kWOHBrhR//6X1E58Rzl5i10w+DUd/6EU+N7tyt8l52RUpLJlCiGcrFC
      mqbYtpN7x6QkUflELThfnWSnyAVxU6komzpJltf/agJGSyYbXh78SqXCT+S27tCX+tni6hzp
      6GkGfiWRc3hknFazgQKGJw5jhStspT0M95WoLswxeeZRDBVTqAxx/7GDJGn3ct3li2iahqHn
      hS+u30Kp/MhTKBRz0V0EUnY2dwRQsXKFiVacoQvaBfuw1IqxDI2JikXRzMVxo7TdXX7HbFAl
      8YKYUsGkurEFIuP1V87yg//0jzGUTiYVKkvQNIEuFLWmz8DgIH5jC7NQwvc8nGZ2w2cAACAA
      SURBVGIZHYVpaCjdxPqSZmdd9i5Zlm0rzEmZoWn6tu9ftqXiO9WsTaUiziS2rhGkElMTGJog
      zCRFQ0OqXB49zBSWJuiplLvp0F32LqVSqSuL0mXvctds0C5d9go7eoE+efNnTDzyQz49+wte
      +N4P0TVAptyYW0RXASOTJyhan1s7qcuLr57nB3/4LP/2X/xfYJc5/th3eeDwyF1/8frlX7JY
      eZJHJou88uIveOCh46jiBCOVL7bDqc59wsuXff70uRP83d/+e7a0Qf7sT/8xA6Xdqyf/rpCm
      Ca7b2FZViOMQxykRBh6lcg9SShynszJSKSVbzSalQgEhBE3Pw9R1pFIEUUSlVCIIQ/oqFaSU
      FB1nV2NVSuF7TTRNR9cNfL+FYVrbZ3bDMLEsp+OzetUN8KKEwbLDRivAMXVGe0os110qtkUj
      iCg7JpoQ9BY6V4Vo+D5KKnpKRTbqDey2bGMQxfSWitRaLr2lPMu28mXiuKHvkkqF57p8fPbv
      Wa56jB6+n6C1weyHv2TkkT9mJN1gds3nySdO8MknF6l6+ZslnH4ef/AAl5eW2bz6FpuJw+FB
      wdxmxvDkMZxsi7EyrG16fHD+ZRZHRsB1aazOkvQ5vPnztzjxyDOcnnD4tz96GadvBHPzHG75
      CazyIE8+9ACL5gF0d4H/8NN3GD31KOtXL9LyEp587n7OvvIGD3z7uyxfuYQ1PEVWnyX1A44/
      /2ecGP3dqUs2DINyuZc4CjAtmySO8o7rKKIwv4uZpo3eQZO4XF2hRCYltmnSUyqRpimlQoGG
      62LqOj7gh2EuYWjbu0pZF0JQKJaJozC/sIq835ZSiixN2gl9YHe4YAdLDroQaEIQpxm9hVy7
      09Q0pFIoFEGctptf6xStr+4RJoSgr1Si7nrESUoqJUWhESYJmhAYuo5SEEQxCLDTdluqnYzp
      mobnuQSRoun5PPLIQ9Q216hutjh88j4ePz3F2x9coK+3xNVrN3jwqWfpL+WFy+7WIn/z4zc4
      cXyY9z+8Qrlcwm3UefCpb7N06zrV6gaba0tEqeD+x5/DXZsnA8JmlfmZaYZPPcXJqRH8lSsU
      jzyD0VhjeOoIjz/68B2fBDcuXiKWIdduzJMafRztK5KaJn0HzjAuqqz5KVenr9KKBU/df4Cl
      Tb+jN+c3RZqmJHFEoVhB03QKxTJKQW/vIJquIzSNON69UyJKklyxoVAgTlNMw6DoOAz09KC1
      J13epO9ex51QLPWQZSk9PQNYdr6bJEnnaTQ1P6RoGTiGwaGhXuJUst70ceOEVhQz2d9DwTIx
      NEEr2H16jqYJKu2/f6VYoK9cwg0Cxgb7MQ09n99h/gx2vARH7hZn3/mAA/c9ipPW6e0fYrPh
      kSQJQwXJhUWPA+WUq4stnnj0BOc+/pS+fUd45MxhZmZm2D82yM3lBrSWWPEtrNplbiZjfO+F
      b7Fx/QN8HKbGx/n08mUO3/cYelijt6CQvQe4+fFbVA6c4eSBQT5465dYoyeY6k1JywcYLhu4
      1RVcrQcnWuP89ALDk4exFJRJqEVbTN9Y58z9J7h5Y5mR8REKps7+AYdqZOCFGUQeJ08e3/VD
      /XWTJBGe19rutpimCeVyL1mWYRgmntugUCyj6199zJNSstlsAlCwLPwowrEsbNNsC1YJoiTB
      0HUarktfubyrdlhKKVy3jswyCsUyYeDjOEVM0yKTGWmaB5k6PbKtN32iNGWgVMCLYnRNY6Dk
      5H77tsYQKFphgm3olOyv3gGUUmy5LnGSMlApE0Rxu7mfjhuEDFTK280zmr5P0bZxLOs34wUK
      vCa608Mus1W7dPkHRQhxZxwg+hpbY5cu3zQKhcKdsihSdssZu+wtdjwIzk9/SvNLNoP1mxf5
      0U9+xrmrt76844u3waezn9WfuuuzTC/XP/cDPi/+7Y946Zdn8eKvly/UbNZRSlGr1fgmLGMp
      Jc1WnSD0CUOfltsgTRNabiNPEd7FpfJX7bbcJlEc0vJa1Js1ojii5TXJ2lmX94JSEs9rkaYp
      LbdBFIUEgUcUhe105s6fepQkeGGIUoq669LwPOIkYavVIkoSGp5HGMdESdJxOrRSikYQs9by
      yaQkTjNqfoQXJaw0PIIkZa3lE6UZfvwV2aCr8zNY4w9g+Cu8/cEFTj7yFO7iFTbiIs88foat
      rTWOPvQk0+++SZ/W4NZGzKMPHuaDdz7k0P1P0Fq6xEYz48lTo8wsZjjuLTbiIsOmT2G0zOuv
      vsTUfY9zcJ8kUv08OWlz9sMrjJl1ImeUQT1kbnWVQqmCVRllvBhy4eYmTz/5EBc/fJ/+ySPE
      W2sU+vexMj9N3/hh3vjJv+KR7/9TjLjOial9vHdulqeef46K9bsZ68uyFKstL6iUQrbz4TVN
      Jwg9LNO+J/WGIAqwLTv3zZs2fujnKs5CIwyDbdnB3dqNoogsS9E0DccuEMchCIFMJbqS6Jre
      cT24rmnE7eqtkuPghSFBHFO0bYJ2UVaYJJi6jmkYHXcUKloGQuRN+NwoRaFQStFftNE1DQ1B
      I4gpmMZ2iv6Xzo71xXm85hqvvPYm17ckxa1ZFloppBHvvfUmEydP8dKLL7K+cpM3fvpLDj35
      LT5453Wuzy/z8KTJ2curSG+Vn791jltXrzHx4OP0qBZrGzVc7zMXX6lSIa5e5cU3rzA3fY2r
      l2Y4fKDIpjnB3PR7vP/JDZ4+ZPHX//InmBOnmRzQOXdtheFiQrVW5+zZ8xw8eR+PnT7KwvIS
      b779Ps8+/yxF43e3Ql/XdaSSeH6r/UbJ3COkaQihEUQ+8S7y4bdpKzl7votUeTKZbdvb0uVe
      4G17bTolyzL8wCVJYqTMSNMUTdOxTBuhCdI0wQ86F0A2dH27aV3aTngTQhCnKboQ7T5eueeq
      5Xfuvg6TDL3dr8yNEppBjG3otKIEL06wTR1dE7hRTLOtZbXjDlAsFnnvzVeY6LVwKv1M9h1E
      1Oe4FRc4XdJZ7x/ju98/wdRQgWT1BE3Rw+mDQ3z06ktMHLyPGx/9lDcuGjz95MNMryf0JA1E
      cQQdkJZNb7lA03OBMlFzgVffa/HMH/wAFf2Myr59lLOEYrmXUb1MFE1QIublTxb54Q+f5tIn
      72GdPMapk8cQUiLMAvvH+zjQF/PhpRuMDA8zUdZ5+eXXef673yHamEcvlqm3JEemOuu4+Jvg
      duWToRtEUUCWZViWhi7AMi08P92Vq/I2ju3g+i6maZGmKY7ltGVXdHTNIkkTtF1Io0MeaOvv
      GyKKgva4Y3Qjly1XSpECu+l+6AYBXhShaRph+xPfNk3COMaxLEzDQNc0fKU6CgTephnG6Jpg
      oGgzNVCmGcYkUpJkkpJlogmwDZ1aJjHaz/YfJBv0+sw0x47+9n3tXbp8GXdkgyqlSJJ7uyB1
      6fJNxLbtbjp0l73LXdOhZRYzfelTVjdbv+kx7RnyI6dHksQEgYfnNUnThCDw2hpNX09sFshF
      a91llEzyP1WGSu/tmJsHSsM7/ozjqF3Mnu1KvSGTcvvsr5QiiGIyKWm2BRT8MCTNsu32S52N
      D8IkpeHnY/OjPCeqFURsuT5hnNAMQjIp7yjR3fESfP6NF/EHTtBHytryAnqhj5Ih2Wq28j5Q
      hkOvA+s1n9GhHjwvwio41Ksb9I2Mo4I6zVhjuMdis97CLPQw2Fvq+AHtBbIsz3YMApdisUIY
      +u1LZobvpxiG1VEe0F2RGbTm8x5jcTOfIVmc63ka99DJJY5oNmv09w8RxSG6YRBGAYJc2LZQ
      6Pz9jeKEMMkvvG4Q0AoCHNPCsSxqrVZ7Mudu0HKh07Eq4jQlzTK8KCaIE4SwsU2dVEq8OCFJ
      M6I0wzZ0zHaJ7o5PeGXV5ZlvH6NPRPzL//OvmXGLfP94hbhSYXrTQY/WqARrXL21wdMvfIf5
      9YwHhyX10gi199+HRKPH8LB7e2joo7jra/zFP/vHHT+gvUBeAxDhOMXtie44JVy3Dgg8r5Wn
      A1u7y90HUEEVoiagINyC/hPQWsi/6a2ghh9AmJ1PWCklURS207MNTMNCINA0nSxLyeKINEvp
      qXSm/FF0bJIsbQesUgxdx7ZM3DBAKdUWCVb4aYRUit5SZ2O1DIM0kxQta1tX1dR1MhkxUCqw
      1nRRUtH0P3Mv73gEOn5ijF/8+GdcuvAxG2qQ0R4bpVkcPXKI/tFJeooW5d4hnvrO9xjrMTl5
      5kGG+svUNtbRrAIiC2n4CZYhmDh0jKLZvWb8KlEUEIb5EShJou3cf8cpYVk2oO45NUUUhqDn
      AMgUNCOXNi+O5pLmSuY7wa5QuZJCFBCGAa7XxPddioUSppFnm+5mrE3fp+56+O2U5CDK+wAo
      pSjaDj2lIna7BmA3cp0rtSZxmhGlKdWWx5brEyUplp4X2vcXCxQsM+9CmeXj3fESrJQiiWM0
      w0CmKULT0TQQIq+sR0k0AXGSYZoGiFx/JY5iDMsGmZJKMA0N0JBSYnRVIe7g9hsObEdlhRDb
      r92O1u5ax//zv0NmgARhkDvqBagMhH5Pdj8/ts+P+zad2pRSogCt/fe7bU9up0K3f18+4o4r
      wuTnxrWt/7/js81V3TVNu9MN2nUIddlL6Lp+ZzZoGHY1P7vsLX43M8W6dPkNseMCyPwq/9v/
      9D9wY+vukWFv4Twvf7p054tRg9mlDW7enPt1jrHL7xkNP2S14eJFMav1Fmvt/15rumx5AasN
      l4Yf0gzu3iTvV1FK4QYBTc8jk5KtVovNZpOW71NtNgnjmPV6HS8M8T530tnRDbq2MMepxx5l
      +uI1fKfKax/N8Pj9h7h8ZYYHHn+Ci5dnePzIAFeuztC42cPJ/TZnP7jEH/3Rd5nZUBj1FfSw
      youvv88jTz/DzMwssTT5yz//j349T7DLN5pKwd5OnS47NgqV+/ztvHVTkmUkWQYIwiSl0KEq
      RLlQwA2CbRWIXHxX5mIAmoYQgiRNUYDZTsfecQeYvnSFasNjbvYqMo549rt/zPLNGQ7d9wAV
      LWFg6iQH9/Vz+NRDaGGNizO3GCokrNc83CDCdT0uTc8w3q+zvFFnaOoUFbubZ9QlpxVEOKaJ
      YxrEaUaSScIkRROComUyXC5hGwa6JgiSziLit504t71BRTuvpyjYNmXHIYxjBioVDD1XhYja
      eW87ZoMuLi0yMTHB0sIiW6tz1GKT+08c4sLFq5y47z6kbjPipLz7yWX2Hz2N4S6z3oo5ePAg
      a6sLnL+yyncfP8TcWpOJyUl00yENmkxM7P8HeqRdvkk0gpA4zag4Nmkmt12VXhxTME0KVn4w
      CZIUU9ewja+OiN8+AqVSUrRtwjjGMgx0Xc/FwQqFbVUIP4qwTZPenp5fvzhumkSkSsexvrmq
      bV32Bl9Ih+7GAbrsJe6IA3zdqGOXLt9EdjynXHnvZa6sBgxNHOG5x+77QlHyxvISvfsm+B2t
      N/9GkIvjNvPs2vbXxWIZ12tSKfeSZSm2vfuszTRNCHyXcqUXgGZji2KpB99vUir1ImW26wQ7
      pRSNVhOFolws4/oeveUKLc9F13UM3cAyzY5LOPN055RKsUTDbVGwHYQQeIFPX6WHWrOBY+ei
      uI7VuThuzfUJ05ShSokt18cyDExdoxmE9JeK1L2A/nKRTErKTi7lueMC2KquMjJ+htXlVeav
      JVy+tcnpo2NcurFMeWCMvtTD9daYma/Tv+8wj50+2PnT7ALk2aCOUyCOY5SSaLqOH3homo7n
      u1imlas57LIuWNf1dq0uRKGPIhew1YRGGHgY96AKIaVEKgntLi6WYW6/JpO8m6Ou6x2PNU+D
      bvf/sp28O7xloWu5UIACwjjG0HVMw8TosC64t1RACyL8KKbs2IRJih8nVAoOhp67QZt+iG3q
      ZO3kvbuOWOgGKot56Rcv0qptMX/zGs7E/SzPXWbl1gJrS9cZP/MYt65c7GhwXXYin4TFUgWl
      FKZpYbdlxqMoJIp275QQQsvlSmSG5zWJwgBN1zFNG0S+KJJkd2oTmqZRKpTyhSo0hLjtdy+h
      GwZpluJ6natC3F4oefsjsf2aEKAJjXKhiKFpuQaRv0Or3rvghhG2qWN9zmtUcWyyTOKGMT3F
      fCHcLpyBu+wAA0P7uLJwk6Gxg5wat7lZTRkZH0T2FSkcOEApExR6M4pFmwMHJjoeYJfPSJKY
      MPQxDJMkjvJ+AHYhPwoVyrRadQzjqwNAv0och4SBh8wyhobHCQMP07RJVIRjWrhu/Z4KbcIo
      RNf03N3o+8RpQk+pgmWYban0zm01PRc/CDB1Azfw8wo4KfGCABAUHAfHdvDDAGMXY3XDGCFg
      oFSkGYTYhkGSSYI4ob9cRIg8CFdzA+x2dnK3JrjLnkUI8ZkXqKsK0WUvcsf+kqZfvxC7S5dv
      Ejtegv3GOm+9+TZbXgeXJRmxuLiOkhkLS8u7EQjriI3lJeLPVdutLS6x0z6lkoD3zr7B9YX1
      Hb77O4iSiNY8yASCKlr1U8gitM2LeSlj1PjavyJNYqLQQ0pJGLhfS20iTRPSNBerjaOgrQoR
      kiYxcpeqELfJsw/cbcU532+164/9vNY4S3eVDboZpKy6CVIp1ryEZpThJ5L5RoyfSNa8hCRT
      hOlnE2rHG8bZl17l+Hd+gIwCZheuo/eOYbbmSCpTJG4Nu9TDBz/7CZMv/IDHDo/x4ftvM/DC
      g1yYbrCyssih/fvZrNWZPHKCxvINUmcQM6oRm330WgmrGw36+yv82x/9hD/7879gpNdi5to1
      KqNTWEmLjXqT/YeO0VyZ5c3X3uX7/9lfcOFHf01y7Fsk186x76EzHD90nPryDLIwzOS+Pl76
      ux9x37f/BEtGbFWr+ElMj6WxtBlw/Ngh9N+1GF8aIOIWyu5Da86iiqNoW5dBt9E2LyJL41/L
      fH6kDRFCIwq9vEtMmF+I78WWzNLt/mBSpkiZkaUJGeQ6ofcQswCwLIcw9EnTBNsuEAQuQmhk
      WYiu61i76KpSMjUaWcamnyIENKIMUxPsKxsoIJOw7qeULQ2nPfN3XACPP/cUb7zxEuMnHuTW
      Jx9xY0vyw4d68TYabGpjeOffpNcp0t/fAxgcHLJ5+91LHHn8+1x5+6es3rzJiSNDvPLaCgkl
      njye8Tf/7meInmFOjVr0Tx7m5sUtyuUK5YJFEtT5+MMP2Uivcrik2H90lA/fXWe5JugtWCAE
      BbtAaaCfDaHQwyrvvLnCBx9doLd/hP/iv/xzvMREd5f56buXGVYtJp/4Hq/9+P+hkTholb/k
      xFjPPb1Bv3aURNs4h+w/ibL7AAGahdaYRfadQHjLoFvom+eR6jTqHheCUqrd1dFEypQ0TXLR
      Xb9BodSLrnfuYRJCYJg2SRKi6waZZrRdmDqZTEnTmEwmFIu9uxqjEIIkidtjzbtl5hkJbOsO
      SZlRKJQ7shVnEj+VDBUM1v0Uo90pfqGZ0O/oSBQaUPVTUvkl6tCL8wtouiDYWmU9MBjqKSIM
      A103GBoZo1y0mJjoZeb6IgqYOnyIj6bXOTpkYxoGdrHC2OgwhtNDtDnP8mbA8Ogwp++7j0Kx
      wOjoKI5ToETIas0jrG/gaT30Fi3sQpnR0WE0s0i0Nc+WGyMQjE/t4+b0DQy7zOi+YXSrxNjw
      AKfPnEAXOiem+njn3Ay2ZWFXhjh+eJzhkX0cPH6Kclbj1to609O3dvUG/YMgNOTIIyATtOp5
      tM0LkN0u0FCo8gSyOJr7FXehuf+FXyMEWZoQBi0M08EwrXYQbHcuS8gnYxi0CAOXOAoIA5co
      9LBsZ3vS3svZ97bQrlJ5wK/VqqHrBpblYBhmeyF0PsZ6mJEpiDLV/sTPU6Nvb/79tkG5vaPc
      tvsPIo7bpcs3gVKpdGdR/L3IcXfp8k2mGwjrsme5IxD2eXIPQozQ8ky/25eS20lPXe6d/7+9
      M2uS7DjP85N59lOnlt57diwDDEAABECCBElRpEQ5LDEkWlLYjrBl69q+8E/wz7BvHaEIR9gX
      tsKiKEbIFIMQBImUiH2wzL5PL9NLdS1nP5npi1NdMwB7gKqWFUFO1zMXg6lpZJ8+c7Iq88v3
      e98H328eNJjaF6g9KFSbRrBmjBkbSemR8VP9OkhRvzaS3RzaFOuga3yQScfdb1uUQtxf44+e
      McH+zz79uAdd6/6fH3ZvD5wA1979G96+OWD52Am+9dWXACiSDX70+mV+77vfmupiZtynDoWL
      kVLguy47/T5REFCUFWVV0Qh8hmlGc2QI2wwnLy3upiVr/ZzTHZ+NQcFy5LIdlxRKs9hw2E1K
      liMXKQRzwXQaI2MMe70uQkpc2yErcqQUGF1Xb2zbJgjC8cP7eezEOXFR0vQc9pICKaHpu8R5
      XcM3ps77sqRkoTF92VZrzTDuoVX9hq21xnFcsrwO+BYIwrCuLB04AS5eWOPVb3+VN9+9zvX3
      3+B//vlr/Mbvfo87V87z3/7kNi88scy1jT3mT57mzjtvIWyL3/3j/8DS4UrBRwYhBO1GyHCU
      kCioqye2JWk3WgzTFCGgqGprb8+pdfafR6UNeWVoejZ7aYUlBVmlaXkWoeuyl9VO1MNCUVSG
      yLVwrMn3e9poKlVhCxshxUgV6qBlvSooqxLShEb4+eVKgLmwlmSHrs1eWgCCucDDGGj6Dpv9
      hFLV0Ua9TNAJppsEUspRDFRdqq1UhbSs+nyhqsYlVnhIGXR5yePWVknR3+HylRs88/Rper0h
      C6unmQsl21t9zj3/BfrdHdorp3nu8TmymYzoczGmtvAuq/qBbEcNsqKgUpo4y/Bdl4VmE8ca
      hcRNKE1JS8Ugr9gc5tiWYC6wiYv6FHQ3KVlqOBxveniWxJKQlNNF0kohcR0X23ZI0oQwCFFa
      0W62cV0PgZhKRnNvUGvytakzuxxLkiuFNgbXkhzvNAhdGykF6SHic7VWo5RNjVIlQdBAVRXt
      1tyovCrGMbQHboK1Krh84QJWc5nFoGJtJ2F1dZXtuzew28c4tRhw4eI1Hjt3jmwwxLMUbmt5
      fLo242CMMQzS+tg/CgKSPMd3XQR1dm7D91FaY0lJnGWEnjdVZS4rFZ4t2YpLWl79gOVK0/Ft
      CmVwLMFuUjIfOp8woZ2EsiopyxLf80mzBNf1sC175L1TP6TuqLvt8+ilOUWlafoOeaURAiLX
      QRmDY8lxs0paqpErxHT7Tq31WGoupUVRZPh+OD5wK4oM23axbXsWkTTj6PILcujZQdiMo8bs
      5GvGkebAVfuFt99g7tQ5Ll3f4JtffeEzi1tF3GVzWEFWcOrMrD3ys9jfA9iWhWNZ9X+PPCuL
      qqLh+8RpSrPRQClF4E1W/VDacG9Y64kWGx6bg4x24JAWikJpOoFLLytYbHhU2tCY1rTMGGT3
      I4wTYYJlrHtvo5snEVkX7ADjtjDBIsjJyqtxllNqTdP36MYJldI0A49hVtD0PZKRQ5wQgsB1
      pj4HUFoziAdY0sJ1XNI8JQxC4iQmHO0FfO8zXCG6Gzd5/Z2b/P6/+UM+/uAykZ0zSHM6S3Nc
      3MhZdApCR/HR1Xu8+pVn2dra5sff/wn/4t//Med+idLYf9nYN3BN8xzbtmmHIUmejy37KqUQ
      QpBk2djcdZJNsJSC5cinmxZ0kwLfsXCkJKFWRBZKIRD0sxJbSkJnOlcIhEC3zyLidWT/JsZt
      YpwIkWxB0UPoEiwX4y9MNFzD9+inaV3njxr00oxKadz98LoCsqrCEgLHuh9oNyn7zftQ9zI7
      toMY/cqLHMuSKF0/+gfeXWm7LLQDur0ea2sbbN65jdeAH/zoPfTeVW5vDbhy4QqbF9/n1uYW
      e5XL0+ee4+nTy1Nd6FFGKUVaFDSCAIzBtevSZxSG48mQTdiiaoyhlxZ0AgdLCgLHYifJEULg
      WBLftmgHzn3J8BRlUDG8g+jfV9EaaWP8eWTvCnrheYw3D7pA7IfwTUlalASOQ+i6hK7LIM3o
      hAGOZWEMDPPpHCwAtDbYljU++bUti7zIicLG6GDMkI/GPfAT4Nhj53h69TGuXruFJwbk/jzL
      p57hqTMJZ4/5xM0nyW8rnMYcq0srdLRHWuxy6fYW52aT4KEYY+jH8fidPi/LUX6aTV6WNMMQ
      rTUN36efJDgTyk6UNqSVohhqFhoeO3FOy3Motaao6iVQXinavsN2nOPZk2/9THSy7mHYfg9R
      DFALzyH7NzDBKkgb48/VIXxT6KH7aUZalDgjKbVrW+RVxTDLafoeIAgch8QUE9+DB7Etq3ax
      sCxcxyHJUkK/PqX1Xa92mxg5bszk0DOOLL8gh3bdyQ4yZsx4VJgdhM04sgghxIGLwdsX3uYH
      f/FDPr6x8Tkru5KrV65/6jXF1SvXfuErtc64du3WoS/2UcMYQzpyQcjSmEF/F6UqBoMuWqup
      7Qv32XdXqLOec/qjcYeDvboFsZw2JHu/PzejKDK0VvT2tknT4djRoXaLmLx9s6wq4rR2lojT
      lKIqKauK7b09yqqiNxySFwVFWU7lCpEXRV1V05qdXo9hkpBkGdt7e1RKsdvvU1UVeXH/Hhy4
      Cb5z8wovvvrPef2v/poO57iyNuTl5x7no4tXCOZP8Pi85K3z1zj3wlnee+9DZLnHWuzw9Zef
      4s2fvsG7V3eYbwg+uNXjqy88wZtvvsNjzz7J6z/6S7Zf/SavvPjsWJt+VNFaY0wt3HLcOicr
      TYZY0iKO+/h+eMhxFRiD0Zo0i2k2O2RZgpSSNBngHXJcMxqzNIaw0cS2XeK4j6oqtK2wrMYU
      16ipRgnwxhiqSpEXBe0oojccYluSJMtwHQdngnSYBynLEt9x6EQRu4MBnSiiEQT049oZo5ck
      hA+crxw4epUOeP21v6Ext8Cdmzf48L2PqdItut4TVG/9jI9Fya9/5RnePr8GKG5dv8E7b31M
      f+NFjr34EnNrb/B//tf3Ea6FrhLW1ndZfuwUQWeFwa132X36WRYP9+/wyGBZFpZt1w0sWlEU
      GUEQUeQZUkgG/S5hozX1RLBth7LMMRiqqmSvu00YRhSqrB+A3g6t1vzYrJ8eSQAAFfFJREFU
      ln0ShBA4jksx8geN4z5SShzHo6pKijyjLApa7fmJxvNcl7wsEELguS5lVeHYNnuDAd5oH6qU
      Gn86zDU/39Fjf6y8rH/OfhxjSTmOTmr4PnlZIoWgNxxSjtSrB04AP2xiDTVVpdja2mZheQUv
      CFlot8jiFp4Z8NN/eA/n+MtEkcfW5ibLq8usnlrh4zffwsiQ02eOkVhNji8tsHbtIrc3dllY
      mKfl2Ef+3R9qo6l42BsrFo02YGqfHCEFRZEdqnOrKHKSeIBSdQ5AVRZYtoMLCGlRlPmhOqzi
      YY+iyAkbTRiN5XkBCIHBTOUK0Y9j+nGMbdkMk2RkDOwBdSdXw/cpVTVOeJz0GveGQ+I0rRWf
      VYWgziIwWt8PzqNegu2Pe6hN8M0L7/DB1Q1e+fXvsNKavmNnxoxfBoQQn8wIU2r65oMZM35V
      cRznk+cARTF9hWDGjF9lDtwD7O3cIy0UYbNDO5o1+h4VlDZ0hxmt0MW1LYpKMUhL5iKPrFAj
      1aZDd5jTHMkrbCmwpMSyxMTr9VJpKm3wbUmla3cIZQyVMthW7RRh7yfHiMO5QmhdJ81LKTFa
      I6REqwpp2ePOMHjIBOhv3eDPf3KB3/+X36PhWSBtLFFvHizbBq3QyKlVejN+udnqJWz3M25v
      DXn5ySXO39jBtiR7w5z1bkylNMfnI3pxDqKeMI4laQYOT662mdSBOCkVaakpHElaakLXwhKC
      pFQUWV0e9myJJZjawQJqNWhRZGhV4bg+ZZkTBBFpOsS2XYSU4wDCAyfA6See5sTllBWnx//4
      36/hCsHKvEVWlaTVPGW8hakKfutf/zsWZ3vgR4blTsheXLDSqUuvoWez3c/YGWScXoyIApdL
      d7t87ZlVPr7VRUtDWlQUlaKoNM+fmUwO7VqS3bSkE9j4tkWhNA3XIqsUyw2XrbiohXwGRFZN
      PQmktLBtBz0q1Wql2D/z1VqhVTmWS3+mLFCXGV5zAVcaeknB8dUFVFki/IimJ6lme+ZHio9v
      75KPpNL9pGC5HRD5Do8tN9nspVxZ22O5E/LhrV2U0Xzx8QWW2gGWlCT55K4QudJErk1SaPp5
      xbBQlEqPlz7LkUtoWwigUNMbBCtVkefJyGa9pKwKlKoIwibWqDdA6fp6D1aDGsVgmNNsBmxv
      rCHDDsPbH/CXf/MWL33nX/H0AmTGZWWxM/XFzfjlZZAW9JMCz7HY7mecWoyIs5KldkCclZRK
      02l4bPVSOpFXJzlqTVFqwBAFkx2uZZVCaUPgWCQj25PAqZfTlhToUWW+VBpLCOwpPIygXgJV
      ZQmi3pdoXcfQylGCplIVUlo0m00xk0PPOLI0Go2ZLcqMo8tD1aAzZhwVDqwCvfmX/5215it8
      +0TBn7x2jf/4R99lOExptyKyNEc6DmUa4wQRjlAMkpyo4TMYpLRaIYNBTNRqT+U/eRSolOZa
      N6WXVjy1GHKnl9H2bUDQTUuOtTzWehln5gIqbVhsTN+gZPpr6I13EeESFANM1kOsPI+59yHy
      5KugSkTn9HRjGkMS98eJ8/GwR7M5Rxz3EFLi2C7OKOF+EuI0oSgrOs0mu70eYRCgtSZOE3zP
      J8tzgpErXuj7E50DGGMYJHXodhQE7PT7o3ZLm6woiIKAXhzTbtSq1UbwGWXQEofh1l3Oa49j
      Dc3rP/oLjO1guy5vvXmX73zrKa6uD6hKRduKaZ94mr27V2kuP4HM1xgWNlWwwu99+0uT3uMj
      gW1JnpgPWe9n5EpzdjFkc1AwH9p00xJHCjxb0k0r4qLCtSStCf0mTZVj7v4cceIriOZxRLSC
      2fwAtELYAcYJMd3rmHgL6XcQ/uSZaUIIgrBWqtq2g+cFGOoMMq3VuCegEU2WEdYIQpQeIoSg
      FUWUI8Pa0W4U27IoqwqtNVprmo3Pl1oLIWg1GvTjGCnl2GygfCDB0rEs8rKspdijSfWQKSt4
      oqW4lfq1ctPcP417/JmXOLnY/IQV9thzXT7ovT7bWhzE1rBgOfLwLcnNbkapDIO8InQkpTIc
      a3lEnlU3zU9TArRcxOlfw9z7ELI9TNarVZp+G6SFnD8L4WLdwF7GU11znREWk6ZDiiIjy2Ly
      LBn3BdTJkZPXxJMsJU5S8qJgEMe17Lks8VyXSilaUYTnOiAE1YTjGmMYJsm4CWYQx6hR34Hr
      OFRK0Y6isdv2vu7twE1wkae1qagCYTSODb1BSqfdpCgNvmfR39vDCZu4QtGPM5qNgP4godVu
      MOgPabY7syXQAVTaYMs6rCGrNK5VywHqsqAcB1nklca15dQmtqbMoByC5YGwQBfgtevsYWlB
      PgCvNXX4hlIVGIOQFkbXrhbSstmXMAMjS/IJ7oFSo7AViRpNctuyqJTCHvVIAGM59CRLK2MM
      1ejd3pK1wa4QtUyj0rq2WaEOEFEjvyVLyk+WQWfMOEpIKT+pBp2dA8w4aszWKDOONAeWGDau
      vs/fnb/J/Oopvv3qS/WGWSuu3bzL44+fnjAJasYkGGPI0yFVVeL5IXkW4/kRxmhc7/BS9Np1
      oo9W1WjcFD9oYIzBcf0D/59uUnJjO+HFky2kFNzYSdmNC87MB9zuZpRK88RSyK2dlGePRVy+
      F+PZFpFnsdz0sCdUg8ZZTl5VtMOAbpxQVIrldpPuMCF0HeKiwHfqEI+G504th65URZzEKK3w
      XI+yKgn8gCRJCPYd4rz6Hhw4Ac6/c5FXvvEVLl/f5qP3fsbqiTOsbQ/Y2emyfulddtKS0089
      z/UP38OeO8m5Fcmb713mN/7g33K8OYuJmRohCBotijwBoCpzwKAdd+KN5acxxoxT1/ctVsoy
      rzPJHJeDzkDnQod+dP/sIc5rc93AtRACpBA0PZuVtjeu8SVFreuRUrA6YXtsw/dQaZ2EMx81
      GKQZSmkcS47HLSuFEHXp2J8gJ+1BbMum2WiS5RlKK6SQWMIajVuOvwYesgRqBJCIDsn2bXq9
      LsN+l+4gobvXI801L734FBsX3ufqTsViO+LDS5eR+T3W92YdZYfBGI1WFbbtEkYdhJQIIUcT
      4XAIUUt/lapwvYAgbCJEbcVeVZP9O52aDzi73Bi900sWIod4JF6TwPPHmyxGLkJALz1cSFxa
      FASuyzDPycqStChZbEZ4jo0UkrQ43LhZnuF7PoEXEPoheZHTbraxZC2KKz6dEfagGE7lMT//
      h7/H6pzm8TnDhVtdnjj7BHma4ZqK9nyTQSJYv/4+OjrBnDVga1Dw5HOvsBTNPgGmoS4xllRF
      jhdE466lPBvieuE/6hOgKguUKvH8xmhciywd4gfNA5cV28OC27sp7dChUoaVlsut3YynVxrc
      G+SkhWa56XJ9JyHybJ5YDMlKxTCvJ8WkBgn9NCMvKyLfQ47McYUQqJF7gxQCA2RFiWNZeM50
      z1RdEq1wbIeyLMmKjEbQQJu6/JllGa7r0m61Z2rQGb9IHWRdS5MfZX7BHNebMJFkxoxHhZkc
      esaR5aFy6OsfvU0v07z/7jvo0fRYv/Q2m5+SkKxfPF/ng+mKre3u+PVk0CUtp29lm3G0MEaj
      b/8UfetvMVkPfe3HmP5d9O2/w/RuYfp3pzLd1cZwbTeh0obbeynr/Zy1fsbFrZjNYc6VnYRh
      oeg9kOp+8DnA7St4p17k+rWreBScv77Jsr3HnY93efnFF3CHt7i+o1ku75HTIPFtNnYG7N65
      yHpis3vhNXrL3+C7z3V4+9Iar3z5BS6f/4Dc6fDtX/vypOYBM44AYuV5zM5lzMa7iPmz4EZg
      NKZ3G/w2IlwA++BziwcxxrAdl1TKMMwrtIG5wMazJb5d9/9aQrE1zIk8GzV6Z3/oSbA2Gq3h
      +MlVHLdJM/R46dVf4+2f/oAf/vANdu5cYict+eFf/IhW5HF7fZO7d+7Q2+tz+smn+PpXXubm
      9evcu/oh7350iT0VkW5doZi8d3rGI4y+9wH072K61xHt02DZmHQXs/l+/Wfbh/geZuO9ycYz
      cHMvpZtVDHJFqQ239jIqbYhLxVxg0/JtHEuyl1bciz9VBn2Q7dsXef3nHzJ/8mnM5nl25CJP
      LTpcWety/MkvUtx9n1g2OT3Xwuq0GcYlWakIy21ubOd8+dnjvHUj4ZTTY2Mv5dRT5zDGQ8cb
      vPCVb+LN7IRmAKbK0Jd/iAjmEQv1s0bnMUTzOJQJpnsV4XcQS1+YeMztuKDt29zuZUghWGq4
      dZOMZzMsalPc9X7OXOCw0HBnPcEzji5CiPtl0DqoYLY+mXG0+MQmuJwwl3bGjEeFAzfBO+s3
      WN8dYvIBH125NVVzY3d7kylymI8sxhjyLKGqSsoyJ8titNbkeXK/A+uQ45ZFNh5jP79rf1z9
      /8ECX6mqdlwrc1RVorU6dENVlufkRV433mcplarI8hylFEpNN26l1Li/OMky8qJAa80wTVFK
      kWTZJ+KZ4CFl0CvvvMZV8TxfXy35yYfrPH5ijo3NPY6vznPn7jqN9iJWOSQXAXMNi53dHo7r
      gB1w+eev0Xny65w9s8Kly5d4+swJNrsxK0vzaBxQBZ4juLO+zcnTp3GOaE1Ua4W0LIo8xR1J
      c7MsRox+t20Hy5peV6VVRVUVWLaLGj38Wkm0UhR5gmW7SA5fhaj7g4dYoyT22oHZOpR0W2tN
      MYpKKqtyHF5dViWVqrAsC9+dTJ2w3xJZVhWhXztUZEVBVpb4roM2hrKqqLTCsWzsUQD3gVqg
      f/irP+VWPs+xeY97G1tEvmF+cZ5uGkD3Etaplymuv81fX9rmt195DGX57A4FVTxkKcppLJ5h
      O5WYfAcT91iea1G25lHmBPSukvVv8fGNTV76rT/iN186NfWNexQwxlDkaf2QC0jTGN8PKYo6
      I6yqSvyggeNML0/J8wTX8UFQOzk4Lnk2rBWmVUnYaB9qckHdL77/ji9HluPGGISUBOHkThMw
      ijUa9BGCscmCbdmYUZ+x0hrHtmkEk+ek7eeBpUWOFHXYHjDOIpNCUKqKwPNYml94uDHW423D
      naR2hfBtwe07G0jV42cfrNG2Cu7s5awutjCWw4mTx1hYXKHtO2A0d+7cpRFF9Q9ZZWxs7WKk
      x5XzP+Pudp9Gs83jz7zEE8emu2GPEkWRkecJZZlTFrXs2RiD6/pYtjt+CKalKguydEiWx/Xv
      6RAw2I6HZbt1guQUp6ufRkg5klmXuF6AtGv3hsOMqY0e2aEYHMfBYNBGE3j+KB2yTqacBGMM
      /SRhkCYkec4gScjLcuwCYUYZYY5jj9I563t74CfAQTfeGIMQtZsBQiCMwSA4qFln/2v32b35
      MevWMb5woj1+ff9rDhME9ygw6cN9mHCIf4pxJ/kehxlzkuud1BhrWqIo+qQcOht9XMyYcRQI
      w3B2EDbj6DIzx51x5DmwFPDGn/5XbjS+ye+czvgvP77Ef/5Pf3zwF86YCm0MG72YrKxYaTXY
      GiS0Ao924HL5Xpfj7YjtYcpCFKCNYS78fBUk1Bu67X6PyA8IfY/N7h6ubVNUJdoYIt9nkKZ0
      Gg0M0PAnG3cfYwxx3EMKiW27xHFvFD1UISxr5BcaTmyOe/+6NdvdHaQQzHXm2N3rEvgBaZbi
      uXW7ZCNsTGWOq5Si1Wiw2+9jjGGh02FjZ5u5Zou94YBmWFeUmmHtN3rgc201FhDZDpd2HJ5Z
      CfnxD/6MZ589zXrP4aO3XsdffQZ/eIcijXn6la/z3vkPyeMSR2l+6w++w2t/9gOiJ18hv3ue
      s6/8Jl99/uxUN+ZRRSBYaoZ044ysrBACDIZukjMX1i7IUgiSokRpQ+g6eBMEEUopaDcaaK3J
      igLXsUeWirVnZ52aLkhHB0O+62JN8bAKIQjDJkWeUamSdmeJJO4jpMRoRVXWq+ggiKa7H6Mi
      iBCCoijwXA9B7T5RqTrpPctzggkm7H1z3CFSStpRRFbkpFlGY2SFIoWgKOuyrWvXatCH3AXJ
      Ma9gvfBxpODZp07w/f97niVnG2fxDL2tdYwb8bXnT7A3yDhx7nmWOku8cGqZq1cuESwfY3tr
      Cyta4svPzR7+fYwx7AxTOqGHa1u0A48kr4jzkt04o1KaY50I17KwpSSZ0BGhjgXVKK1J8pw0
      z4mzjPlmhOe4tBsN5ppR7YggJfmUkpf98bVWCKAsMsAQNedw3Hriqmp6GY0aGddalk2cJqRZ
      SppnzLXn8BwXKSVFMZkzxv65wb4hbjJ68NMiZ5jWRrxLnTkc28YaHZLBQ+TQu/fu4ngB3VRg
      65Rs+zrvbFr84bee4+fvXWRxZYXAsegEglh7GGlRJSmBBSJ0uHLxOvPHTuFJw/HjqzMjrRFa
      G7aHKcpolpoh/TTHs20ankNRKWwpKXVtmNtNMlpBncP1+eNq9oZ1u14nqj/a1ejTQEpJ6HlU
      SmFZFoMkoRWGU5vjJskArRVBEFHkKZ4fju3R92Ub7kMMtz6LOIlr+3U/GDXjm1FpXVAUObZl
      40zgC1QvgWKqShH4PmleHyi2o2hslLt/eJekKb7n4tjOZFWgqiwQlvPIuwTMOFr8ghz6M88B
      ZpmoMx5BPrEJnh0JzDhqHKwGff/vaZ84y9Wbm7z6pS/M1vD/FJQJcvcj9MJzyMEtSLcwnaeQ
      3YuoxS8iyhgTnfhHfQuTbGKKISJcxsQbiOZJUAXCmyzKaDyOMeR5gpQSKS3yLMa23Tp/V0qk
      ZWPbzoF+o5+JruDqa3WQx+JZWHsHVp6D7k3onK4DPebO1Kk2E1zj2rCkUIaVhsNmXGJLQcez
      uJdUrDZs1ocVK1HdEN8ZRU8dOAG2717jb9+/wT/73vd4642fkFhznIwUN3Z2aXeOYXkRDTXE
      i1w+/PgaX/rGt1lpH97J+Ehi+5hwGXRZRxa5LUTWxVgucu8KxuvUfyenM4bdx2hVB+QFC6By
      EBYm2arzwj6l1ZoE1/EpqxzLcrAdD60UxmiU0uPNpTVtIpCwYOkc7FyB/l1on4LGEuzegN4d
      8KI61slvTjRcXhnmAxvfFpxsumwlFdtpRduz6qQZAbupwrcFpfosVwgpsSVk3Rv8+O8usLd9
      j7s3bnH2lS9y5+o265fe5tLGDuvXL9Ndu8iFW90Dh5lxAEYj770NVVY/APsvWy7GDjDNx8D2
      EdkOYnj3cN8i72GSDZASVAaI+l1fSEzRh6I/1XhCCO6rHg1SWIDB8xtIy67PGvIpbTXXz8Pe
      TbDcepK3TtQP+tq7cOyL4LegiGHz/MRDLoY2w0LRzxU7acVSaI8jpnYzxXLDxrUEWWXYzerK
      1YETYOXUWX7nu7/Nva2Mr33xFO2FBVZPP0bTDTnz2AnOzDtEq0/SbLVZOvkUx+Ym12sfeYRE
      L38JdIncu4TsXsQ4ESLbxXgdjLTQ7ScBjXGnW6qMv4XXRkbHEW4bU6XgtUDaiGARjAZ7uk/r
      ukAypMxTiiKjKFKktJFSYlt1HX9qE99jL0BzFTber69JV7B9BeYeA8evl0C2X38CTEhcaCpt
      sISgnyvWhyXzvkU/V7S9Om9t3rcQQGDXj/705rgq4/0PrvGFF76APVMSzfgVptFoiP8HWLWy
      6dXiSokAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='rank点' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='中国玉米大多feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='仪表板 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYwkR3rff3lUVlXW3dVnTXdP99wccoa73F2tqMPc3QfLggVDFgxLhg1b
      EOAHG9aTXwzDgP1iAQYswwcMPQkwYEkwDEGyIK+0suWVtFotl+SQOzxmyDl6jr677rsqz/BD
      9VRWzvSc7ItT8QMIsj5GZkZmxz/ii4gvIhQhhEAiGVPUo86ARHKUSAFIxhopAMlYIwUgGWv0
      z3Pxg/6zoijD36N9akVRhv9PIjmOhARQ3bjD9e0uP/WV1x57gd3a4W5ZZSoFntvn4xurXDyz
      SDI/h9vcYKNiUywXMRB8+etvYhragb+ERPKiBC6QEPzVn30fP6KyvXaHd999l1K9w9qdm7z7
      7rvUOxYrN67xox9dpdW1uXFjBafXQkFh4+5nlDsexUqbbDJCp91G1RS6PesIX00ieTqBABSF
      ublFXr/8CrfvbfK1r32Vmx9/wL3NCl/7yut8/P57bFVbfOnSRVRAeA7dbhfLE3iuDUDK0HAU
      DTOVJmKYTGbMI3otieTZCHWCFXXwM6r5vPfee5i5GTSvx3vvvc/E7Am69TIfXb+BUBQEAj01
      y09cWqTR7oOiYJhJFNfBd2xqtQo9xzuSl5JInhXlRWeCt7e2mZ2bRQif6598zLmLl7n2o3dR
      owkm8pOkYyp9Jc50LrXfeZZI9o0XFoBE8jIg5wEkY40UgGSskQKQjDVSAJKXCiF8/vB3/ydt
      28N2HGzLwvM8bNvZM/3nCoWQSI4bVnObze0t/uq7f4ofz7L+6XucOf8Kn90v8U9++ZceSS9H
      gSQvFa3KNiKepbh6h1xhiY2V6yTTaWodl69cvvhI+n0VgBBCBr9JvlDsax/A9/39vJ1EcuDI
      TrBkrNn3TvBHKzt0rUGPW9dUvnq+sN+PkEj2jX0XwG9++0fc264DkDINfutf/cJ+P0Ii2Tee
      SwCO46BpKo7roykgFBVNVRBCoGly4Yvki8czC8B3Ld5+90ecmp+h1rYwDXDR0TwHc2KGuakc
      ew0oyVFWyXHmmQVQ2t7E8xw6lkfU0FE0BR3odXokVW2koIcLvBwZkhxnnlkAM/PL5KZPoCmC
      ZtcmroOnRjAWTuL7Hqqq7oogPA8gXSPJcea5+gCGYQCQy0Q/z20kkmODnAeQjDVSAJKxRgpA
      MtZIAUjGGikAyVgjBSAZa6QAJGONFIBkrJECkIw1UgCSseaZYxh67Qb3VjeZyE9Qb/VIR8FR
      o6TNGI4nmJqcOMh8SiQHwp4C+O53v8tbb73F97//fd566y0AYqaJZ/Vp9mwSUQ1XUVB8m5vX
      bnLuyz+B53m7kZ8j0aACXNc9jPeQSF6IPQXQ6XZYW1tjc2uTVqtFKpWi226hx6KYhk67a5GK
      gqManL14GbvbREvkd68eiQZVQNdloJzk+LJn6fzS61/CFz6XXrs0tCXSE1xISzdH8nKxpwAW
      FhYQQuD7PqqM55e8xDx2FOjD997mypUPkWe8SF5mHiuAdDLOxnbpMPMikRw6j+2hVmotYoqP
      +6REz4j1/f+I394BQImmiH3zX37OO0ok+8OeZVv4FhoqTctlP3oA7p0/w6+sAKCYeZACkBwT
      9q7clQjJiUl+LD+D3NNB8jLzGO/G49Nr15maPcH8AT34O59VaVmDLnY8ovJzF/NPuUIi2X/2
      7AQrSoTLly9ge/6BBQv1HJ/u7j89R7YzkqPhseXbdyzurNyVLpDkpWZPAVjdFl0XXr10cV86
      wRLJcWVPAWi6QaVYori+zoOjxYTvUa5U8RybRquN1evQ7Vm4rott24eYZYlk/9izE6wbUc6e
      XuSH11Yxdm12v0+zvE2xZqL5LhEdfAF2u01+fpmpnL67NWJ4b1DP83h4f1zPe3R+eS+bRHLQ
      PHaOq1pvktRVHCAKWN0mXSIkVJ+O46Er4CsaeiSC67ojZ4OF9wZVFAWFsCz2OkdMni0mOQoe
      P8nru8wunhwmMDN5Fo0EpmniuB66CkLR0FQVIfxBQd+jEKuq+rAmBra90kkkh8yeAujWtrm3
      WeL866eHZVePGKQjA4fo0Rh/WXglX0z2LLnVrSJGKsrHVz6S0aCSl5o9W4D5i5eZv3j5sPMi
      kRw60neRjDVSAJKxRgpAMtZIAUjGGikAyVgjBSAZa6QAJGONFIBkrHnmDR/sXpvNcoOUobDT
      2N0cVxlsjuv6MDM9+flz89kfgN0e/LeRgAs///nvKZE8gWcWgBFPEo206Dke6biBUBR04bHy
      2TXOPmVzXBE2PbJh7gObVruD0q8NbNEMntxYV3LAPLMA+p0mpVKZmekpml2bdFTgKDEuXPoy
      dr+Flniwb+ijm+MqSiALhUeD6fa0KYrcWFdy4DxzCYsl0ly+NNgsd+bAsiORHC7Hvor93d/5
      bTrtQb8glU7zC7/09444R5KXiWMvgDu3b1GvDfoFE5ODjvbNX/stnGYXgOhUljP//O8eWf4k
      X2yOvQD2wnc8hDPoIPu7HeWd7ib+7uoFXYkwFZ89svxJvjh8IQWwF79377/TdTsA5KPT/PL5
      f3bEOZJ8EXhpBLAXzT/6Y8Tuli1aJkPym99gpXwLXwxaiqgeYzG3xI3iDv7uWG08EmFpQm7T
      OC683AL4vd/H3+1AR06eJPnNb/Br//df03MG/Yfl/Gn+7d/8df7FH/4vrF1X6sL0DP/hb/8d
      uiv/GbErFC1WIDb/i/DR1WA8N5mE02cO/Z0k+8tLLYDPg9u6DmJ3Is63Bv++coWhAmbnEKdO
      c+/WjeE1MTPB3PzC4WZU8rmQAvic3P702vC/J6ammSnMceWP/+nQlpl6jXNf/VX8teC0HSVu
      oE5nDzWfkr15YQGUttd3Y4HiOJ5LLiv/oAAIQWXjh8OfiqKBEPh3dwJbPoWS1Wn/xk8Obfrp
      bxH5mX/HJ9/7k6EtOz3H0sXLsPZ2cP/ENCJ/jl69GlxrRFFNk53extBm6klyUdmXeRovKACB
      5QqE6HL91qece+PN/c3VOCAAf2TTGd/Dc2w++D+/NzQtXfoqS+cvwN3/F6SbvoSbOsnqD/90
      aEoXlkhefIX/sfKbQ9uruS/zrdzPcut/fzi05U5Pkzib43d/57eHtguvvcaZL7/Bf/qL7w5t
      by4t8zOnTrH98btDW2p2gV5ilt/4gytD209dWuBnXp2DETeQ6Vl6iQyrH6wMTfmlaWKFKVYq
      vaFtNmUwYVi0qreGtniqgKdNsLrTCG6XS5CJ67RbzSCdmUDVVDqtVsjmaxqVbjt437iJLyw2
      G0HFcCp/GkOPDn+/oAAUfKePo0ZZPneebqNG1px+sVtJDpbRQEQhcGyblVs3h7bJqSnmXYer
      G+tD20I2h+86dCtBqxVNZenpeT5aCWynCznoduCD94OHXH6d7pTOZ396dWg6983L5CYnuLrZ
      Gdq+VABNXOe9b//jIN3XfpVm4uf4N//tL4a2f/Q3Xuenz2W5+s4PgnSvXiaeSPDhu0HLeP7S
      63STSX7/4x8NbX/9/EVsd43/8r1/P7T9+s//V65u1Phwcw34HC7Q4vLZ0G/f9/F9n+XZDDFj
      sMzAjEYGm95OvgKR1CBhLIPneeTiKsbu3usxXR2kS85BJDkwGknwPArzC6QzGQDSmSye5xFd
      mERvD9JFckk8z2MmWqCv9wHIGDk8z0M/fRq/Nxjx0Wdn8TyPM/mz9N1Bp7aQPoHneVyYmsbe
      3Zz3ZG4Cz/NQ4qeGo0BEB+mYngoKVDYLvk86mxt+AzORxPcFmekvBbbsqcG3ScWGNiUWQRHA
      bJBOZJcRKEwtBiNLqclZPKFAaqRjHZtACIhmAvdGjydQhMpcLEiX0XMIIJo3g3SmgappLC4t
      DW3ZiQkiisor00GE10wyBYoaeoYWMzF0lQuLwWHpU5k4nqrB1EjlZyZQIxrZhSA8PpaOoyGY
      NIPN9uM6aCIR+lZGfJp4VA89I5eMoul66DtHDONRW8QgqmkUUpkgK3qEiJLk7OSF4D0UnUw0
      xtxuOkWIh/dufjGGB2s/tMentEnbQdiEEI/sRfsstofvtW8rwhRFQVVVhOewubnJ5tYWri9Q
      VRVFUejUK1z98CMsN7C162WufvgxljeweY7FxsYGG5tbeCPXdtsNtoslfEFgaz1qazfrVOtN
      2M2Loij0u222dsqAEkq3XSwjCK6tlzZYWd0K2ZqNKrVGK3S/WqXExlZx8PEepKtXqTfbw2+g
      KAqV7VWuXrsVsjXqVYrlashW2rzPR5/eHtqsXofNzU22i+VQuu31u3xy407ItrV+j/XtcLpy
      cYvtUiX83GaTRrMZsq3fu82Nlfsh29rd29y8E7Z12w2K5VrIdm/lJrfvrYXTteoUK/XgPbqt
      3XKwHfqmldLO4Js+sAErNz/j3trmiE1QrdWHBfdBulJxm3qzPSxvCoJbNz5ldX0rZLt541NW
      N7aHtlajyvb2Fp2ePcyHZ/f4+KMP93dJpKIoKFoEz+rSbVRo9P3hS7TaHYRn0XcDW7vdwfcs
      7F2bpkcw47HQ/QA219axbCek5o31NazdeKBA4YJ6tczG1s7Qtr6+Trm0je0Fz11fW8N2nNC1
      3VaDe+tbCDFyPyGoVkps7ZSGtmKxhK5roWuF8KmUdtjaLbQA3V6XTrcXSre2uorzUJ473Q7d
      Xn9oi8YTtJoNiqViOH+dDr2RdACNWnl4mHmQvzK6FuTPtXus3L5JrdEOpWu32/QsK2RrtVv0
      LTtku33zJpVGI3xt69F0Nz+7QX23o6ooCuVak0QySWF2mk6nNxBircyN23dwXS+0m3iz2cJy
      7BGbQqNaorQrKEVRQHisrq7jeiPXCp9mqxO+Vni0Wl0s2xraUqkUOG12qoGorH4Xx/X2f02w
      oigkUynimUkyseD2nlBYPjkfrA4TPrFEkpnZE5iRQTpF1bCtPkZEpT9ycN7UzDSe6yBGFtvM
      TE9RrVSHIQwAtWoNM5miMBP4pNGYSS6bCuVxbjpPuVoPrVTzIikuLE0PbVavQ6vTJxZPMDey
      3NMwIkPxPKBV2aLSZ5hOeA7xVJ7lhSAgz/ccZgsnHmmio/EUpxYLoe+XSiaYmQ6u7XXb+Fqc
      qYl06NpILM2phXDQXySi44yspNONOPGYSbvV4IG36zg2k9NzofdybIvpmQKzU+Gh02q9jrMr
      lAfYviBpBiMp7VYDLWYiRp6bTsS5f/cuxVqTVHLQD8nkJlkuTNHo9kL3y8/MYRqjh3H5fHbj
      BvfX1gKTopFOJeh0ukOTZbsszBfI53IP2ebI54J+hKKooMeZmwzSoUaYmZk5mEXxdq+PM3oy
      jBBM5rPUOz6Z+OBFPddhbX2TfqdBd6SwCyG4ffMGrieG1/Z6PRy7j+sHJbbT7eLYfRwvsJnx
      2KClCG7GRC6DUKIYWlDwur0eVq8fEk9UE5RrHbTdLxKNJ1CsOtdX1kKHe2iaTmtkSA4gEjXx
      rf7wt6JF6HYa3Llzf2hTtQjtyiY37gVDcuLBuz209LPf64VOzImbSQxdwRopiEII4rEorhve
      v9u1utzfbf4fEIvqpFNJutZAuFavS3+3RR2+gxGlXq9RbzRC1y4U5jCMWMgWjeiMes/JVIap
      /ATJRNDhTufyqJpKcXsrdO3aVhlDDfLsC4FpaJjJzEgqhdMnF0ilR+aWhE+rPajth/kwdNbW
      N0MVWdTQqdRbaNpo0RY4noc/Un5we+xUmgcjAFVXWbtze+T4U0GxWCYWM4aZ0CJRlhcKaEac
      qB5ko9dq0Hd8lAcvIHwULUIsFmdYhn2PjZ0y6UQ89NxmdYcPPvwEy/WH1zaaLax+D2/k5V2h
      kE2bKCMtSrXWYCKXCd1PMzNMZ4I/qhCCeDxGLBY8t99tUS5XsB8qxDFNo7C4GLIlMxPk04ng
      fp5DLJ7AfahFEU6XldXNkK2yfZ/b68Xhb991iETDBVMIQS4/RT4bbinSiTi1SpVuf/CcZDrL
      6sqnXL91d5im1ajho2JEjNC17V7/kRZU13Ti8fCzi8Ud4nEzZJsvzDH/UGhIpV6lUQ/G713X
      od5soT3Uye27MJ0PBNBq1tCjJoo/cm6popLO5lBHN/FXVGIR7ZFKpby1RrUZzBFEzTSZRHT/
      BSCEj6oZTE9PoanKMFPZTJJ2uxtSa6lYRI+OFGwgNzXHX3vrLTKxoElcXVvDsS28BxerGoVC
      AVVRgmcA0yeWOXPyBMYD8agaybiB64M64noonsPq2jr1VjAuPTs1QbFcC2p73+Hu/Q2i0aBA
      OFaPu/fXKZfLQ1vMTJGbPsFPfS28nXy1uMEnt+6HbJVaG3x7pOYV3F9fpz9Ss/ueh5meYCKd
      DF07e2KZpbmp4W8tYrB6+xpXP709tPXaTarVGs2R9wJotntomkJED77p4vJZLp8fGXLN5PBd
      m7gZiNu2LU6cmA9VFDA4LKX5UEsRNzTWNndCtma7S7NRG/5uN+u8dvE1ZmYDt00I8D33kQIb
      0bVQ65bK5JnMpkgkggoEISgVt6mMCArf4/qNm6ytBy2t6/lMTE4RMyJDm2P32draPAABeC7t
      Tou+44cKdr1SYnPjPo2+t5tPFzOZotWo86ByFr5LpbTFO++8j+PtKl3VWJzNs7ZVDLlUEcVH
      GZnRA9je2iQ7kWfUze40q7R6Fs5IC2BbXYQWJZ0Kaqxuv4dlWcO82JbNycVFMpnM8M9vxEwW
      5/II36fTC5riRDzKxlb4j5+ZOclXLy4Pf1vdNum0Sd9yaPcGBV7Vo8zkc6EwEtvu0+31UdRw
      oavUauQeaqFmF87w1dfOBe/abqDGkpycnxvahBComk5Eg25/xJcXA7dgFNf10LRAJIYRxbIs
      LDvsepmmGRIKwNZ2Cd8PCrHv+yRiBmYyaI2S6SytdotyKWjJquUdGp3eI8OciqoNBxt2nwzC
      Z2t7J2RLJVMU1+/S6O0+W9U4vXiCdCbw9zvtNrqRxIwH5cVzHTKZ7P4LQNUNfMchk8uFaudk
      OoMeiZMaqdkT6SwL8yfQd9PVS5v0HIVsNkGzF3xMoUWZn5sJ7id8VCNOPB4N1U2u64X8WiEE
      MTOFrjJ8ht3vEk1Pc/HcKSIj+et0+hTmZoaiNeIJCoUChdnpUMe11bWJxWNsbqwObb7wuXcv
      XNtb/f7uNjEDijvbbJaaZDNJUmbgPsRj0VCnOhZP4Lgerv1QRzGXoVIL9z1cx6LZDmr7qblF
      Tp1cIJ0MhH1vdRWh6USTWQqTAwE5Vo+NnRK1WjV0PzOqUyqHbd1Oh2pph541+Hs0a2Xa3d4g
      xunBN6lXOXXuAoXZYDKtVimytbNDrR7Oc7NexR8pdvG4yWzWpNwYfV+FmKGHvku706HdqpPN
      BZ101/dJp5LMzM4O/74IH8tTmcwFwoubSSqlHTq9QMhGzCQeix5ANKjwmZiaod3rhwpns9lh
      cfnksICpmj4YnhohPTHDjBIDRSFrBs2V4ruokdjwWsexqWxvsF7rM1c4MUyXzU2QnZ7mwbfo
      NircurdBLBGuxefnTUrFbVxfENEUarUqEzMFcrmJp55WmUolSWpR5mYG7sjm1iZRTWXp5MlQ
      OkXVaDabUBg09wtLp5kHHp53LG/dp+RnWdhN123W0I0YyyeXgk8qBL1+j74VFJxOq0G1XMKN
      jxQIu8+VDz5gcmqW82dOAZBJxGm0OmgjHdlINM5sPkOP4BsD9F2Br/RDNlSVeDJNPDooKnrE
      IBKJEI8FtWkqO8HtlRUKi6eHtvzULJ1OF8UIXEghBPOFAn40OXJ7dY8JLJ9Pb9xk+oTFzORg
      NGdjbRVXjaO6wShQr9NB01RcNUkiGggyoqu4I62boYPwmrQ7PWYm0iB8dnaKdHu9AxCAoqIp
      guJOkYnp2eEnNqIGtuM8cmbwKFokyvT0HjFFvkuj0caaK6Brgz/gzMwMLbe8O5Iz+Hhev8kP
      39vizR/7ClFdQTeizMzM4ImHTy+GqZFhRtfuU6zUsRyfwszkE0Vg9ftoseCz9TttnEgURRv9
      Q/vEYjE8dbRzNvCkH753Nj9NY6dJt+9gxiJs7hTRfZu7GyVeWRrkce3+PRbPvop6/97o7Zg+
      cRIjNhLqYMTQvB6VZlBIJianmdhr0z5FIxEP3Jh2s0YqlUaPjXTSd0eaun2HnuUSj+rUG00c
      zyNqhMWTSmdRlaDFa9YqVBstRrJHq1FFqBGiemR3vgXSmRyWZZGKjrpUKpcvvUY8HYj73IWL
      u3kKUlVKO2xtbnDi4mgwpoKm69TrDSYfuIyKxuyJs6SGw6UKpmnSd8TBjAJ1Ol0UYWM5g9x6
      Th8XjWql8siRqU9DCDEYkkTB2B0tEkLQ7nQQrsOoG6s9tJGWpkcwTZNUKsWTKvapmQKvXrzI
      idmpJxZ+4dkk0uGw71NnznHy5EkWR/xux+qzur5BpVJ56vv1HEHK1NncHgxdnjl7nuXzl4aF
      H2B2ZpL1+6tE40HNGTNTzM7OUioGQ57C9zl7/lUWZp8emBg342yMdBST6Ry23afZDDq3Vr+L
      omok0rlhCzA3N4dv94ezuQ+o1cqUqsG16VyemXwO2w76SulsnuL2Jp9+8Jes1wfuSKNW5vad
      +6EaGwDfYeP+naFv/2BSSx1xW5fOXOCrX3+ThBa4SgIFMxYlNtJCbW2u07VsxLCz6dHs9Eml
      kgezIMZxHCZm5kkaD/Q1yPiLHIbtuzYr9zeIGho92yMS12mUt2h1+swsniK++4xOs4aIJpnN
      B8/RjRjT07En3f65sCyLeq2GYsSfmM6ImSzMTVHr+U9MB2CaCZZOn9sdW3/M/eIplpfC7mKv
      06RSazK/sDS0tRoVOpZHIvHkdxZCIDyXRDK4p+M4JMwE/ZF5Fc91dzujQd5UTcfzBfV6lYVC
      4POnUmmmph5uagSZTLjjns1myE3NMJMetJipTI65EwX63Q7kBzX0+updbKFTWDhJJv7kIhqJ
      muRHxkJu3fyMdrfPwlIwEba1UySbmwzmfVSd5eXBAMWBtACe66Co2rC291wbX4vy+qXXgs7K
      M6JFolw4cxI1msLc9fOi8QSpTBbP6g7H933XoVpvY9v9R/zs/UJVNSKGQdJ8sgAAqvUmqWTi
      iWmEECRiBteu33hiur1IpLIsLi6SGRnJSmYm8HpN7q9tPeFK2Nm4z/raGlo86Ciu3r1Ddmpm
      UBB3icZM+p0mrXZ4WPXc+fNcOBdEAzfrFRzXp9PthtI1Wx0sK9yZb7U7pNK54cSk69i4tk1m
      ZOZ2dnYOt9+h3grf71nIZnPkJvKhId/TZy9w6tQp0ntUDAfSAswUCtRG/FA9EqVZvseq3efE
      /DwR7flEUClucX+9yuLSKVIxjXgyw3wyXLOkJqa5mBt0TF+kpXlWNE17ZHPfh+l32+TyU6Bq
      T0xXLW6wcm+DWHbqiemelX6nzWRhieXEkwU6O7/E1OwJqiPj58unT7GzU2TxZDB02+u2KFYa
      LJ8Jb4Z56+ZNfFXntVcGYcaxaIx2p4OZCv9NOp0WqmXTtz1iu6EOphmn1W4zvRuWYETjmFGd
      mzdv8bU3XgcGLounRpl6aALuWZieLTxiy6TTe6QccCACiCfSGJEItUaLyYkMqm6QjBv0OnVa
      VoEJ89kbnnp5C8Wc4M0fPx8aQt2Lgyz4MHBt+t1Vuo7HibnH75AaM5MUzORj//8D8jPzTEzN
      UarUnpr2WXi4AD4JTY8wNRnUuqoWCY2owSDoLZObYHIiSGfbFvmJHEIPalMjnkBV4OHGvVyt
      MVNYHBZ+gH6vTywa/jZbmxtE00G/ZeGhtSYHyYG4QDvr9/jLH/wQPR64APMLi2Tzc+Se4tM9
      TCyewPc8Oq1GKJzhqJhIRYmY+7f+WVE1ph/xnY8HnoCIKijX6kOb1esOo3cf4HseuUwKRuYG
      auUdTp99hbmRwMT7d1dQIzHww32jzMQkiXh4UvOwOBABxOJJCnOzoYmmerNNu1akY3tPuHKP
      eyXS5HMZtAOu3Z+VwfqC0tMTvgTML5zk7LkLzI5EUaYyOXqd1nC/VoBup4llWaGJpmK5QqOy
      je0HRUxRVTRdC802F0slEqaJYYRjkA6LA3GBqpUSsVQOQw8Kra546FEzFJPzrOxsbaEnMrud
      2yMUguewVukymXp+3/RloVWv4noCIxrMAzTrNeKpPLlc0DKev3BxN+4/uHa0f/EAu9/FFhqG
      djSHoRzATLBgcnqacr0dmrRo1irc3yyRmprHNJ6v4ZnM57i1tsPc3NyRb2Q0P38ClMjTE76k
      pLITTHTa3N+qcGZ5EO1aWDy1Z9qbN66DZnDxwvnH3m9+cekgsvnMHEh56vd6tDvdYNxVCGKp
      HAsFnVjkOb0uIehbNir+0fcBtAiq8FEjT+6Mv+w06lWyI8OWe2FZ1mChivHkoeCjZt/7AL5r
      c291nWQ6NeLuCMqVMj7acw+BInyiZpKZmdnhTPBRIYTAtqxHVoSNG33bo1baomc/3m2JRqOD
      3TWOR9ftsex7iXKdHssXXmc6ZQQLYhQV09C5ffsGbev5OsGoGq1Wg4379+jbT59ZPUjsfpdI
      zKRerz898UtMPJFk6dRp4saTHYhytfrQyqzjx77nTovEqBU32Co1iT1wFXZdoNdffeX5WwAg
      aZqkJ3JEjrgF8H0Py7KObMTiuNBpNR4Jzd4LTYFut//UdEfJvvcBtEiMs2fD24YL4VMuldAj
      USZfwH/u97t4jo/r+UT1o/O/44k0p049flZxHNhYuzcIRUk9faJvY3OTjqeFYoaOG4cyqNJr
      lnA9EMKi1XfJJ55vFCWVylAs1R4JaZYcPgIFXdMwok+euLJtizfe+Aqucrxby0MRQDw9zeJi
      lKQZQzOer/ALIbAsi1giyRF7QBIGk2PPguc6tJp1LMVkdurJI0ZHyaEUKeG7lEpFNjc36LvP
      1wluVrao1lt0bHHko0CSZyduJmk1OxjR4z1kfCgtgKob5NMJSvUmzzuUHzNTJCxBVCgc9USw
      5NlpVMtMzs5hxEw8L7zY/jhxaBOr3XaD7Z0iUwtnST1HrRA1U5wwxzf04IuK68Cr9XoAAAZk
      SURBVHk4toXrusRicZLm8RTAvu0O/TRazTqNZoup2ROhjbAkLy9Wvw+q9sj64ePE4ZRE4XPz
      5i2sfi/Y8lDy0nP9+iePrCY7bhxaVbx0cgGhRl5oIkzyxSQRM9gpVZ+e8Ag5HAEoKo1qlUg0
      duxjQyT7R7FUwfOPd9zUoQjA91zSuTz43oEvW5QcH2YLJziz9GzzBkfFoblAkWgM0asHezhK
      Xmp6nTa6pg1O7DnGHMowqPAcKpUKaixLzjzqJS2SwyBiGMwWTqA+ZWeMo+bQhkElkuOIHJCX
      jDVSAJKxRgpAMtZIAUjGGikAyVgjBSAZa6QAJGONFIBkrJECkIw1UgCSseaFA3OE8PHF4Byp
      iGGgMFgB5Pk+CIEWMY71SiCJBB5qAXZWPuV773/yxAtuXPmANmD3e7z//vt89NGHdLqDc6A+
      /ugDtra2WL37GZ/dXj+wTEsk+0UgACF45+33IKJy99Z13vnhDyjVu3xy9Qo/ePsd+rbFu2//
      gOufrSCAjz/8mAuXLnH+zDK379zFsft4nk+306LnQLO6Q7svQ58lx5uR4zsUCnOLvH75FT76
      8GM0TeX6tat8cu0GolPinbf/iuTiJc4uLwCCbNpk5fp1dqodTNMkYsTQNFCsGrYSx8zmSMZk
      6LPkeBMqoTEzjgqcOrWEJXTOnVvGEDZGPM3S4hzvX72C1+5xol2lYfWolx38fouaE2dxcZ5U
      KkunsoGjguJ2cDwh1wBLjjUvvB5ACJ9qpYIvFHITE6gIbMdFCA9Q8TyHuJlEe85zgSWSw0Qu
      iJGMNXIeQDLWSAFIxhopAMlYI8cpJS8Rgj/5/d/h3Js/R0pzUVUPRY3Qs10KM1N7XiEFIHlp
      cPstSo0+9pXvEU9MUF6/RS4R5V7d51d+5e+zV2COHAWSvDQ4/TZdV6ffKhE1czTKG7ieT9fV
      efXi2T39/X0RgO/7qKrsTki+eOxLqZWNiOSLiqy2JWPNvnWCd1o2lW4Q/XlqIkYsIvUlOd7s
      mwDu1yw+LXaHv2dTESkAybFHllDJWCMFIBlrpAAkY40UgGSskQKQjDXPJYB2q4XrWJQqdRzH
      wbL6B5UvieRQeOZhUN+1+OTDa0wvzoLtUa1sYcQynJyfxfd9hPDD6X0fz/P2PcMSyX7yzAJo
      Vqs4nkO/Z+FYHrlcEsexURQFVVUfOf5UVVUZHyQ59jyzALLTc/zk5AyKAp7no2naIAZoWPAf
      XfwuzwSWHHeeayb4QY2u64N/ywIu+aIjfRTJWCMFIBlrpAAkY40UgGSskQKQjDVSAJKxZk8B
      fPvb38Z1Xb7zne8cdn4kkkNlTwH4wufWrVsUS0Vqtdph50kiOTT2nAh788ffRAjBN976BrFY
      7LDzJJEcGnsKYHJyEuH7uJ6HHhnsp+X02ly79gmR1CRWr8/MdA7bclheXjq83Eok+8xjQyGu
      vP2X+HqKr3z9jUEiLUIyZdK2PSbTCZrNGtF4Dt/3HxsN6rryjDDJ8eaxApjImPz5Byt85etv
      AKDgo0YyvLo8Tbne4VSmgOd5KKqKKgSKEu5OqKqKrsutRyXHm8eW0GqjRyGXwt1NpBtxTp06
      CcDcdPyQsieRHCx7CkD4FvFYAi0G2mHnSCI5RPaeCFM0upZNPmXi75lAInk5eMxMsEKj0SRi
      GHssc5FIXh72FICiaLxyYZlaty9P0JC81Dw2FqhRKXHlvQ+QA5mSl5k9BdBtlGk6Kj/55tdk
      tJzkpWbP8m1mJolrUC2VkBubSF5mHuvi5ycn2Gk6n6sP8P0//zM++fDq8Pcv/oN/SC6f/xx3
      lEj2l8eW706ng+b7eAzmAoQQeJ6HpmnDM8GEEE/c+6daqbB6797wt+M4+5h1ieTz83gBNOpE
      U9mhj+RaXW7fvomrJvBch/xEGsfxWV5a3E3x9HPCBIIfXlvnxlplaPv5nz5P2ox+nneQSF6Y
      PQXQ3Fml1HW4/Mb5IIHvEU3PkBA2nqPT7bSIxNIIIXaD4cICeJztg5ub/Ml7d4a2b335JMnY
      Xie4SiQHz54C6La66IbKlR+8w8/+rW8NDhhWNRTPJj8zRbdnk0kl8H3/icFwD2+cpanao+k0
      DU2TAReSo2FPAcyeucDsmQshWySWYHk5AUDCTBx8ziSSQ0AO80vGGikAyVgjBSAZa6QAJGON
      FIBkrJECkIw1UgCSseb/A61k+QoxpIISAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='工作表 27' width='192'>
      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
      hgEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='工作表 35' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='工作表 38' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='工作表 40' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='工作表 40 (2)' width='192'>
      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
      Xvs7HbHbzimi7q8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='德国' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5 (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
