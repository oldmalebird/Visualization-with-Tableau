<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='FAO' inline='true' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FAO' name='textscan.0cbagav12h7cdy1d4j6ey1bx4577'>
            <connection class='textscan' directory='D:/Github/Visualization_with_Tableau/VizChallenge5' filename='FAO.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Area&amp;Continent' name='excel-direct.17ypuc609xqdst1amx3001vp16xe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Github/Visualization_with_Tableau/VizChallenge5/Area&amp;Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='FAO Group' name='excel-direct.0hewu6f0g56w5p1d6st3h02wripw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Github/Visualization_with_Tableau/VizChallenge5/FAO Group.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FAO.csv].[Item]' />
              <expression op='[FAO Group].[Item]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FAO.csv].[Area]' />
                <expression op='[FAO Area].[Area]' />
              </expression>
            </clause>
            <relation name='数据透视表' type='pivot'>
              <columns>
                <column datatype='string' name='数据透视表字段名称' />
                <column datatype='integer' name='数据透视表字段值' />
              </columns>
              <tag name='数据透视表字段名称'>
                <value name='[Y1961]' />
                <value name='[Y1962]' />
                <value name='[Y1963]' />
                <value name='[Y1964]' />
                <value name='[Y1965]' />
                <value name='[Y1966]' />
                <value name='[Y1967]' />
                <value name='[Y1968]' />
                <value name='[Y1969]' />
                <value name='[Y1970]' />
                <value name='[Y1971]' />
                <value name='[Y1972]' />
                <value name='[Y1973]' />
                <value name='[Y1974]' />
                <value name='[Y1975]' />
                <value name='[Y1976]' />
                <value name='[Y1977]' />
                <value name='[Y1978]' />
                <value name='[Y1979]' />
                <value name='[Y1980]' />
                <value name='[Y1981]' />
                <value name='[Y1982]' />
                <value name='[Y1983]' />
                <value name='[Y1984]' />
                <value name='[Y1985]' />
                <value name='[Y1986]' />
                <value name='[Y1987]' />
                <value name='[Y1988]' />
                <value name='[Y1989]' />
                <value name='[Y1990]' />
                <value name='[Y1991]' />
                <value name='[Y1992]' />
                <value name='[Y1993]' />
                <value name='[Y1994]' />
                <value name='[Y1995]' />
                <value name='[Y1996]' />
                <value name='[Y1997]' />
                <value name='[Y1998]' />
                <value name='[Y1999]' />
                <value name='[Y2000]' />
                <value name='[Y2001]' />
                <value name='[Y2002]' />
                <value name='[Y2003]' />
                <value name='[Y2004]' />
                <value name='[Y2005]' />
                <value name='[Y2006]' />
                <value name='[Y2007]' />
                <value name='[Y2008]' />
                <value name='[Y2009]' />
                <value name='[Y2010]' />
                <value name='[Y2011]' />
                <value name='[Y2012]' />
                <value name='[Y2013]' />
              </tag>
              <groups>
                <group name='数据透视表字段值'>
                  <field name='[FAO.csv].[Y1961]' />
                  <field name='[FAO.csv].[Y1962]' />
                  <field name='[FAO.csv].[Y1963]' />
                  <field name='[FAO.csv].[Y1964]' />
                  <field name='[FAO.csv].[Y1965]' />
                  <field name='[FAO.csv].[Y1966]' />
                  <field name='[FAO.csv].[Y1967]' />
                  <field name='[FAO.csv].[Y1968]' />
                  <field name='[FAO.csv].[Y1969]' />
                  <field name='[FAO.csv].[Y1970]' />
                  <field name='[FAO.csv].[Y1971]' />
                  <field name='[FAO.csv].[Y1972]' />
                  <field name='[FAO.csv].[Y1973]' />
                  <field name='[FAO.csv].[Y1974]' />
                  <field name='[FAO.csv].[Y1975]' />
                  <field name='[FAO.csv].[Y1976]' />
                  <field name='[FAO.csv].[Y1977]' />
                  <field name='[FAO.csv].[Y1978]' />
                  <field name='[FAO.csv].[Y1979]' />
                  <field name='[FAO.csv].[Y1980]' />
                  <field name='[FAO.csv].[Y1981]' />
                  <field name='[FAO.csv].[Y1982]' />
                  <field name='[FAO.csv].[Y1983]' />
                  <field name='[FAO.csv].[Y1984]' />
                  <field name='[FAO.csv].[Y1985]' />
                  <field name='[FAO.csv].[Y1986]' />
                  <field name='[FAO.csv].[Y1987]' />
                  <field name='[FAO.csv].[Y1988]' />
                  <field name='[FAO.csv].[Y1989]' />
                  <field name='[FAO.csv].[Y1990]' />
                  <field name='[FAO.csv].[Y1991]' />
                  <field name='[FAO.csv].[Y1992]' />
                  <field name='[FAO.csv].[Y1993]' />
                  <field name='[FAO.csv].[Y1994]' />
                  <field name='[FAO.csv].[Y1995]' />
                  <field name='[FAO.csv].[Y1996]' />
                  <field name='[FAO.csv].[Y1997]' />
                  <field name='[FAO.csv].[Y1998]' />
                  <field name='[FAO.csv].[Y1999]' />
                  <field name='[FAO.csv].[Y2000]' />
                  <field name='[FAO.csv].[Y2001]' />
                  <field name='[FAO.csv].[Y2002]' />
                  <field name='[FAO.csv].[Y2003]' />
                  <field name='[FAO.csv].[Y2004]' />
                  <field name='[FAO.csv].[Y2005]' />
                  <field name='[FAO.csv].[Y2006]' />
                  <field name='[FAO.csv].[Y2007]' />
                  <field name='[FAO.csv].[Y2008]' />
                  <field name='[FAO.csv].[Y2009]' />
                  <field name='[FAO.csv].[Y2010]' />
                  <field name='[FAO.csv].[Y2011]' />
                  <field name='[FAO.csv].[Y2012]' />
                  <field name='[FAO.csv].[Y2013]' />
                </group>
              </groups>
              <relation connection='textscan.0cbagav12h7cdy1d4j6ey1bx4577' name='FAO.csv' table='[FAO#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='Area Abbreviation' ordinal='0' />
                  <column datatype='integer' name='Area Code' ordinal='1' />
                  <column datatype='string' name='Area' ordinal='2' />
                  <column datatype='integer' name='Item Code' ordinal='3' />
                  <column datatype='string' name='Item' ordinal='4' />
                  <column datatype='integer' name='Element Code' ordinal='5' />
                  <column datatype='string' name='Element' ordinal='6' />
                  <column datatype='string' name='Unit' ordinal='7' />
                  <column datatype='real' name='latitude' ordinal='8' />
                  <column datatype='real' name='longitude' ordinal='9' />
                  <column datatype='integer' name='Y1961' ordinal='10' />
                  <column datatype='integer' name='Y1962' ordinal='11' />
                  <column datatype='integer' name='Y1963' ordinal='12' />
                  <column datatype='integer' name='Y1964' ordinal='13' />
                  <column datatype='integer' name='Y1965' ordinal='14' />
                  <column datatype='integer' name='Y1966' ordinal='15' />
                  <column datatype='integer' name='Y1967' ordinal='16' />
                  <column datatype='integer' name='Y1968' ordinal='17' />
                  <column datatype='integer' name='Y1969' ordinal='18' />
                  <column datatype='integer' name='Y1970' ordinal='19' />
                  <column datatype='integer' name='Y1971' ordinal='20' />
                  <column datatype='integer' name='Y1972' ordinal='21' />
                  <column datatype='integer' name='Y1973' ordinal='22' />
                  <column datatype='integer' name='Y1974' ordinal='23' />
                  <column datatype='integer' name='Y1975' ordinal='24' />
                  <column datatype='integer' name='Y1976' ordinal='25' />
                  <column datatype='integer' name='Y1977' ordinal='26' />
                  <column datatype='integer' name='Y1978' ordinal='27' />
                  <column datatype='integer' name='Y1979' ordinal='28' />
                  <column datatype='integer' name='Y1980' ordinal='29' />
                  <column datatype='integer' name='Y1981' ordinal='30' />
                  <column datatype='integer' name='Y1982' ordinal='31' />
                  <column datatype='integer' name='Y1983' ordinal='32' />
                  <column datatype='integer' name='Y1984' ordinal='33' />
                  <column datatype='integer' name='Y1985' ordinal='34' />
                  <column datatype='integer' name='Y1986' ordinal='35' />
                  <column datatype='integer' name='Y1987' ordinal='36' />
                  <column datatype='integer' name='Y1988' ordinal='37' />
                  <column datatype='integer' name='Y1989' ordinal='38' />
                  <column datatype='integer' name='Y1990' ordinal='39' />
                  <column datatype='integer' name='Y1991' ordinal='40' />
                  <column datatype='integer' name='Y1992' ordinal='41' />
                  <column datatype='integer' name='Y1993' ordinal='42' />
                  <column datatype='integer' name='Y1994' ordinal='43' />
                  <column datatype='integer' name='Y1995' ordinal='44' />
                  <column datatype='integer' name='Y1996' ordinal='45' />
                  <column datatype='integer' name='Y1997' ordinal='46' />
                  <column datatype='integer' name='Y1998' ordinal='47' />
                  <column datatype='integer' name='Y1999' ordinal='48' />
                  <column datatype='integer' name='Y2000' ordinal='49' />
                  <column datatype='integer' name='Y2001' ordinal='50' />
                  <column datatype='integer' name='Y2002' ordinal='51' />
                  <column datatype='integer' name='Y2003' ordinal='52' />
                  <column datatype='integer' name='Y2004' ordinal='53' />
                  <column datatype='integer' name='Y2005' ordinal='54' />
                  <column datatype='integer' name='Y2006' ordinal='55' />
                  <column datatype='integer' name='Y2007' ordinal='56' />
                  <column datatype='integer' name='Y2008' ordinal='57' />
                  <column datatype='integer' name='Y2009' ordinal='58' />
                  <column datatype='integer' name='Y2010' ordinal='59' />
                  <column datatype='integer' name='Y2011' ordinal='60' />
                  <column datatype='integer' name='Y2012' ordinal='61' />
                  <column datatype='integer' name='Y2013' ordinal='62' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.17ypuc609xqdst1amx3001vp16xe' name='FAO Area' table='[&apos;FAO Area$&apos;]' type='table'>
              <columns gridOrigin='A1:B175:no:A1:B175:0' header='yes' outcome='6'>
                <column datatype='string' name='Area' ordinal='0' />
                <column datatype='string' name='Continent' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0hewu6f0g56w5p1d6st3h02wripw' name='FAO Group' table='[&apos;FAO Group$&apos;]' type='table'>
            <columns gridOrigin='A1:D115:no:A1:D115:0' header='yes' outcome='2'>
              <column datatype='string' name='Category' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
              <column datatype='string' name='Item' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Area (FAO Area)]' value='[FAO Area].[Area]' />
          <map key='[Area Abbreviation]' value='[FAO.csv].[Area Abbreviation]' />
          <map key='[Area Code]' value='[FAO.csv].[Area Code]' />
          <map key='[Area]' value='[FAO.csv].[Area]' />
          <map key='[Category]' value='[FAO Group].[Category]' />
          <map key='[Continent]' value='[FAO Area].[Continent]' />
          <map key='[Element Code]' value='[FAO.csv].[Element Code]' />
          <map key='[Element]' value='[FAO.csv].[Element]' />
          <map key='[Group]' value='[FAO Group].[Group]' />
          <map key='[Item (FAO Group)]' value='[FAO Group].[Item]' />
          <map key='[Item Code]' value='[FAO.csv].[Item Code]' />
          <map key='[Item]' value='[FAO.csv].[Item]' />
          <map key='[Type]' value='[FAO Group].[Type]' />
          <map key='[Unit]' value='[FAO.csv].[Unit]' />
          <map key='[latitude]' value='[FAO.csv].[latitude]' />
          <map key='[longitude]' value='[FAO.csv].[longitude]' />
          <map key='[数据透视表字段值]' value='[数据透视表].[数据透视表字段值]' />
          <map key='[数据透视表字段名称]' value='[数据透视表].[数据透视表字段名称]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Abbreviation]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Abbreviation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Element Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Element]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段名称</remote-name>
            <remote-type>129</remote-type>
            <local-name>[数据透视表字段名称]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段名称</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段值</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数据透视表字段值]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段值</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (FAO Area)]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B175:no:A1:B175:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item (FAO Group)]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D115:no:A1:D115:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' value='Rank' />
        </aliases>
      </column>
      <column datatype='string' hidden='true' name='[Area (FAO Area)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
        </semantic-values>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Element Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Element]' role='dimension' type='nominal' />
      <column datatype='string' name='[Group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Item]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Alcoholic Beverages&quot;</value>
            <value>&quot;Beer&quot;</value>
            <value>&quot;Beverages, Alcoholic&quot;</value>
            <value>&quot;Beverages, Fermented&quot;</value>
            <value>&quot;Coffee and products&quot;</value>
            <value>&quot;Stimulants&quot;</value>
            <value>&quot;Tea (including mate)&quot;</value>
            <value>&quot;Wine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats and oil&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Butter, Ghee&quot;</value>
            <value>&quot;Coconut Oil&quot;</value>
            <value>&quot;Cottonseed Oil&quot;</value>
            <value>&quot;Cream&quot;</value>
            <value>&quot;Fats, Animals, Raw&quot;</value>
            <value>&quot;Fish, Body Oil&quot;</value>
            <value>&quot;Fish, Liver Oil&quot;</value>
            <value>&quot;Groundnut Oil&quot;</value>
            <value>&quot;Maize Germ Oil&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Oilcrops Oil, Other&quot;</value>
            <value>&quot;Oilcrops, Other&quot;</value>
            <value>&quot;Olive Oil&quot;</value>
            <value>&quot;Palm Oil&quot;</value>
            <value>&quot;Palmkernel Oil&quot;</value>
            <value>&quot;Rape and Mustard Oil&quot;</value>
            <value>&quot;Ricebran Oil&quot;</value>
            <value>&quot;Sesameseed Oil&quot;</value>
            <value>&quot;Soyabean Oil&quot;</value>
            <value>&quot;Sunflowerseed Oil&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
            <value>&quot;Aquatic Animals, Others&quot;</value>
            <value>&quot;Aquatic Products, Other&quot;</value>
            <value>&quot;Cephalopods&quot;</value>
            <value>&quot;Crustaceans&quot;</value>
            <value>&quot;Demersal Fish&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Freshwater Fish&quot;</value>
            <value>&quot;Marine Fish, Other&quot;</value>
            <value>&quot;Molluscs, Other&quot;</value>
            <value>&quot;Pelagic Fish&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruits&quot;'>
            <value>&quot;Apples and products&quot;</value>
            <value>&quot;Bananas&quot;</value>
            <value>&quot;Citrus, Other&quot;</value>
            <value>&quot;Coconuts - Incl Copra&quot;</value>
            <value>&quot;Dates&quot;</value>
            <value>&quot;Fruits - Excluding Wine&quot;</value>
            <value>&quot;Fruits, Other&quot;</value>
            <value>&quot;Grapefruit and products&quot;</value>
            <value>&quot;Grapes and products (excl wine)&quot;</value>
            <value>&quot;Lemons, Limes and products&quot;</value>
            <value>&quot;Olives (including preserved)&quot;</value>
            <value>&quot;Oranges, Mandarines&quot;</value>
            <value>&quot;Pineapples and products&quot;</value>
            <value>&quot;Plantains&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains, Roots&quot;'>
            <value>&quot;Barley and products&quot;</value>
            <value>&quot;Cassava and products&quot;</value>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Cereals, Other&quot;</value>
            <value>&quot;Maize and products&quot;</value>
            <value>&quot;Millet and products&quot;</value>
            <value>&quot;Oats&quot;</value>
            <value>&quot;Potatoes and products&quot;</value>
            <value>&quot;Rice (Milled Equivalent)&quot;</value>
            <value>&quot;Roots, Other&quot;</value>
            <value>&quot;Rye and products&quot;</value>
            <value>&quot;Sorghum and products&quot;</value>
            <value>&quot;Soyabeans&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sweet potatoes&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
            <value>&quot;Yams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bovine Meat&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Meat, Aquatic Mammals&quot;</value>
            <value>&quot;Meat, Other&quot;</value>
            <value>&quot;Mutton &amp; Goat Meat&quot;</value>
            <value>&quot;Pigmeat&quot;</value>
            <value>&quot;Poultry Meat&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Infant food&quot;</value>
            <value>&quot;Miscellaneous&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Offals, Edible&quot;</value>
            <value>&quot;Pulses&quot;</value>
            <value>&quot;Pulses, Other and products&quot;</value>
            <value>&quot;Spices&quot;</value>
            <value>&quot;Spices, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seed, nuts&quot;'>
            <value>&quot;Cloves&quot;</value>
            <value>&quot;Cocoa Beans and products&quot;</value>
            <value>&quot;Cottonseed&quot;</value>
            <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Palm kernels&quot;</value>
            <value>&quot;Rape and Mustardseed&quot;</value>
            <value>&quot;Sesame seed&quot;</value>
            <value>&quot;Sunflower seed&quot;</value>
            <value>&quot;Treenuts&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Suger&quot;'>
            <value>&quot;Sugar (Raw Equivalent)&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar beet&quot;</value>
            <value>&quot;Sugar cane&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
            <value>&quot;Sugar non-centrifugal&quot;</value>
            <value>&quot;Sweeteners, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vegetables&quot;'>
            <value>&quot;Aquatic Plants&quot;</value>
            <value>&quot;Beans&quot;</value>
            <value>&quot;Honey&quot;</value>
            <value>&quot;Onions&quot;</value>
            <value>&quot;Peas&quot;</value>
            <value>&quot;Pepper&quot;</value>
            <value>&quot;Pimento&quot;</value>
            <value>&quot;Tomatoes and products&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Vegetables, Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Nutrition]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Group]' default='&quot;Others&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Carbohydrates&quot;'>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Proteins&quot;'>
            <value>&quot;Eggs&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Milk - Excluding Butter&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Pulses&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' hidden='true' name='[Unit]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
        <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
      </column>
      <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
      <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <group caption='工具提示(Area)' hidden='true' name='[Tooltip (Area)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
        </groupfilter>
      </group>
      <group caption='工具提示(Area,Category)' hidden='true' name='[Tooltip (Area,Category)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='工具提示(Area,Item (组))' hidden='true' name='[Tooltip (Area,Item (组))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
          <groupfilter function='level-members' level='[Item (组)]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area, Area Code'>
          <field>[Area]</field>
          <field>[Area Code]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.598693' measure-ordering='alphabetic' measure-percentage='0.295425' parameter-percentage='0.105882' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Item (组)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fats and oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains, Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fish, Aquatic Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seed, nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bovine Meat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spices, Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vegetables, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groundnut Oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Offals, Edible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops Oil, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages, Alcoholic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poultry Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rape and Mustard Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rye and products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweeteners, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treenuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aquatic Plants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocoa Beans and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pimento&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter, Ghee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Potatoes and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apples and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barley and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottonseed Oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Infant food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mutton &amp; Goat Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pulses, Other and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sesameseed Oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demersal Fish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapes and products (excl wine)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelagic Fish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquatic Animals, Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts - Incl Copra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemons, Limes and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maize and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olives (including preserved)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pigmeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Fermented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fats, Animals, Raw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassava and products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges, Mandarines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rape and Mustardseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aquatic Products, Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rice (Milled Equivalent)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflowerseed Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Groundnuts (Shelled Eq)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize Germ Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat, Aquatic Mammals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tomatoes and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cereals, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapefruit and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Fish, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmkernel Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sugar (Raw Equivalent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fruits, Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soyabeans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coffee and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fish, Liver Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar non-centrifugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshwater Fish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soyabean Oil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tea (including mate)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cephalopods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ricebran Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roots, Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Citrus, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crustaceans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oilcrops, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sorghum and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coconut Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fish, Body Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pineapples and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molluscs, Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Oil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Nutrition]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Carbohydrates&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Proteins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fats&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Group:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C�te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Element:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Feed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals &amp; Starchy Roots&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains &amp; Starchy Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fat, oil, nuts &amp; oilcrops&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fish &amp; Aquatic Animals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Milk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar &amp; Sugar Crops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='20%80%'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='11'>Top 20% countries produced less food than before due to the improvement of productivity of other countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-format' id='refline0' value='p0.0%' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666'>In </run>
              <run fontalignment='0' fontcolor='#f28e2b'>1961</run>
              <run fontalignment='0' fontcolor='#555555'>,</run>
              <run fontalignment='0' fontcolor='#1b1b1b'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>20.2%</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#666666'>countries produced</run>
              <run fontalignment='0' fontcolor='#787878'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>88.7%</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#666666'>food and feed.</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#666666'>In </run>
              <run fontalignment='0' fontcolor='#f28e2b'>2013</run>
              <run fontalignment='0' fontcolor='#555555'>,</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>20.2%</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#666666'>countries produced</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>83.6%</run>
              <run fontalignment='0' fontcolor='#666666'> food and feed.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.22733423545331533'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.73796095444685461'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1.0286874154262518'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.45553145336225587'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='GroupTop5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>In 2013, China produced the most cereal, starchy roots and vegetables. </run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>India produced the most milk.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Group:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Production:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;Sheet name=&quot;bar&quot; maxwidth=&quot;600&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Rank各国各item'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]&gt; - &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]&gt; </run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>Top 10 Countries in &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:7]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;</bucket>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]'>
            <groupfilter function='member' level='[none:Group:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Bovine Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='5' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='6' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='7' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='8' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='9' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' value='168' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='level-members' level='[Item (组)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - bar]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area]' />
              <groupfilter function='level-members' level='[Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - bar]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area]' />
              <groupfilter function='level-members' level='[Item (组)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='foodfeed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Global Food and Feed Production</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#fafafa00' />
            <format attr='fill-color' id='annotation_2' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1992' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</cols>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666' fontname='Tableau Light' fontsize='8'>Data of 19 countries (Russia, Ukraine, Belarus, Uzbekistan, etc) had been collected since 1992 (after the collapse of the Soviet Union).</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1958.3068783068784'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9738561.7894736845'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1991.4497354497355'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6807976.0657894732'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666' fontname='Tableau Light' fontsize='9'>Data of 19 countries (Russia, Ukraine, Belarus, Uzbekistan, etc) had been collected since 1992 (after the collapse of the Soviet Union).</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1958.7532467532467'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5585157.418269231'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1989.1844155844155'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3061913.711538461'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='gif area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</run>
            <run bold='true' fontsize='12'>&gt; Production in  &lt;</run>
            <run bold='true' fontsize='12'>Page Name</run>
            <run bold='true' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='33' lines='true' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='gif pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production in &lt;Page Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='10'>Global </run>
            <run fontcolor='#f28e2b' fontsize='10'>food</run>
            <run fontcolor='#666666' fontsize='10'> production in 2013 is </run>
            <run fontcolor='#f28e2b' fontsize='10'>3.7</run>
            <run fontcolor='#666666' fontsize='10'> times as large as in 1961.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='10'>Global </run>
            <run fontcolor='#4e79a7' fontsize='10'>feed</run>
            <run fontcolor='#666666' fontsize='10'> production in 2013 is </run>
            <run fontcolor='#4e79a7' fontsize='10'>2.7</run>
            <run fontcolor='#666666' fontsize='10'> times as large as in 1961.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontsize='10'>Feed</run>
            <run fontcolor='#666666' fontsize='10'> percentages gradually reduced from 1961 to 2013.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='global feed pie cmpr'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>With the improvement of nutriology, feed conversion ratio had been raised; more cereals and less milk were needed in livestock industry.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>2013</value>
                <value>0.11828289022762527</value>
                <value>0.086712212624908039</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>1961</value>
                <value>0.24743134228094824</value>
                <value>0.066041463147600538</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>2013</value>
                <value>0.7563038851412287</value>
                <value>0.55444014913066175</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>1961</value>
                <value>0.6663826363692209</value>
                <value>0.17786301410436714</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='global food pie cmpr'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>With the development of productivity, more non-staple food (vegetables, fruit, meat) were produced.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
        <mark-labels>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>2013</value>
                <value>0.22584005938619084</value>
                <value>0.17776322790368454</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Vegetables&quot;</value>
                <value>2013</value>
                <value>0.1767802719906193</value>
                <value>0.13914728797075984</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>1961</value>
                <value>0.24939289404193971</value>
                <value>0.053090758886516771</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Vegetables&quot;</value>
                <value>1961</value>
                <value>0.11600531574151809</value>
                <value>0.024695211430328386</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='map点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>In 2013, Asia produced the most food and feed.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Area:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]' field-type='quantitative' max='22632900.47249392' min='-18101244.776992112' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]' field-type='quantitative' max='11333290.785034472' min='-8836043.2705362774' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#ebebeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='rank点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production Top 10 Countries</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#666666' fontsize='11'>Negeria, Mexico and Pakistan became the new Top 10 countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1729663756639514624]' derivation='User' name='[usr:Calculation_1729663756639514624:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' />
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' included-values='non-null' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' value='59' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.62569057941436768' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3] + [federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='13' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Group]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
        <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
        <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
        <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
          <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='77' param='horz' type='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='75' param='horz' type='layout-flow' w='99032' x='484' y='684'>
              <zone h='98632' id='68' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                <zone h='98632' id='64' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                  <zone h='98632' id='61' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                    <zone h='98632' id='59' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                      <zone h='98632' id='57' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                        <zone h='98632' id='51' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                          <zone h='98632' id='49' type='layout-basic' w='99032' x='484' y='684'>
                            <zone h='94269' id='17' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                              <zone h='94269' id='11' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                                <zone h='94269' id='5' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                                  <zone h='94269' id='3' type='layout-basic' w='99032' x='484' y='5047'>
                                    <zone h='32423' id='1' name='20%80%' w='27128' x='484' y='33274'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='25404' id='9' name='foodfeed' w='27128' x='484' y='5047'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='25404' id='15' name='gif area' w='46614' x='52902' y='5047'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='32423' id='21' name='map点' w='35952' x='27612' y='33274'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='33619' id='26' name='GroupTop5' w='44256' x='31980' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='33619' id='40' name='rank点' w='17952' x='484' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='26775' id='29' name='GroupTop5' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' show-title='false' type='color' w='13544' x='18436' y='72541'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='29428' id='44' name='Rank各国各item' w='23280' x='76236' y='69888'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='2823' id='22' mode='dropdown' name='map点' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' w='27128' x='484' y='30451'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='2823' id='45' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='71904' x='27612' y='30451'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='4191' id='47' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' w='12558' x='86958' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone forceUpdate='true' h='6844' id='53' type='text' w='13544' x='18436' y='65697'>
                                      <formatted-text>
                                        <run bold='true' fontsize='11'>France, Italy, United Kindom and Poland were no longer the Top 10.</run>
                                      </formatted-text>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='25404' id='55' name='gif pie' w='25290' x='27612' y='5047'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='15056' id='66' name='global feed pie cmpr' w='35952' x='63564' y='50641'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='17367' id='73' name='global food pie cmpr' w='35952' x='63564' y='33274'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='4191' id='78' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' type='filter' values='database' w='10722' x='76236' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                            <zone forceUpdate='true' h='4363' id='43' type='text' w='99032' x='484' y='684'>
                              <formatted-text>
                                <run bold='true' fontalignment='1' fontsize='18'>                                               Global Changes of </run>
                                <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='18'>Food</run>
                                <run bold='true' fontalignment='1' fontsize='18'> and </run>
                                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='18'>Feed</run>
                                <run bold='true' fontalignment='1' fontsize='18'> Production from 1961 to 2013  </run>
                                <run bold='true' fontalignment='1' fontsize='8'>by Hilary Zhang                                               </run>
                                <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Unit: 1000 tonnes</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4962' id='14' name='foodfeed' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' w='8464' x='19166' y='18135' />
        <zone h='11805' id='25' name='map点' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' w='8464' x='27993' y='49957' />
        <zone count='1' h='9410' id='20' name='gif area' name1='gif pie' synchronized='1' type='currpage' w='10157' x='87727' y='5731' />
        <zone h='3764' id='65' mode='dropdown' name='gif area' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' values='database' w='9674' x='77328' y='5304' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='foodfeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='20%80%'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GroupTop5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rank各国各item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:11]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='20%80%'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GroupTop5'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Rank各国各item' />
        <viewpoint name='foodfeed'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='gif area'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='gif pie'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='global feed pie cmpr'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='global food pie cmpr'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map点'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='rank点'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='global feed pie cmpr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>2013</value>
                <value>0.7563038851412287</value>
                <value>0.55444014913066175</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>1961</value>
                <value>0.6663826363692209</value>
                <value>0.17786301410436714</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='global food pie cmpr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='20%80%' width='192'>
      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
      N1i/E/j/Gmx2A+IIWi4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      q7x16So3FpeIo5ix0QrH5mf4ofc/S2VkmFKx8FB5U+4XXLfdaimXy+3LWEydILu9lgbBUpUl
      jeimen760/f9zJ5KT4f0OYRhSKvVwjTNrlOg1Wq32eql58uynEWTD8KDeuQFIE4SNjerXHj9
      LS68/hYraxuUigVOnZjnQx94lumpnySfMx/0NB8qeJ5HkiRomoaiKJn6ku7unbr5bujk8iiK
      knF80iBXqubsdFemwpKquenJ4boukiRl1Ip8Pp8JQepN6hwjVZE7d/2dc9/pQeqFXQUgjgLW
      qw0qI0MPHa8mSRJW1zd4/oXzvPzq60iSyDPnzvDZH/8UE+OjKB39aR+GXrQPE9LF3qmDN5vN
      rtOw082YLqZe3iFRFFFVtUvt0DQt09sFQUDXdTzPy8ZIVSPDMLrcoGEYZlyizrml7w/DsOu7
      NU1D1/WueQdB0K6OF8fE25SIOz3/JEl6C4DTqPHWaxe4sLDFF77wGQ7nd+gfLLvFCy++xLe+
      811kWeKHP/R+/tk/+cdHO/w+kNIUPM/LDMb0Z6oe7XQ97uaKjOM4U086VZydNOjUO5N6cgRB
      wLZtRFEkCILM4A7DENd1M89SCl3Xse1b3UJlWe6pwqVu1nhxCXlm+q67v+/7vQUgsBtcXbN4
      9zNPPvDCQUmSsLFZ5bmvf5OLl67y3mef4Rd/7mcZGrxz7+Ej9Ea6o5qm2V4A2x6cdPF3Gsd7
      8a0HQTv5SFXV7Pd0nFRNSSO/giBQKpUyVQtu6fC+72e7fCdVAm7x+zvpFb0WtyiKFItFwlMm
      qnpn75znebRard5s0ChweHtxnePzM/tWf6Iool6vY9t2dnHlcpkrV64wNDSE7/vk8/k70hxW
      V1fbnoIE/sf/eo6FpZt89kc/ybueece+VJp+qED98gL10w262zgHZYM2Go1sB9+J1EuT3oPd
      XJCCILQX37Yhu/PUSF+XO9TTNPYQhmFmS4Rh2MUBStFqtTIhvZtqczcEQUCj0QB2sQFEWWdk
      sHRg3X9tbQ3bthkYGMC2bVRVRdM0Xn/99Szp5syZM7t6YULf57mv/SmXry/w2R/9JP/wZ774
      2LghHzZ0emHSRZv+ne7aQRBkevlu/chEUcRxnC5PUZIkWS5AGiRMkS7gVAVKU251Xe956hiG
      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
      +qgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GroupTop5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rank各国各item' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bar' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='feed pie' width='164'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='foodfeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif area' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='gif pie' width='164'>
      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
      C3R0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='global feed pie cmpr' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANlUlEQVR4nO3dfXAU933H8c/e3u7enXRCz0joJBEF8xAcD7XxGLA9bmzS0EmmtdvJgwON
      E9Kpp/Y07sNfTeqJJ5120sZ13YlxzNSdTN3guPkjrU3rpK3TFtNg0lBwUKzED5JBgCR0ku5O
      uofd24df/xA6IwkCkk46Sd/Pa4YBxGnvJ7Hv3f3t7a00pZQCkVChSg+AqJIYAInGAObg7e5T
      GMuM48fHX8PwyCh+dPx/cfHiEHreebfSQ6N5YgBzELd0jKUzmHDyOPz8CxjN2TCq65AaGar0
      0GieGMAcDA4PIzWeR51lYcc9dyOqFXGh/yySyRRcP6j08GgeNDWp0uMgqojw1B+y2Wwlx0FU
      ERo3/yQZ5wAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASLRwpQewEjmOg9OnT6O6uhrxeLz0u67rlR4azZGmlFKVHsRy
      ppRCEPhwAxeu78L3ixh4tw97PvkF1KzbBL9oI6wc1FjADR1rsfO2W3D3hz6Erq4uBrEMZbNZ
      xGKx0u8M4AqUUlCeAzefQuD7mCjayOoKuq5DC3wke3vx2S8+h67bfm3a53mug4nkOaTP/xwt
      ERv3ffQe7Nu3D/F4vEJfCc2Uy+Xgui6UUrAsi4dAl1MqgG9PoDg+jMDJAgA0IwZD0xEEAXRd
      h4I29ehZnx82LNSt24C6dRsQ+B4OHXsHf/vC/fjNX9mFRx75Aqqrq5fwq6ErMQwDQRDAMAwA
      nAQDmNziu0UbhYtvw072lVZ+AFCBB1PTgKkdpXYpgGvsN0N6GA3tm5HYtRfff9PD3R/9OA4f
      PgzucCvLNE3E43FEIhFEIhEGEAQKmZyN5LgN1y1e4QEuACCstNLKO5dVWNM01Cc2Yu2OvXj0
      6RfxyO//IfL5fBlGTnOhlEKhUEAQBLBtGwDguq7sAFzfx8h4DjnHhdJCsM2G2Su3UoAKYE79
      XdPe2wvMQUgPo/OXduMn40349Y/vxeDg4AJHT3MVBAEAwPd9AJNn88QGUPQ8jI7n4fpB6WOe
      XgVPj81+cODC0kKlb6CaRwBTalu7oHV9GPd9+vM4c+bMvJdDc2fbNmzbRqFQgOM4UErJDKDo
      ehgdL8APZmzvNe3SXmD6Cq58D4YWeu/4fQEBAEA0Xo+6bb+B+z/3EAYGBha0LLo+mqahoaEB
      sVgMjY2NsCwL8XhcXgCe72MsW0BwlcloEDLhGLXTP6h86FAIXdpZzAxkPsxoNeI3fgyf+e2H
      UCgUFrw8mh9RAQRKYWziClv+GRyjFr424wxx4MHApdcIFrgHmBKN16PYvB1f/NKjPDtUISs+
      gFQqhWKxiFQqBdu2MTExAc/zZq1QSimM5+1px/xXpYVgm43TJsTK92BObfnLFAAA1K3bgFe6
      h/Hyyy+XbZl0/VZ8AOFwGNlsFrquw3Ec+L6PTCYz63Gu5yNnu9e9XE+PTZ8QBx5MlHcPMGX9
      LR/Bnz5+ALlcrqzLpWtb8QFEo1FUVVUhGo0iGo0iFovNuvRAKYVM3pnbgmdNiBXCSgGBAsow
      B7hcKKTDaL8NBw8eLOty6dpWfADhcBiWZcEwDJimWfqlXbaVdlwPRc+f87JnTYgDF2G1sNOg
      V1Of2ITnvvsffJFsia3YAIIgQCaTgeu6pUOefD6PdDqNTCZTOs+rlELWvsIrvNdpckJsXHrS
      SxNhTSv3TgAAEGu/GYcOPV/+BdNVrdgANE2DYRiwbRvFYhFKKUQiEZimCaUU8vk8HMeBFwRw
      3Llv/d97ohBss35yQqwCGEGAybW//AU0dn4A3z38PZ4RWkIrNgDf9+E4DgzDgGVZ8DwPnuch
      EokgFovBsiwAQMHxFvxcl79CbCh/0VZQLaTjbCbEF8eW0IoNIBwOo66uDpFIBDU1NaU5QCgU
      gmmapQgcd+EBXD4hDgU+9EXcQNd3bMUrr/xg8Z6AplmxAVwPpRRcfwGHP5cpTYgDD8YiHqLU
      tnThf469tmjLp+lWdQCeH6Cc6+rUhDhcpqiuRDdMvHVmiPOAJbK6Awiu41Xfubh0ybQRlOGw
      6he4mC4wgCWyugPwy78SeXoMnmahrLuWGQI9gtHR0UVbPr1nVQewKFtRTYNt1pX1eqCZdDOC
      bDZ77QfSgq3uAOb05sXrMzhwAU888SSida1lX/YUPWzCceZ46QbNy6q+K4RWxheret74KQ4c
      eAbDfh1qEjvQmqgp27Jn8l0bsdgV3plGZbeqAwiFFh5AOpXC0099HUdO9iFx8x40xRZvxZ/i
      OQXU1tZe+4G0YKs6gHBo/kd4brGIf/z2IXznpf9E/P270HX7LdMusFtMEd3nzbSWyOoOQJ97
      AEop/Oi1Y3jy69+AE78BbTs+CW0BIc1HW9Pi72Vo0qoOQNdDCGnaVd//O9OF8+fw+Ncex1tJ
      hbYP3oewFV3kEc7m5Mex9f2JJdvbSLeqAwhpGoxw6JpXg2azWTx78Bl87+hP0HrTh9HZ0bhE
      I5xt7NzPcdcDv1yx55dmVZ8GBYCoaVz13zzPw/f/9V9w/97P4fh5HV13fAqxNZVb+QFgYvAt
      3HHHHRUdgySreg8AABEzDC03/XaGSin8tPs0nvjrv8FYqBVtt/8WQnrlvxW+6+DWza2oq6ur
      9FDEqPz/+iLTQyFELQN5Z/IN8cMXh/D0Uwdw7I0BdNy8B23R5XPH5gs9x/C7D93L4/8ltOoD
      AICqiImx9Di+88Lz+PY/v4Kmrfdgw+07Kz2saYLAR9wdwJ49eyo9FFFEBDA2ksS+fZ8BWrZj
      /Z37luUWdqDnGP74wc/yp8osMREBNDU1oaW5CXZr17Jc+YuFLNqMUdx3772VHoo4Yn5EUnd3
      Nz798KN43+2fgKYtn5NfSim8/d/fwj9986+QTCbR2NiIeDyOhoYG2LaNXC6HNWvWIJfLYWho
      CM3NzWhsbMSJEyfg+z62b9+Ol156CZs2bUJ1dTUMw0BTU1PpTsgXL15Ea+vkxFophe7ubgwN
      DeHOO++E67qlMfT396O9vR3xeFzUdUj6Y4899lilB7EU1q5dC9PP4r9++GPUNHdUejglF3p+
      iD/Yuxu7d+/G4OAg1q9fj0OHDiGdTsOyLLz44osYHx/H8ePH0dLSgu7ubtTW1iKVSmFsbAyb
      N2/G+Pg40uk0qqqqcOTIEfT29iIWi+HcuXPwPA+pVAqDg4MoFovI5/MYHh5GPp9Hf38/kskk
      Lly4AF3X0dvbC13X0dhY2VPBS0nEIdCU/fv34/XTf4RTZ3vQ2PmBSg8HI/092NkZxgMPPABN
      09DW1oZkMomdO3eio6MDra2tSKVSaG5uRiKRQGdnZ+lmAIVCoXS6VNM03HrrrTh//jxuuukm
      NDc3o729Ha+//joSiQQsy8KpU6fQ1dWFQqGALVu2IJPJlN5zUF9fj+HhYaxZs0bUyg8IOgSa
      Yts2Pv/gwzivb0Bty/sqNo7UwDtocd7Et/7+72Ca5rU/gRaFuACAyTvIPfjQ76HPXYfGzq1L
      /vzJd7txQzSJbzz15IKOt8+ePYvh4WFYloVIJIINGzbg1VdfRUNDA3K5HBKJBBKJRBlHvvos
      n9ngEorFYnj24NPY2ebizP/9G1S53zx/FSoIcObkv2NnwsWzBw8seLLZ19eHdDqNvr4+jIyM
      oFgsYmBgAOl0GqOjozh58iQmJibKNPrVSWQAAGBZFv7yq3+OR3/nY3j36D8gnxlZ1OfLZ0bQ
      9+pz+NL+X8XX/uKrpZ9TuxAbN25EOBzGxo0bYZomCoUCOjs7kUgksG3bNtTW1i7L077LichD
      oJn6+/vx5a/8GU6cySPxwbtglvHyiKKdw4XuI7i5I4KvfPlP0NGxfM5AEQMoUUrh6NGjePKp
      Z/DWiELLph2I1TbPawuqlEI+fRHDb5/A1lYTDz+4H7t27UJoid9YQ9fGAGZQSqGnpweHnn8B
      Pzh2ClmtBg3tW1BV3wojUnXFIJRScO0csmODGDv3M1Srcdy9cxvu/9QncOONN3LFX8YYwC/g
      OA56e3tx9OhRvPGzN9HXP4hU1oanQvB8BV1TsAwdDTURtLc2YeuWTbjrrrvQ1dVVujs1LW8M
      YI6CICjdil3X9Vk/jYZWFgZAovHglERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgET7f5hdz9JFj1A5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='global food pie cmpr' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPKUlEQVR4nO3dW3MUZ36A8eftw5x0PstggzBgFtsEMDFrG9tg7LV3nZhs5VS52drKXT5B
      ku+Qm1SSqlS2cpNyyuWtrVonu5WQ8jp2vHhBSGBcFuADBgRCSCCNZkYzmumZPry5EMgcZJDE
      iBnN+/9VUUajnp6ecj/d73T3NEprrRHCUFatF0CIWpIAhNEkgAZybuQUM7lZhgePcX06zfHB
      Ia5dm+TsuYu1XrS6JQE0kJa4xUw2R75c5NfvvEt6roTb1EEmPVnrRatbEkADmbg+RWa2SEc8
      znOvHiSpfMbHLjE1lcEPo1ovXl1Sel6tl0OImnBu/qVQKNRyOYSoCSWbf2Ey+QwgjCYBCKNJ
      AMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQg
      jCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJo
      EoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYB
      CKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAw
      mgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoTq0XQFSH1pqgUiDw5wh8j2mvCdeOk4w7JGIO
      ybiLZalaL2bdkQDWqFCHTJUmGctf5dKkxUxxjr7RfyKW/xKPOO9e+yleqRuAVNylvSXBoz2t
      PDXQw47Hexnob8e2ZQAgAawx6blpjpz/iFHvHGHCQ0c2fnoPYNOkU3QCFhGob7f2xbJPsexz
      dTrP0BfjAKzvaWH/zgFe27OJrrZUbd5MHZAA1oj07FV+efo9jo0ewQs8Wpqb2bp5E8oKUU4R
      HbRQcTuBGwGg7zm/8ak873wwwntHvuDg7k0c2reN/q7mh/BO6osEUOe0X6Jy6m1mP32bo8kO
      ymp+2FKYm8P3fWKxGCqWQwctlG8JYKmj/VI54L8Gz/HhqYv8ycvbObRvG/GYOauFDALrWDh9
      juLPf0Lld/9AdynDwVJ24Xdaa2Yy8z9bTh6AstuFBiw06j57gDuVygH//psR/vZn/8uVqdmq
      vYd6JwHUIa01/rkPKP78J0RTXy48/pqXpTUKFn7OZHNorVHuHBDh221obAAswhW99oWrGf76
      n3/D4JkraL28iNYiCaDeaE105mO8w38DlcJtv2rWEX9QnIEbK2axVMIrl1GWj7JLBE4rkRUD
      bvsMvGxzns/fvXuU/xk63/ARSAD1RGv46gus4XPEnJ2LTrKvnKc/9Bd+zmRzACg3j1Y2vtMG
      rHwPcFMQRvzLr07w/nBjRyAB1JNLo3B8EKUhFv8+buz37prERXOolF7YC2QyWSKtUe78uL3s
      dgFgP2AAMP8SP/v1pwyeufLA86pXEkC9yGTgk99COL/iKmURT+zHdZ+6a9LdlTm2Bh4AXrlM
      sVjEcvNARMW5eSSoOlvtIIz4x18ONewHYwmgHgQ+HPkYKpXbHlbKIp48gONsue1xC/ijYhpr
      YS+QQ9kVsMuU3e4b00RVW7w5z+fvfzGIHzz4XqXeSAD14MwZmJ5a9FdKOSRSr2M7A7c9vjXw
      2H3jQ3I2lyOKIix3lorbAYClqhcAwLkrM/zqd19VdZ71QAKosTCdJhg6fs9plHJJpn6Eba+7
      7fFDxRlcHVHxfQpzRZRToOJ0olFVDwDgFx+dZSo7V/X51pIEUGO5//hPJj7+hNyFUSLf/87p
      lIqRSP0hlt238Fh/5LPfmz8KlJ6ZwXLz+E4LkXKXfSJsKUqVgPeOfNlQR4UkgBoK0mnmjnyC
      DkJy31xk4ugwhfEJdLT41tuykiRTb2FZXQuPvVHK0hSF5GbzRGqOyFEEdnNVjgIt5oMTF8jk
      vVWZdy1IADU099H/ob1vV6awXGbmzJdMHj9J8frUoltay2oi2fQWypo/3t+qQ37gZQnDkNl8
      HsvNU3a7Vi2Ash/y0anRVZl3LUgANaLDkOLg4mN/P19g+rPTTH36OeUblzvcyrLaSKV+jFLz
      V28eLGXpDn0y2SzKzVFxO1dlCHTTh59eJGqQYZAEUCP+lXH8q1fvOY2XnuHa8CnSp7/AL5Zu
      +51lt8/vCVSSOJq3ijPkcrOEKkvZ7cJSq7eCXpma5fJkbtXm/zBJADUSRV+T2G/jPG6hEveY
      UGuKE9eYPDZM5qtvCG85V2DbvSRTh0AleLaSZ0OlxGzhGpVY26oNgW4auXBtVef/sEgANRJx
      jsRel+Y/S9D6V0ma/iJOfJ+D/ZgFsbun12FI/tIYE0eHmB29TBTMXxVqO/0kkz/CxuHHxTTZ
      7Ax+MlbVE2GLOTO6+HmLtcacbz7UEa01UWl84WcVV7gbbdyNNlprdAnCqxH+aEg4FhKmNTc3
      6FHFJ/v1eQpj47RtfZxUbw+Ou4Fk6k2+V/xvBjJTlDp9UKu7bRu7PkukNdaDXHZaBySAWog8
      omDxMbRSCpUCa4uNu+VGEHlNMB4RjIYEVyKijCYoeaQ/P0u+tYX2JzYT7xggmXyVQ3Mf82+l
      abCTq/oWrmUKRJHGsiUAsUw6LEJYuf+E3AiiVRFrtYhtd9CRJsppgssRwaUQf6zA9ZOfkezu
      om3zJjYn9rEtfY7TsRdW9T34QcTsXJnO1tUNbbVJADWgozKs8EOqshR2h8LusIjvdNCBJkxr
      gsuzpC9/RsLq442uXj63Vv8wZdkP7j9RnZMAaiGq3oqjHIXTp3B6baxnbKxSCSfdxNOlx7ma
      cfC8pe1pVqLir/2rQyWAGlBWfOVP1gAKK3SwQ3fhjxU5oBUKxUjPbpzY8xxYX2Z4+Czp9Ooc
      s2+Eu0es/XewFlkuKAf0ffYEGpS2sKL5ld0KXezQuW1lv9OkvY7PYntBKVKpBC++uJMzZy5y
      /vwY1T55m4q71Z1hDUgANaCcZpSdQAe3fOn91pU9uLmyu1iRjVri6ZqiSvFJ4lUi9e3/Vtu2
      2bFjM11dbZw69RWVyndfcbocTQmXpqQEIFZAWTFsuwtd8r8dwoQuVmQteWW/U4jF0cRB5qzW
      u19PKdav76G1tYmhoTPkcoVF5rA8j3S1rPlzACBngmsmae2gaa6LhNeK6yexI2fFK78GRmJ7
      GLc33HO6lpYUL7+8m40bH1nR69xqY18bSgIQK6XaN1VtXuP2BkZie5Z0MyDXdXjmmW3s2fM9
      HMde8Ws+/Xjvip9bTySAWmkfAOvBR6AF1czRxEEitfSVWSnFxo2P8PLLu2lpWf6doW1LsXNz
      3/0nXAMkgFpJtEHbvYcs9xNi80niNUpW04qe397ewv79z7B+fc+ynvfkQM+aPwN8kwRQS707
      VvxUDXwWe5Zrd3xRfrliMZe9e59ix44tWNbSVof9uzY2xPgfJIDa6n0aYi0reuqYs4kzsd0P
      dhPQG5RSbN36GC++uJNk8t4n6TpaEry448H2XPVEAqglJw6PPrfsp+VVK8fiB9BVvuS5u7ud
      Awf20Nvb+Z3TvPXCNpINcALsJgmg1tY/C4mOJU8e4PDb5Ot41ur8s0bJZJwXXtjB9u0Ddw1z
      1nU18+ZzW77jmWuTBFBrTgI2v76kSTVwMv4809bqHoK0LIvt2zfx3HNPE4t9u7X/6Q93NdTW
      HySAqpiamiKdThOGd18dWS6XF/6eyWQAuH79+u0T9WyHvrvvBH2ni85WvnKfrsq4fykeeaSb
      Awf20NnZyiu7B/j+k+sfyus+TEo30m2+auTkyZMApNNp4vE4nufR3NzMhQsXcF2XXbt2ceLE
      CdatW0cymURrzfnz59m4cf5oyksvvQR+CT79Vygu/l3brNXB4dQfU7nnN+hXR7OreHN7J8kG
      uPrzTrIHqIKenh6iKKJQmL/GplAocOXKFeLxOBs2bGB6enr+FuaWhed5OI5DEAQkk0nGxsbm
      7/vjJuGpP1/0qJCPw5HED2qy8icci9e2NebKD7IHqLogCBgeHmbXrl0kkys4WZQbg8/fhhv3
      /9fAsfgrnIs9Wd0FXYKYrXjtiQ56mhpr3H8rCaDKtNZks1laWlooFou0trZSKBQolUqEYUhH
      R8f8P216r3H87DiMvAOVPF+72zkWP7Dqd3m4U8q1eGVLO90NvPKDDIGqzvM8zp49Sz6f55tv
      vgHgww8/ZGJigsOHDzM0NITn3efmsq3rYfdfkm3fwYn4voe+8nelHN7Y1tHwKz9IAFWnlCKT
      yeB5HpOTk+TzeWKxGJcvX2bv3r3kcjnOnj17/xmlumne+ads6Wt/WAd9sBRs703xxrYOWhON
      Oea/kwyBqsz3fdLpNMlkEs/zaGtrm78RVhQRi8XwfR/HcYjFFrn92yK01lwr+JwYy5Murt5d
      GLqbXH7/0WZ6m92Guc5nKSSANSKMNJcyHl9cKzJdxRB6mlye7EvxWHsc2zJnxb9JAlhjIq2Z
      KviMZjzGsmXmKsu/B2jKtXi0Pc7mrgTdTW5DfLVxpSSANSyMNLNewGTeJ1sKyJUDSpWIUGui
      CCwLHEuRcCzakg4dSYe+ZpeWhINj4NZ+MRJAg9FaozVEzB/hUAqjxvTLJUeBGoxSCstSONb8
      f29d+Y8fP06hUOD9998nm81y+vRppqYa4zbnKyUBGCQej3PkyBHCMOTixYtMTU1x+PDh2y7Y
      M40ZB3sFAH19fURRRGdnJ0opmpqa6Onpwfd94vEHuF3jGiafAYTRZA9gAK01Q0NDDAwMkE6n
      eeKJJ5icnGRmZoYwDFm3bh3t7e1G7gXkM4Ah+vr6uH79OiMjIwRBwMTEBKdPn2Z8fJzBwUFG
      R0drvYg1IQEYIAxDjh07RqVSIQgCLl++TH9/P729vTz//PP09/czPT1d68WsCfkMIIwmewBh
      NAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaT
      AITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlA
      GE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITR
      JABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhtP8HYfE9
      TcZSDVcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map点' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='rank点' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Qc13Wv+1VV5+nJOc9gMIOcMciZAYwSRUkUJcp6VrBsy/mG57Dsq3uf
      /fz8nJ6ul2xR2ZKtTIkRoBhARBI5YzAYhMk59XROVXXeHwWAGHRP6m4QA6K/tbBETXWfPl19
      9qlz9tm/vSUhhCBNmvsQSZIk+W53Ik2au0naANLc15hu/T9ut5twOJzSD9A0DQBFUVLabpr7
      C1VVkWUZWU7tnC2lcg8ghEDXNZBklOsd9fv9CCFwOp2p+pg09yEejwez2YzdbgdACB1N01EU
      BUmSEmpTkiTJNPXLpk/IM8CR402oioNt29ZjTqxfadJMSfvFk7QNuMkpn8/KeRUJt5PS50nQ
      PcLc1VtZVm5jKJjKltOkGY9Xt7J9xw7k4HBS7aT0CYCsEA2H0cM6GaltOU2aceiqiqpGESS3
      t0zpEyCrsJzhK8fp053kW1LZcpo046kqyuLgwcPkllYl1U5KN8HxSG+C06SC2zfBqSB9EJbm
      vidtAGnua9IGkOa+Jm0Aae5r0gaQ5r4mbQBp7mvSBpDmviZtAGnua2ZNwIIQOsLTi9ZzChHx
      IxfORyleiGSypu4zwj603tPoY51IziKUshVIjvyEowlvR9N0OgfdXOkeBaC+Io+q4uybkbGp
      aL9jwM2V7hFkSaK+Mp/KoqyUtS+EwOUNcbFjCLcvRGl+JguqC7BbzSlpHyAcVbnSPUrngBuH
      1czC2kIKsx0p+w1myqwwAKFrqJffIPzevyA8fYAAsx1zwyNYNv0xsj03ufaFQLi7CO39f9C6
      joKugqQgF8zFuu3PDUNI8geIRDVePnSJV969jC8YAcBpt/DU5nk8uWEeFnNyMSvhqMaLB5p5
      7fBl/MEoAJkOC09vWcBj6+uxmJJrXwjB+dZBvrvrNF2DboQQmBSFFQ0lfPGxFRTlZiR9j8Z8
      IX7w67O8d6GLSFQDCUpynfzGzqWsW1iBLH/wRpDSJZAaCdLXP4g+w+AKfeQq4YP/hHB3g9BA
      6BDxE216keiZn5B0tIYaJvze19HaD4EWMdrXo+iDzYT3/z0iMJpU80IIjl3q4YX9zXgCYXQh
      0IXAEwjzi70XOdnSm9R3EEJw9GI3vzrQjDcQudm+2x/mZ+80cfpyf9L3yOUN8Z1dp2jvH0PT
      BbqAiKpx7GIPP3unCVXTk2pfCMHLh1rYd7qdUEQ1voMu6B3x8r3dp+kd8c6wPZ3RwT68ITWp
      fqX0CTA6OEjfoIu8wiKsM5iQ1LYDCN9A7AWho159G/OST4AtO+F+6aOtxsxP7CDRhy+j9Z9F
      rtuRcPtRTefwhW5CkdgfIxhRefdCF0vnFmNOUBUXUTXePd9JOKrFXAuEo7x3oZMlc4owKYnP
      Z+dbB+ge9MT8XQCnrvTRN+KjJC/xeC5vIMyRi93ocQx1aCzA6ct9VBRmTbs9NeJjqLMbU00m
      mbbE+5VSAyiqqMbnDwCg6zqapqFpGrquE4lEJnyf5umf8Jo+fBn/txMfnFOia6ieQcQk/ZuK
      UETF5Q1MeP3guU4OnutMuP2p2Hemg31nOu5Y+y5viD/436/fsfYBhsb8k46RG5LIaDSKyWTC
      bM2iuqqE3iRXTXdsD3BDvxmJRJBlGYtlkvjogrloSMSboeXCBVi3/WlSm2HhHya05/9C+Idi
      LyoWzPk1mCbr3xTIiomygiya2uOLMzYtqeLJjQ3ICa6hdV3wq4PNHL3YE/f61mXVPL6+Pqk1
      +tWeUb6763TcpU5BtoOvPLWaTEfiv0FE1Xj+5RN0xXnKSEBVcc6kY8RkMqEoCmZz6jbkkGID
      aG8+TUe/i+GImTVL5k6/E3O2EW16EX3w4vgLZjuWFc+hlK9K6scVmop54UeJnPx3YwN8K5IE
      uooQOokGx6qajqYLJAluf8LnZ9l5ckMD8yoT9zYJIfjIxnm0dI4w5guNu1aY4+CJDQ3UV+Ql
      dY8qCrM4camXk5f7xv3dpMg8tHoOy+tLkvI2CSF4fH0D3999OmYpV1+Zz6p5pTNqL+wb4njT
      VVTZRPbq9eQnqMCaFXoAIQT6QBPhw/+K1n8e9CiysxjzsmcxL/54SlyhIuQmcuL7RC/tQoQ8
      SGY7StU6kBW0tgNY1v0uluWfmXG7Lm+Qb7x8gms9LravqOH0lX76rm/oygoyeWb7IlbPK0va
      w6Hpxkb4l/ubb7ZfXpjFszsWsaK+NCUelN5hLz/Zc4Fz1wYIR1WcdgsPrJzDRzY2kGFPXuEU
      iqi8cewavz52FZc3iEmRWVBdyKcfWExtac6kBnyn9ACzwgDAMAKiAfSxLlBDSFllho9eTl06
      FaGpCG8fIjAM1mzk7HKQZKLnXyB8+OuY5z6Idct/RbJOvRkTQtDcMcw3XzmJSZH5/afXUF2S
      jS8QYcDlA6A4z0mm3ZIyH7cQAk8gwsCoD0mCkjwnzhS3H1E1Bkb9+EMR8jLtFGQ7UJLYXN+O
      puu4vCGG3QGsZoXS/Eys5qkzO3zoDeBuo/WeIfTW/wCzHfsjf4ecVzvxazWdN45d42d7m1g1
      r5TP7VxGjtP2Afb2/iOtCLvDKGXLsX/sm0j2XAK/+jJq6/64rwuGo3xv92l++OZZnn1gMV95
      qjE9+O9h0k+A2xBahMiR54mc+RGW5c9hWftlJJMNIQTdQx6+/qvjjPlD/O5HV7OsrviuHeHf
      b9ypJ8CsCIWYTUiKBcuG30cuXkj4nf8bfeQa1gf+ipNdYb75yklqSnL440+upTQ/8253NU0K
      SD8BJkEbbcWz6895x13PC8PLeGx9A89sX4TVkp43PmjST4C7gNtcyvP6b9M0MsznM15lS/Fj
      WEyL73a30qSQtAHEQQhBR7+bf/r5YSwmhf/1hR1UDUcIH/r/YPQq1s3/Fcmcupkozd0jbQC3
      oeuCA+c6+NYrJ1m/uJLffGSZEQJQ+VnkogWEXv8ztMFm7A//zaSu0jT3Bmk36C0EQlG+u+s0
      33zlJB/bsoDffnLVuPgXU/kqHJ/8PpI1k8ALX0BtO3gXe5smFaQ3wdcZcQf4h5++h9sf5itP
      NbKopnDC8AIRDRE5+jyRsz/FuvbLmJc/l1LlWppYPvSbYCEEo54gl7tHCUWiVBVlU1WcjTlJ
      pdOthMJRrvW6GHD5yXHamFueR6bDwtlrA3zjpROU5Dn56m+umzLuXTLbsGz8I+S8WkL7/wFt
      oAnrtj9DsuchxjrRhi4BoBTOR8qpSlk4h9A1dFcH+vAlQEYpmo+UXYWUQklkWBUM+6OEVJ1M
      q0K+w4xJSd1Zh6YLXEEVd1DFrEgUZJixm+W7dp4yK54Aui44ebmP/3jzLL3DXoQAh83M9hU1
      fGrHYjJsyYXACiEY8QT599fPcKKll6iqocgyc8vzqC3NZd+ZdjYtreL/eGQZjhnoX4UQ6CNX
      Cb3+pyB0lNotqC27EYERACRHPpbGLxkBfUqS30GLEj37EyInf4AIjgKS0f7aL2Ne+FTy7QvB
      sF/lRLeXkUAUIUCRJapyrKwsd6ZkkIZVnbO9PlpHQ0Q1gQRk202sLHdSljV5TNM9EQsUDfno
      Gxghr7gcp814uEzHADoH3Pz1Dw4wOOYf93dZlnjuwSV8fOuCpG5+JKrxjZdPsPdUW4ziwKTI
      /M5HVvHA6jkJx+uLsJfga/8FrfNw7EWLE/ujf4dSuzWpcGj16tuE3vgLiN5WecSaif3Rv0ep
      2ZTUPQpGdd6+4mI0EKtqayi0s6YyEyWJiFMhBGd6/Zzv88f8BplWhQfrc8iyTbwgiS2RpDEy
      0E9EdlBalEsiPUv5Emiwr5eoLtN86TKNyxdO+30nW3pjBj8YT4ZD5zvZtqImqadA77CXU5f7
      4shtDDlATqY94cEPgGJFsufFvxbxEW15HblsBciJ3W6hRVAv7Y4d/ABhL+qVt4zQ7iSeAoO+
      CGPB+Pra7rEw8wsdOK2JL7UiqqDDFYr7G3jDGr2eyKQGENNeYIwhV4Cwqw1LziYKEozWTqkB
      lFbNoafzGkXFJTOSRPaPTiyIbu8b4yv/vCup2U3XjTDfeGi6YNDlnbR/UxINoMXTNF9HbXkd
      9do7ibcvAG3i6p2ap49oOASmxB/mnmB0wmQGgajOruaR5ERJCCbT1XuC0RlJIi2OPKrLdK6q
      OtlJrP5SagC97Vex5FdSlJOBBNOWRFYUTix4ryrO5vOPLU8q7YfLG+Lbr52KUVMBmBWZsoKs
      ySWbUyAUCS27ArXnRNzrprrtmJc/B4kG3+oakVM/QGs7EPeykluJ2WZHSvAJA5DjEMhSIK4R
      OMwya6oysZkSfwKouuBYpxdPOP5ElOOwzEgSGQ64aO/3snBRA6YkHt4pNQCvZ5SBrn56S2pY
      Mb9m2u9bPb+MN45fi9GLmk0yj6ydy/K5JUnNPlFVo7ljmN1HrsRkJVhYU0hDRX7CbQMgmzDP
      fxytbR8iODbukmTPw7z8OZSKxqT2ABZdJdh3FkLu265KIJuNVC8JIoRAlkCWpJj7IwG1+TYq
      c6xJLROFEDQU2jnV44sxsly7ifLsmU1AeshPX3cHQwO9LF+ziewEI9JnhRfohrrqR2+dp7XX
      habr5DhtPLymjifXN6Qk+MztD/Gzd5p493wXwXAUi1lhUU0Rn3tkGeUFyUd2Gsm9fk3k2LfR
      Pb0AyFnlWNZ+GVP9w0m7QoWuoV7aReT4d9G9fYCEnF2OUrUetfkVlNot2Lb9GZJ1Zt9FF4JL
      AwFO9/qpyLag6oJBXxRNCCyKTG2ejaWlGViTmP1vENV0Lg4EuDIcJKwaGuoCh5kV5RkUZJjv
      fS9QPGYiifQFI3QOeohEVUrynBTlZKRUjhdRNXqHvYx4AmQ5rFQUZmGzmFIoKdQRviF0VzsA
      cl4NUkZhwmL7mPZ1HeEfNNqXJOTcWiRHAfrABYKv/ymyIx/rg19FKaifVntRTed0j59rI0FW
      lDtpKLCjCoE7qBHRdBwWhSyrkpT353Z0IfCFNbxhDZMskWM3YVGktCQyTXLoQReht76K1nUc
      20NfxTT3oUmfOq6gyuF2D8GozqbaLIqck8/Ad5u0AaSZEqGGiZz+EZHj38Gy/DNY1v1OzMZY
      CEHXWJgjnV7yHCbWVWXhnEkav7vEhz4UIk3ySCYrltWfR86rIfzO36ANNmHb8VfIWWWA4fK9
      0O+neTBAQ4GDZWUZKV3e3Iuko0E/ZEiShLluB/anvw2RIIEXvojaeQRfWONgm5uWoSCNlZks
      L08PfpglXqA0dwYR9hI++M8M9nVwatnfoigmNtRkk5+R2vSCHwTpJVCaGSPMTrqX/5+cyB2l
      pHcfK+XLZNb9EZB4pu0PG+kl0IeUqKZzrMvLiW4vi8tyWL9oLkrfSQIv/g7ayLW73b1ZQ9oA
      PmQIIfCEVN65OkavJ8LWOdksKnFgrVyN45kfINlyCP7qt1BbDyD0+GEJ9xNpA/gQIYSg1xPh
      rcsuZEni4YZcSrOsN/37kj0H++P/iHnhUwRf/+9EDn8docbGR91PpPcAHxJuuDgvDgSoL7Cz
      tDQDS5zwBcmSgWX9711P/PW3aP3nsT/+T0hJVOC5l5k1XiAhBCFV4ApEUXVBls1EllVJaeE0
      VReMBVUCEQ2rSSbXbsI8jWP46SKEwB/Rb8bV59hNZFhSJ/fTr7fvvq39kCo43uWlzxOhsdLJ
      nPzpeUq0kWuE3vxLiPixPfzXyCVLIexFG74CoTGkzFLk/LrUVurUouiuDsRYJ1gcyIXzkGyT
      p0aHD/lJsBCCfm+U0z0+XEEVIQRWk0x9oZ1FxQ7MKYgHCkY1Tvf46RwLoWoCRZYodJpZXZFJ
      jj35B6EuBK0jIc73+fFHdSTAYZFZWppBbZ4tOcHN9favDge50B8gENWQkHBYZObm22kfNYQm
      G2qyKJihi1MPugjv+39R2/ZjWfZptIEmtL6zoEWRLA5MDY9gWf+VpCt1AoiIj8jx7xFtegkR
      coOsoBTOx7Lpj1DKVt77wXDhgBe3L0R2bh7W62VBp2MA7pDKnitjeG+LFZclWFXhZEFRcnVk
      NV1wrMvL5aFYRVVJppltdTlJRTveWHsfaHUT0cbfTosisWVO9pSa16na73ZHONjmJqrF/lxl
      WRY212ZjMyf2HYSuEj3zE8IH/tGo0nkrkox5+WeMZGBJKM6EEESOf4fI4X+NqdIj59Vif+p5
      o17DBNxuALoWZcw1hmRxkJuVkVCfUn4OMDLYh8sXpK1nhLUr5k/7fT1j4ZjBD6ALuDYSoibX
      hiWJp4AnrNI1Fl9RNeSLMuCNUpaVuCBGE4JrI6GYwQ8Q0QRtoyEKM8wkuprThKB1JBh38ANk
      WBQsSahCJNmElF1u6ENv/4gblTqXPoOcObMyRuOaCXtRL70WW6IK0EfbUTvexbL0mWm3p4Y8
      9PYN4B4aYdHWreQkGM6UUgPIzcvmSmsXpfXLZiSJHLte+DkeroDKqxdHExI930AXgvAEg0cT
      cKjdjSkpuR9EJtH7tY2G6HFHEv4OU7XvDamEI1GSyV6ijXbBBG5R4R0g+LPPJaxpNhrREaGx
      iS6ijnbATCSR9mzk6BWitiwyklghp9YLZM5kw/rVnDjfRkNlwbQlkdn2KBB/hs6yKSwvcyYV
      txKM6pzq8RFWYweRLMHikgxyk9gHCCFoGQrS64n/A5ZmWmgotCe1BLo0GKTPG7/9TJsJq9mc
      lMMgmluBKitxZ2jJkY910x8j2XMSbl+oIcKHvmYUQ4/9BEy5VTOSRKoRlblLGzGffY/hIJQ6
      EutXSg1goKOFjgEvlQ0zy6BckW3l0mAQX2T8DCQBcwvsVOdak94DDPujXBmO3QMUZJiZV2hP
      eg8gSRJDvihRPXYPML/YQXmSewCAIb/hIbu9/ZpcK8k6mpSylciF89EHLtx2RcJU/yCm+Y8n
      vQfQR9uJHPlGzD5DyqnEVLNxRu1FQx5On7uE7MijOokCPbPGC9TnjXCq24c7pKHf8AIV2Flc
      krwXyHCx6pzs9tE1FkbVBYpkeIEaKzPJtk1dpG0qbnhpzvcHCF43ZIdFYWlpBnPyU+MFujJk
      eIGC0ffbX1aWGi+TEAJ9qIXwgX9AG7hgeIHMdkz1D2PZ8AdI9tyk75EI+wgf+xbqxZcRYS9I
      CnJBPdZNf4JSsfre9wLFY2bnADojfhVVF2TbTGTZUivHUzUjLZ8vomE3yeQ6pifHmy435H43
      zgFy7Sac1uSNK377ErkOE84UnjMIISDkQRu6hAi5kLPKkQvqkUypq4EmtAj6aBu6qx3JkoFc
      tADJPnWN4w+9AaRJMxnpKpFp0twB0gaQ5r4mbQBp7mvSBpDmviZtAGnua9IGkOa+Jm0Aae5r
      0gaQ5r4mbQBp7mtmjSZYCEFYDzMaGkIVUbIteWSas5BTeFan6SpjERe+qBe7yU6uNR+TlLqk
      sEII/KqPsfAISBK5lnwcpozUta/reL1eRoaHkSTILyzE6cxMaf8jkQjDQ4OEAkGysrPJy89H
      MaVwmOgahD0QcoFiAUcBKFaSjuZLkFlhAEIIegNdvNf/DgPBXnR0MkxOluY3sjx/DWY5+Uxm
      QTXA0cH9tIxdIKyFMMkWKp21bCp5kFzrBPW9ZoAudK64L3J08ADuiAuAbEsu64q3MjdrQdKG
      rOs650+fYv+ePbhGDQPLzy9gx86dzF+0GDkFpVKHBgd5a/cu2q5dRY1GsdntLF/dyJYdD+Bw
      JBhvfCtaBLqPQO9JiPqNijlZFVC7AzLL74oRpNwA1EgIoVhmFMHpiYzxds+rDIfer7M1Fhnl
      vf49WGUrS/JWJRkOrXF08ACnho8iMDQBUS3KZfcFonqEx6s+gVVJPOBLCEG3v4N3encRUN8v
      9jcU6mdPzy4cSgblGdVJhUO3Xr3Cqy/+ioD//fZ7e7p55ZcvkOF0UlVTm1yVyGCAV3/5Ateu
      XL75t0gkwqF9e5EkiQcfeRRFSSKLtBDGwG/fN15zMHoVIn5Y8hzYsmbWpK4RjmrYrImr+VJq
      ALoa5sSel7AtfoLlldMPfrvmbRk3+G+gCpVzoyepzazHrCT+Jd2RMVrGLtwc/LfS5Wujy9dG
      hbMm4fZ1oXNh9NS4wX+DgOrj4thZSjMqUUhsAGmaxqnjx8YN/ht43G5OHjtGQWERchID9GpL
      C+2tsRnjdE3j7KmTrN2wgZzcJJ6UWhj6TscV3ODrg9ErULZqBg0Khjovc7C5n48/uj3hbqXU
      AIa72ymonENYlmYkiRwJDk54bSjYx4+vfRs5if26JlT8cQYngCqivNn9MmY5iSJ5CIITtA8w
      FhohHA5hSnApFw6HGR0emfD62ZMnuNpyCZIQjkbCITQtviQy6Pcz5hrDkZF4RK8U9mCKeCfs
      oeYbRJuBJFKPBBjwy1QVJhdlnEIDUDl3vgkhIniyrCwqXzZ9SaR14pQb2ZZcNpTswJSEft+v
      +jjU/zYhLVYRpkgKKwrWUmgrSbh9geDM8DE6/a1xrzst2VgtVpQENbWSJJGVPXHiqtq5c2lc
      tx4piX1AT2cn+/e8ja7HPiWtNhuZWclV0kRygtlurP3joDhyUWYgiexvvUBHlx/XcC9V9Uso
      TrBKXgoNwMSDTz5NZKybQVE4o3fWZjZwZuQY3uj4CogSEgtzlzMve3FS61tVj9Lj76R57GzM
      tSJbKcvy1+AwJZZaA96XLPYFu4nq42cxi2ylIXshspT48sRkMrFk+XJami8SvW2WtNlsrNu4
      mXkLFyZ1jyqrqrl0sYm+np6YazabDas1yeRYihUmEtbYciBv7oyaK1+wlvIF0NbWmvDghztw
      DmDJqaAid2Y3K99WyPayR8mzFqJICjIyNsXOsvw1LC9Yk7SbT5FMbCx5gPqshZhlCzIyJslE
      qaOS7eWPY1eS83BIkkRtZgMbireTYcpElmTjHzLlGdXUZNYn9R0kSWLB4sXseHgnmZlZyIqC
      oihkZWfz0ONPMHfevKTvkTMzkyef/gQVVVWYTKbrT20rDfMXoGk633/+G/T19jBj/ZQQEHTB
      uf+EiA8KFhiGIMkgKZBRBPWPgz2xUrW1tXMSet8NZo0iTAiBN+qhL9BFRA9TYCum0FaCKZlU
      HLcR0cL0B3twh0dxmDMpdVRgV5JLunUrutAZDQ8zGOwFJCJamEP9b/Hx2s9RmlGZdPuapjE8
      OEhvdzeSJFFWWWFsflPgAoXr5xg+H10d7fh8PvILCqiorCIcDrPrpRe5ermFxz/6MVY0Nk6z
      Qd3w8lx+Daw5MP+jYM0CXz8EBo2nQnYVWDKndIGmJZH3ILrQ2dX5CwKqn6drP5vURvtuE41G
      eXf/Pva//RabdzzA5m3bMU+2JxA6dB+F9r1QthqqNht7gARJSyLvQWRJZmvpTkbDQ5wZOX63
      u5MUZrOZbQ8+xDO/8TmOHDzID779LcZcrvgvjvjg0suGz7/+Mah7OKnBfydJG8AdJsuSw/ri
      7RwbPMBIaOhudydp5i9cxJd+/w/QdZ3v/tvXaW+9zfPl7YWzPwRPFyz7DShednc6Ok3SS6AP
      AE1XebnjJwgh+EjNs/f0UugGkUiE1195iXOnTrHziSdZ2diIaewaXHoRcufCvCfAnILwieuk
      i+TdwyiyiW1lj/KTq9/m0tgFFueumNVV2aeDxWLhiY99nKLiEva8/hr53nPU2YahegtUboAk
      ssh9kKSXQB8QuZZ81hRu5mDfmwS1wN3uTkpQZJl1q5fwhzvLKKaf1y6bGHUuumcGP6QN4AND
      kiSW5TeSZytkb+/r6GLibM/3DGMdSGd/SEZGBtKqLzGmFPKtr/8LF86ejXuiPBtJG8AHiEWx
      srV0J1fdzVzztNzt7iSO0KHnOJz/MeRUw+JnySio5JnPfo5lK1fxy5/+mLd//TrR6MRp72cL
      6U3wXeBA35tccV/k03N/K6kQjLtCxAdXdoOrFeY8BKUrxx1iCSG42tLCCz/5ERVV1Xz0E5+c
      NI5puqTPAT5ENBZuwixbeLd/z93uyszwD8KFn4JvAJZ8Jmbwg7HUq58/ny/+7u/hGRvj+89/
      I9ZVOouYNU8AIQRhVWXA6yWiqRRkOMm225NO+z3+Q3RDjhfxG/EotmwjHiVVnyEEqCEIjRmR
      ydac63Evse23ea+wu/MFnqh6hurMugTal4wgslTKCYUwcveHxkANg8UJ1kzj2lAzXH0DMgph
      /kfAOvWsHvD72f3ySzQ3XeDBRx5lzYaNSJKE3+fD4x7DZLaQl5eHyTy1LPVDHQohhODa8BA/
      Onmc5oF+VF2nMMPJk4uX8GDDfCyp0KRGg9B1GAbOGP+tWCCvHmq3GQMpWYQOI1egYz8Ersfu
      OwqgZqsR6RjnYftm18sMhnr55JzPT61IEzoMt0DHQQgOAxI4Co3+586J2/6MCY5C2z5wXTPk
      i2YHlCwzRCw9xw33ZvXmGZVKEkJw/PB7vP7qK6xY3UhuXh4njh7B63ajmEzUzKljx86dlJSW
      3fv1AYQQRrSgJN2cuadjAMM+H3/z5utcHhovjLGbzfzepq1sr29Izm+ua8axfOeh2CqIhYtg
      wccMg0gUIcDTDU0/M54wt2LNhsWfiqt59Ue9/Pjqt1mSt5J1xdsmb9/dCU0/h4h3/DVbDiz6
      FGSWJfckUMNw8QUYuX1zLoHJCvM+CoULE/oMIQTtra38+N+/RyAQQNzmIaqqqeWzX/gizszM
      Cdu43QBujjVAkuWEpEAp3wO0n3mXNw8c4krnzI78j3S0cWUoVhUWjEbZdfECITVJb0LYDf1n
      Ygc/wMhlGGs3JHuJ/lND0HsidvDf+Ozek6CFYt6XIVvYVLiFM4OH0NXY6zHt3z74wViu9J1K
      rv9a2NjUjl6Nc/MEmOyGeD1BA5MkidLycrKys2MGP0BnRzstzRdn1Kbqd/PWr1/jvcNnmVhH
      NjUpPQn2+sNkOnMpKshBCHFTDqnr+qQusY6RkZjqnDcY9vsY8wcwZSQRTx9woajB+LOEHoWW
      VyYWa0wHIYyBPhGD540ZPM4Amid0iiMqnPzWxMsYISA0SfsDZw0jTuYJEA3Gn3CQS0sAACAA
      SURBVCAAEQ2gBd2IJHQTXo8bryfOBAEgBAN9fZOOEU3TkGUZVVVRFIWI6kcIGwXlJSQj1Ump
      AcxdsQZdi3D2QhMb1ixHURRk2SjhY5pkHZ8/yfIow2Ilw2qd9P1TYs0A2Wysa29HkqFoMWQU
      J96+0KH/tDHI4+EshZLlcQe4DGQJlT29u1lbtIUsc5z9iNCh76SxzIpHZpnRfjLFZH19Rvhy
      vKlIMaNYHJDEb2C3O7DabPi8cZ5iQFZ29qS/sXJdBHQjM4Uto4CNWzfQe/EUvUWllM2GKpHD
      Pa209bkoqV0Us2afbA3fWFXNa00XGA3E6kWzrFZs0/ASTIo9D3JqYej2CogYA79y4/vejkQQ
      wthDePuMJ8qtKBaoWGvsNSb4DrLQGQqc5qAY5tGSrbE5hIQwNp6+/tisCooFKtYZSqtk7lG4
      zlgG+WOXolJuHdhzkmo/w+lkwaLFvLt/X4yqLDsnh4b5C6b1G994jRrycv7sRTQlk9ok9sUp
      3QNUNSxj69ZtzKuamSa4Ji+fz69dR6HTiSRJhgfRZGJlRSUdrlH+ce/buEOxgvZpI5uN5EtZ
      Fe//TZINOd7cRwx3XzJIEhTMh6qN15dSkvHPZIOqTZA/b9LBI0syW0oeptV7mXZvnHW4JBkb
      0MoNt7VvN4LP8uqTd4VaMo174Sjk5pNEUoy2a7YZ/50EkiSxaft2lq5YgclsBskoTpibl8cj
      T36UgqKiGbVnzSxgw6YtbF6/AksSX31WuEHBqIDY7/Fwvq+HYDRKXX4BDUXF9LrdfG3/O/jC
      If7LtgdYVFqWWEeEgPM/ATVgzJbWLMipMQZ/qvzougb+ASMWHskwOGfJtF2UB/ve4or7Is/O
      /VL8E2JdM54Cnm6jz1mV4CxOjQsUjHsU8Rr7iYgP7AVGqIMpSUH8LUQiEbo62unv7cVqs1E3
      t56cvHSVyEkZCwb5/tHDHG5r5YvrNvDQ/AUzPyDzD8Hp78LCjxuz2iwkrIX4zyvPU5c1ny2l
      D6c0L+q9zn0dCpFjt/NHW7fx3Oo1fOfIu3zz3YMEJkmiFIMQhhvUmm2INWYpVsXGjrLHOD96
      km5/+93uzn3BPWEAYKyTn1y8hL946BGOdXbwP3a/Ss/Y2PTeHPXDwDkob7xrWYinS1VmHQ3Z
      i9jb+3pMjqE0qeeeMQAAWZJYUVHJ3z35FDazmT977SXO9nSjT7WKG7kCCGOjOstRJIUNJTtQ
      9SjHBg/OPA9PmhlxTxnADYozM/mrnY+xo34ef/3m67xw5hQRNU7SVbgeu37UEGcn6+35gMg0
      Z7Gx5AHOjhxnKNR/t7vzoeaeNAAw3KSfa1zLVzZu4YWzp/mHd97CGw7FvtDVZgR5FS/94DuZ
      BA3ZiyhzVLK3d3f6KXAHuWcNAAxN6vb6Bv75qU/Q5/Hw3176FVdvjSnSNeOENneO4fO/h5Al
      mW1ljzIaHuH0yNG73Z0PLfe0AYBxwFKRk8PfPP4R6goK+B+vv8beKy1oum6U4Rm9CmWzf/Mb
      jxxrHmsKN3Ns8CCjoeG73Z0PJfe8Adwgx27nT7Y9wCeWreRfD+7n24ffRe0+fv3Aq/pudy9h
      VhSsIceSy6H+t9HiFZdIkxQfGgMAMCsKH1u6jL/c+RhN3W24Oo7jK1g2IwHHbEOWFHaUP06n
      r5UWd9Pd7s6HjlljAEIIdE3D5xrBPdRPJBRMaPMnSRLLyyv427UN6ELw1WNXOHc9rbcQAk8o
      RPeYi9GAH13XU7rBvCHr7PO46fO4CatqStovtJWwqnA9hwf24o64GAuPMhYeRdWjKe+/LnR8
      UQ+joWGCaiDlG3DjHkUZ9ftxh4LoIrW/wUyZFaEQQgjGBns5u+dV+lovoasqzrxCFm16iNql
      a2ZeplOLwqnvEs4s54euXN5obuaTK1YiAW+1XMIdCuIwW1hXU8szK1aS50g+M4MuBOd7e/jJ
      qRN0jBqSyJr8Aj69cjWLS8uS1jZH9Qg/vPxvRPUIutCRkCiwF7O+eDvljqqUZJrzRtwcHTxI
      q7eFqB7GYXKyNK+RJfmrsKQgnaOqa1zs7+NEVzvuUAiTLFOTl8+GmjryHJOXk/1Qp0YMet28
      9+IPGWh7v0JhuMfPkZd/hGI2U7tkmvnob+DphtAo1kWf5IsNudTmFfCNdw8QVtWbh2a+cJhX
      m87jj4T5/c3bsCapO742PMT/3r+Xfu/7oo+zPd0Meb38+UM7qSuYWYTs7QyHBonqUfyq7+bf
      On2teKNunqz6FIX2xEs8AUS1CPv63uCyu4kbmoCQFuJQ/9sIdFYWrE86NunSQD9vX24mrL2/
      l7nQ34s3HOapxctxJFOCKUFSugTqbz3P23v2cq1ndEbv67p0lsH2KzF/j4QCNL+7h2gkPP3G
      hG7IB3NqwJGPLMssKSsj02qLOTEWQvBeWysX+/sIRqMJ//OHw/y6+eK4wX+DXo+bt1ouGV6p
      BNGExvnRU/jVWDGJKzzCBdcpwlqIiBZJ+F+Xv51WzyVuF8SoIsq5kRNxK2DOhIiqcqK7Y9zg
      v0Gna4S20Zl5udSwl0N73+Lg0XMk4xpI6ROgo2eYktJicrMcxnryuhxS13XUiU5qgZHezgnX
      gV7XMAGvh4zsiQvp3YoUciEPX0Jb8Am4/pkDHk/8QzIM3fHX9r+D05J4yK8ABuIM/ht0jo4Q
      ikQSfspE9DCjoYkraV4YPU2nrw0pCUVYUAugivi/kV/14Qm5sEmJLz+8oSCeCTQdAuj3uJlX
      MPFZjaZpKIpyUxrpH+lCtRZSXlyQ1CyeUgMwWW0UFuTTfLGJDWtWGuIWSUKW5UnL+NgyJlZj
      mS1WzBbL9MsADZ6DjCLk3Dlw/T0ZFitmRSEYR3OqSDLra+ZQm59YjSoATRe81dJMy2BsrWMA
      p82G6bo8NBFMmLAqEw++Alsxi3KXk0xw70Cwl3MjxxFxJJEm2YTFZEuqFJPFZMI8SR1jxxS/
      8Q1p7Y19giTJZObko7jbaBstpC4vsYS8KTWAmrICzjdfIq90zs3O3ujwZF+ucv5SLh3ZS8gX
      O4vanJlYbPbp3Xw1ZIQ9V25AMr8/o5fl5LCopJTD7W2xn52byyeXryA/iRq4QgisJoW2kWEi
      cWrtFmQ4kzIAs2RhbvYCOnxX0W4TrptlMysK1jEvO1aGOhOqI3V0eq/hisTWI7bKNuwmR1IG
      4LTaqMsv4mR3R+w1i5W6gsJJ2791MgXIyK+CtuN0qhYaFyWejTqle4D8inq2bd3K0oaZFYTL
      L6tmxYMfxeZ8/0kgKwpF1XNx9fdw6BffI+SPL6Yex9BFQzN7W9yPzWTiudVrWFBcMm6RUJqV
      xefXrk/aCyRJEhtq5/D4osXjljlWk4klpWW81dLMf544hprgPkCSJOZlL2JpXiMm6f0f2yyb
      WZG/nrqsJPMmYQTgbS59+DZRvkSRrRRVqOzq/AXuyAQlkaaBJEmsrqwm0zo++0aGxcqWunoK
      JlkFxEOxOFi1YSvbtqwnI4lpfFa4QQF0Xcc92EvPlSaioRAFFTUU1zbgHRnkwC++i9B1tj77
      W+SXTXCqq0Xg7H9AdqVRk+o2bpwBnO7uotvtoiDDyfLySoozM1NWrCKqabQMDnCxvw+ARSWl
      NBQVc7yzg387tJ+GwmJ+d9NmCp2JCfBVXaUv0E2vvxNJkijPqKbEXo4iJ6fXvYEQAnfERYfv
      Gv6olzxbIdXOOqJ6hDe6X8IVHuHB8ieZk9WQUPtnerrYd62FLXMa8EfC2ExmavMLyHNkTOkm
      vq8lkX63i+O7f07vlSYaH3uGuSs3xFZFH2uHcz+CFZ830oTMMq4ND/H1g/vxh8P80dbtiWub
      7xJhLcS7/e/Q5DrN2qItrCpYjzKDE3ZPKMi/Hz9MY2U166rnzHjSua8NAEDTVJoOvsm5fbup
      X72J1Y98HMV0fTkgBFz8hXEAtvhZSNGMmGp84RDfP3qEQ63X+PzadTw0bwFKimr8fhDoQuey
      u4m9Pbspd1azs+JjWJWpvWearrO7+TxjwQDPLG9MyBt23xvADbpbznPol98np6iMDR/7HFn5
      RUYl8hPPw8JPQP7sFLzfykvnzvKjk8fYWlfP59euJ8OauqwLHwT9gR7e7H4JCZmHKj5CiaN8
      wtcKIWgZGmB383k+s2INJVmJ1QpIG8AtuAZ6ee/FH+AfG2XTJ79AmdxnpO9e+cXkUhx+QOhC
      cK63h3/Zv5c8h4M/2f4A5dkpyFD9AeKLetjb+zpdvna2le1kYe7yuK+LaCrfO/ou84pK2FaX
      +GY9bQC3oUWjnHzjl7SfPsgTawqwL3wUqXJdSj/jTjMWDPK1fe/QMjTAN5/5NFm22VlMeiJ0
      oXN6+AjvDexlSd4qNhTvwHJLlm0hBG+2XKTb7eLTK9fgMCce6nBfp0WJh2I20/jYM2x5aBsS
      Ku8dPks4TmrF2UyO3c6fPvgQDzbM509feemm9+heQZZkVhVu4NHKp7k0do6XO36MN/J+Et8O
      1wgXB/rYXFuf1OC/k9yzBgAgISgxj6HnzWewu4vd3/w7XAM9d7tbM8JutvCba9bRUFTE//z1
      Lt5ovpjwecHdoi5rPp+q+wIAP732XTp9rYSiEd65comGwmLqC2evHPWeXQIB4OmBM9+HFV8k
      KGVw5OUf0dd6iY1P/yaVC5YldXL5QaPpOm9eaua7R9/joYb5fLZxLRl3IToyGVQ9yoG+N2ly
      naHEtIyRUSfPrVxHpi35fVl6CXQ7QhjpTnJqwFmM3ZnF5me+yLy1W9n/029yYvfP75latWAI
      /B9duIi/eHAn77a18tXdr9Lv8dxTGSFMspmtZY+wPHcLneGT5Bb2YJnlNbPvXQMIjhjVXcpW
      30wOazJbWPnQx9j+3Fdov3CCN7/3z/hcsbEts5mVlVX881MfJ8tm509eeoGjHe33lBFouqBn
      0EaptImwcPPjq99meJJI1rvN7DIAISAQAJ/vZijzhAxdNIq43ZboVpIkKucv5ZEv/Xei4TC/
      /s4/MNTVdr15QSQUxOcaJuT33ZGBpakqfrcLv9uFNtV3mIACp5M/ffAhds5fyN+/8xYvXzhH
      9HqQXVTTGPb5GPH7UeME3iWLEAJ3MMig10sgEpnxPTrX282gz8Mjc9fxdO1vUGAr4oXWH3DV
      3XyzragewRMZwx+9M7/BTJgdewAhwOuF82ehtwc0DbKyYdFiqKy6GdZ8k2jQKClUsdYoDjEB
      4WCAY7t+SseFkyzf8SSK2cLl4wcIet1Y7A6qF69i0caHJg3Hni5CCIa6Wjm3dxcjvUalmPzy
      apZtf4KCipqE/N+6EBy6dpWvH9rPopJSHl+4mF0XL9A6MoyExNzCQp5dsZq6goKUxDO5AgFe
      Pn+Ww+1t+CNh8jMyeHzhErbOrZ/W6e1owM8PTxxmY81cVldWI0kSmq5yeHA/p4YPsyyvkWJ7
      GWdGjuGOjGKSzdRk1rO6cCNZ5ux7v0pkPKZlAMEg7N9rDP5bsdpg8xaoui0Aru8MtL4Fq75s
      1PqdBF3XuHz8IMd3/Qw1EkGI9/cFkiTTsGYLa5/8NKYk3XSjfV3s/dG/4R4an8owp6iM7c/9
      LrklFRO8c2quDQ/ztX17aHeNxijLavLy+LMHd1KVm5dw+wBhVeXrB/ex98rlcco5m9nMF9au
      57GFiycNWFN1nZfOnyaqa3xi6apxsf9CCNq9V/h114sEtSCC8d+hNrOBxyo/js008eC+JzbB
      zaffY9/et3jjwOmZvbG7C/p6Y/8eDsHFpvHLISGMbG+FC42cP1MgywoV85ZgdTjHDX6jKZ22
      s8cY6W5H19SE/6nRCJePH4wZ/ABjg71cOfkuup74cqU6L4+GouK4ssqO0VH2XG4hoqqompbw
      v0sD/bzbei1GNhqKRnmt6QLu4MQVeoQQXBroo9M1yoP1C2KEL5IkUeGsIcuSEzP4ATq8V+nw
      zayavG+ok3379vHyC79iKL7Yb1qkVBCzYMUGijsv482ouCmJvPG/2iTrVWloCHmCB5Fwu9ED
      AcgwYvYlTxeSrx+99iGYppfHOzpMOOCLey0SCnDgF9/FnmCIMoDQRdzBf4OR3k6i4TCmBGWX
      wUiETld8nbUAXm9u4nxvT1LLIFcgQGiCPcuw38eg10PWBDFL3nCI/dcu01hZTZ7dEfe39kW8
      eKPxK13q6PQHupmbOXH27hvS2huSSGdhFVs3F3G2qZ3CJLysqc0KoUfpcUeZX2E8pqb9g0zm
      7zYpcGNGEcKoWJ5ZZpQGmiaK2YI8QYSoJMuU1DaQUzxxQNdUCE2n9ewRRvsCca+brbbY8O0Z
      oMgydvPE/sTSrCzW185JKvVK28gIA15P3HK1ZlmecA+gC8HhjlYcFgsrKybOwKfIJpRJkpBY
      lalH8a0KQ4Dhni7yyxJfWkKKDcDvGSUrvwSTbMizb5WxKZPoQamsgpZmCMdmf5AcGShWq2EE
      QRe422D+U++HQk+D3KISCqvm0N1yPuZaVn4xKx58Cmdu4ppgIQTWjAwOv/Sf6LdlPVBMZqoW
      LMdssSY8Q9tlmbXVtZzp6Y45JbYoCh9ZvIwd9cmpwvo9Hi7298XNbLGwpJTS7Jy4v2Hr0ADN
      A/18cvmqSaNanXIm1Zl1nB89GXPNrjiozayfdIzc0ATfPNwUKmMBQW1Fcmq+lO4BMnKKqS7L
      n3lugoICWLocbr2BkgR5+TAyDO8dMjbKA+eMyog5tTNq3mSxseKhp66ryd7vXUZOHqt2Pk1G
      TnIbSEmSqF3aSP3qTeMMUzGZaWjcTM2S1UkNTkmS2Dq3ngca5o1bX1sUhUcXLmJ9TW3SXqCi
      zEw+17iW/IzxA2peUTGfWdWIJc7gDEQi7L92mcWlZVROcQ9lSaaxcDNVzrpx2SvsioN1xdso
      tM+wTrNkon5+AyY5ue89O7xAYLg+h4ehpwsiUSgshLJy8PvgwD5jKZR/1ajpW7lhxtmehRD4
      x0bpaj6Le6gPR3YulfOXklNUltTy5Fai4TB9rc30t13m6olD1C5dw+rHPok5iZQrtxKMRjjb
      00NTfx+yBItLy1laVp50Uq8baLpOh2uUE50ddLpGOdh6jb98+FFWV8ZmnhNCsOfKJa4OD/K5
      1eunldRKCEFQC9DmvcJgoBerYqM2q4EieynKFGVYP9xu0KkI+OHIayBaoOppmDtx0enZgBCC
      Az//DorJxManfzNlmuMPkoim8uevvsyiklK+sG5DzPXuMRe/OHuCJxYupb5whrN3AtwTbtA7
      ht0OuX5QiuDICTh5YuqT4ruIJEkUVdUx0tMRsye4V7AoJhqrqjne1RHjfg2rKnuvXqKuoIi6
      SZJZ3QvcGwYw1m7k+2x8GrY/AFcuw9494J+98f+5JeW4+rsJ+eO7X+8FNtTOoc/tHpfwSwjB
      qe5OxkJBdsydn3TS37vN7DcAIWCoyYj6zCiCikrY+YixKX5jN8xSEUlmXiFWewZj95g+4Vaq
      cvMoycoeZwCjwQBHOq6xubb+ngvXjsfsN4CwBwYuQOmq9/+Wlw87H4WiYnj7TWhumvah2AeF
      PTOb7KIyBjuu3u2uJMWWurkcbm8jqmlENY03W5qoyM5lUUnZPbm3uZ3ZbwB9J8GaCXl14/9u
      tcLGzbCq0dgTHD0CM6kef4eRZYW80kqGe9rvdleSYk1VDa3Dwwz5fJzr66bf4+aBhthwh3uV
      WVEfYEK0iBH2XLoqfrYHSYL5CyAnBw7uN84MNm2GnOllkr7TFFbW0tl8Bl1TkZXZfasnoiIn
      h9KsLN650oIr6GNTbX1KCorMFmb3E2CoGaIBKFww8WskCUrL4PGPGE+FXa9BR4exd7jL5JVV
      EQ0FGZskTmi2YzObaayuYVfTefIznCwrTy70YLYxtQGIEMPDPoQa5Gpr9wfQpevoKvSdgvx5
      YJtGzpyMDNi2A+bPhwN74cwMI1LvAFn5hovQ1f8B3rc7QE1eHiFVZXlZJZZ78Ek2NjKCqgtG
      uzoZDY5fJk9qAEIINF3m/Hsv8/y3f0xoGgFLKcM3AL6+SQUvMZjNsHK1sTe41AxvvWGcJN8l
      FJOZgooaRvu67lofksUXDnFxoBdJgtaRe61WsRGJLEdH+N7z3+D1Ey3YzeMNeFIDCHn7efmn
      v6DbFURVNYaH7rC+VghjyRP2QvcRcJaCY4ZBapIEc+oML1EwCG+8boRY3Gw/asguI+E7skwS
      QkWPetCjHoTQKKmdx2D7VbQUHYgJXUcNh1DDIcQd8HwJIQhFo/jCISKaysG2q5hkmbVVtRzr
      aE+q1NMNNDVEKDBEJDQWo9FINZeO7eXVPceJRqKoAT/eyPgiKZM+z+xZpTz93Kc4sOtFkEPo
      +h1aVwsBES90H4XRK0aS25ALanfcFLzPmLw8eHgnHDsKb/4aVjcaEaUtl4zQCqsNamph3vzJ
      w7Gn/RUEeqiXyOAbaIF2ABRHDTl5ZTS7hoiGgihJSC+FEIS9Y4y2XSLkHgUk7Dn55M1ZgCUj
      NSneQ9Eop3u6aBnqJxyNYjNbGPJ7+eii5Yz6/fzj3rcZ8fspykzse+i6xkjvUTou/JiAuwPZ
      ZKeoagvVi57FYs+/A25ViYXrHqCiqoVX9hxDxBElTWNBF8IdzeXZZ7ci3amsy2oQWl6FkZbx
      f+8+YsT+581NrF2bHTZtgaYLcOQ9I+Du5qzvgeEh4zS5cc37moME0cP9BNu/hR56/+BLD/WS
      ST4m3AQ8rqS0xxGfh94z7xG5pYpOxOcm5HFRvmIjliR1zaquse9qC2d6u98vkxQMYJJlAtEw
      i0rLsJvNnO7uYueChQl9xlDXQS7s/yqR0PuFNrwjLfjGWlmy9X9htiSvzY77uVc7WP7I08zL
      scSU3J3G9Kog/L288MILvHdm8kOd9osn2bv3Hc5fjSNvnIzRa8bMfzsRH3QdNjbEiSLLxpLI
      bo9d8ggB167A6MyqWt6OEBrRkXfRQ7HfWxEjVFVLDHVeS7x9XWes69q4wX+DsMeFuyf51Cn9
      Xg9NA70xNcJUXedEVweSBCsqqjja2Z5Q+5oaov38f4wb/AaCwY79jPaemFF7Yf8wB955h3f2
      HSE0xSrKWZzD8ddf5oUXdjMSHL8EmoYBmKmpKcOkmNG1yT9pzK+xdn0jUf/EFRPj4uk2ypvG
      IzBk7AuSwe+D0ATC0UgEJpAbThtdRQt2cnuJUTC2JLn5EkOdl2PfN02ErhH2TFyeKOweTXo/
      MOD13Ey9cjvuUBBvOMT6mlpOdXVOWHFzMiIhF/6x9rjXhB7FPXRhZu353eTXLKE6x0xgCrl1
      Zn45eXYTZosSM1FMwwCCXG7tJzg2SFfn5AmOVF1DkWSCwRl6XuyTHFxZnKAkuUa32mCirA+y
      clNvnDCSgmye+DuYbIV0X76InmgeH1nGZHNM3L7dkfT6OdtmnzCwzWYyYzdbWFVZRUVOLnta
      WuK+bjJMZicW20T3SMI+w6o+0VAQ2WJFEQECU5SR7r5wHm84TP/QML7Q+NXE5AYgBKGAxNbH
      HuPhxx5hzaq6SV8+p6qEY0dPUT133rS+xE3y5xmBbrcjm6BkBUyjCsmkOJ1QWzuBhuB6Mq4k
      lhBCCyBUH0yghcvItCGJKGODiQXuSZJMdkUtShwjNlntZJXVJK2PqMjOpSKOqkuWJBYWl5J5
      vdTsmqpqjnW2zziBr8nipGLeU8hxJrOs/HkUVmyaUXvZJXMI955nSCmmdJL5S9dUCpes5Ikn
      n+SB9avJdY7//Ek3wUF3Lz9/4deYrQING+UL1jFvEjViXmktm0tnJlcEjIOuho9A2x7D9y90
      Y+YvWw0ly5MXvygKLFthrFDaWiEaAZMJSkrBkQFHD4PLBStXGX+fAVqwh1DXDxGqD2vpR4mO
      nUAPG25X2VqIKWcl8ugx1qyLoAW6gJmfpEqShCOviKKFqxhtvUg04EfXVCwZmRTOW449N/nE
      WDazmYfnLeSNS010jo1iVhSsJhOLS8pYW117U4u7cU4dr128QL/HTcUMQk4kSaJi/tP43R10
      Nv8CRbEiySZyipZQv/r3sMabACdBsThYvmbjFK8SnN3/Kk1DGkG/F7spg0cbxk/Ok/7aAc8w
      2YUNzK9VefvgMA/V3iHxgyQZ1R0XP2us+XUVbLlgzY7NCpcoNpvh7Zk335jxbVYj+5zJBGVl
      hu54zGUcojkcUxqdEAJ17AShnp+j2CuwV38JyZKPOX8TemgAJAnZWoxkysKSt4msyNexBH9F
      dMyGKXv5jAesJMtklVXjyC8m4vcwcOEEWWXVOIvLU+Y+zHdk4LRaqcjOZdOcuWRabeTaHePq
      mNXk5ZNls3Gut3dGBgCgmGxEw27ySlZQt/J3MJnsZOTWYjI771BkqWCwL8iKjRs59+qLVG7f
      QoZ5/HiadHQ588vJtvpp7w0zty6TnoHE68ROiSSB2Q7ZVZA7x9gXpDq9uaJAbi6Ul0N+gXFy
      LElG5rknPmo8GXa9OqXGQOgRwv2vEur6Tyz5W7DP+UNkayGSJCObczBlzsPkbEC+nu5PtuTS
      MbiI5nNjBNq+RaT/NYQ+88hVSZIw2+xk5BeTUVhC2DuW6J2IS1hT6fO4WVJaTm1eAQUZzpgi
      fooss75mDu+2Xp3xoZjP1cpgxwHqVvw2BeVrySleitmSujK1sUjUL6un61IzufXz8XV3EVTH
      93nSJ4A1o4Dtjzxyhzo3y3A64cGdcPI47HkLVqyCBQtjjFCPjBDq/imavw1b5Wcx5Uwv40Nh
      ZR3vnchk/ubHiQzvQgt2YKv8DWRzYkXjbNl5DPWfQwgdaQpB+XQZ9vkIRqPU5hVM+ro1VdW8
      1nQedyg4o8jQgfY9ZObNJbckfj2x1CMxZ3EjcxZP/IrZHQ36QWO1wroN0LgWzp42Qqyv5yoS
      QqB6LxG4+jWE6sFR94eYcxunPXsVVs0h4PUQ1Kpw1P839KiHwJW/R/VfTciHb3XmoIaDqMEk
      XcS3cHVkkLKsbJxTVK2syMkl22bjeEfHtNvWokE6mn5Kad0jKLOokGHa246cJgAAEnhJREFU
      AG5Hlo19wo6HYGgI3noDMTpMdOQgwfbnUTLn4aj7E/7/9s4sOI7rvMJfL7MPMAuAwTrYCS4S
      IUqiJJsita8WxZS1xHZZtOOS7OTBcaVc5bhSzlKuJM5D4thVTpw4smVZTioum5ZkyRIZRqJF
      EoQkiqJIcZFIbARArANgMINZe7r75qFBkCC2GRAmWSmeqnnA9ODOne7797393/+co7hrC2rW
      5nDiKw0xPtiH4qzC3fQ1FE8T6a4fkBvbW3A3bS43NpdnxZZBphCcHh2huTS0pHdxwO1mfVU1
      B3ry39wb7NqJLKtUNl1dK4prAbAQKioQDz2McElkjv0L2YEd2EMP46z5HNIyqmJlRaU03MjE
      YC9CCGTVizO8HXvFVjJDL5GLHSloJlDsDhzeYtLRlanQHJ6Kkcpp1AfzKz68vaGJjrEIkcTU
      kp81DY3Bjteoan4Eh3vx5dXlxrUAWASmmiRZcxSjJIurqxnHQAmSsbz9AkmSKAs3Eunrnhno
      kmzDEbofd+NXSZ95Fm34VYSZW6Kl83AU+cnEL3EXexqdYxFK3F5KPPnpN7VWVWOYJscGly57
      iY4cYXL0GFWrHrnUbq44rgXAPBDCRI+fINX1fWRbAHfLN1Bv3AofnYS39lhl1stAoLya2NgI
      uja7lEDxNOOq/QLZyJukzzyLmVv6rgrg9JegJRMYev5BMx9yhkHX2CirQ/kLXLntdm6sCdPe
      073ozCWESf9Hv6a0+ja8gcU3Uq8ErgXARRCmRnboN6R6/g2b/2Zc9V9Btget0ulHtlk1Ra/+
      BoYK39UtLg3h9HgZH+ib9b4kSaj+W/G0fBORi5I8/R30xDzFgRfB6Qti5rRF64TywXgywVgy
      UbDJxp1Nq+gYG2VqHlHjc8gkR4j0H6Bu/VNcjTpsV1+PriBMfYr0mWfJTbyNq/YLOKoeQ5Kn
      xW4lySLf3/+gtY/w5m44faogORaX14c3WMZQ98dzjkmShOKswtX0Z6je1aS6f4A23o4QC9cP
      2ZxuZNVGNr78B2EhBF3jEQJuD6UFllSvq6jAME06xyILfubsxy/h8lbgK1teCfXvG1cVwdOa
      Sk2rLkeSV/yOYbUvrFILSQIsyW2LzDJAuudHoDisDI1rgZKFc6lSfwDeeRtGhq2/z+n3C3G+
      rkiSZu0oS7JMoLyaicG+eRq2IKsenOGnkJ2VZM7+F0ayw3rwlu0X/IZzQSfjLiknMxVFCLGs
      DSUBnI6M0FxShjJ9LjCnr4Esw0Wa/BfC53SxrqKSfV0d3FQTnnNcy8QY6HiFhtYvzqr1F+b0
      NUACeeH2LweumgAQRgY9fgw9dhRhZlDc9aiBW5HtZStygoQwMdP95KLvYmZGkOx+bL6bUDxN
      5KLvkB18GbV4PY7qJ5FtS1gvKQqsuw5KSuBAG+x6HbbcaQVHT7e1kyxJUF4BjY0WMWcalU1r
      eX/XDvSctqAvmSSr2EMPoLjryPT/J6nOf8ZZ+yUkxUlu8j2MRCcgoXpbcBb5iQ+NIkwDaRmE
      9Vg6TSSZ4P6WdaDrZE6cIH3wEEYshlpViWfzZmzhmnkVtCVJYnNjEz9+u520puG6iFkX6duL
      aWhUr9oGTLt0jsWYPNxBZnAMxWmn6LoGitaEka+QofBVEQDCzJEd/i3a2B6YLhHQY0fJxY7g
      qnsaxVl5ae0LgTH1Men+FxDa+bShHj2E7KrGTA/iqNiKrfSOmTvtkpAkq5juoU9ZG2a7Xofi
      YmtGODcDnOmxgmHTZqsWCUszNJtOMjURIbCIK40kSahFa3A3f51073OkOr+L7CidHvzWDKDH
      DiMpzeiZ8LK1h05Fhgm43IQ8XqbeeJP4jl9jntNcfR/Shw4R/PIzONaunfdG1FppZYNOR0Zn
      SaaYhsbZUy8Tqr0T1W7tFmeGxhn4xR4yg2Mz1In4sW5KtrRSdv9GZPXyi22t6BpjpPcU+9ve
      JhIvjDChJ07NGvwWBGbqDNnh1xZdB+cDYSTJDr08a/Cfe99IduGs+Ry2snvzH/wXwuOB++6H
      YMAa7BdmRISA3jPQeXrmfX/IqnufHM2PNSfbg7gbv4rsrMBInIYLTeaEgZw7jcPWh5ZHPv5i
      mELQGx2nsaQMhoeJv/Ty+cE/DX1omNivdiAWyHz53W7qgkH2d89mC06OHicWOUH9+qemu2oS
      2X2IzMD5wQ9gZnOM7TtKurcw7aRcOs6ht9s4eqpvXlunfLGiAdA3HOW2W9bT11UY/c+Y+vii
      wX/BsWQHRrILIz2w/NfURxiZhbM2AvMSl1kSC3EBEMLKGE2TYc5Jp0f6CnNFXPCbJYHdHiUd
      LVx8K55JMxSPsbqsHK2jEzMxP5Ep138WfWzhDbdP1DVwdOAsiQuyQf0f7aC0ZhMeXz0AeiJF
      un9+QpXQdJJdhdFo40Nn8DXeSFFqmIlLUMRc0SVQXWWQdw4eIWMqM45+hmFgmibaIrqdprFw
      HltoUdLdP7wkToAQBpgL5O6FwNC1Rfu3JHQd1TAWvJuYhoGey81kjEpqGhjsPEkmnUbOh4xv
      5hCL8KJlWSI1EaEoXNhv6IqMokgyZW4P6ezCMjGWFIu2oPbqhqoqnnu3nY6RYa6rqCSdGGS0
      fx/rNv0VOd0ADHQttyht09Byi14DXdeRZZlcLoeqqviqGuj54DCTY2O0rIKSZZIGVzQAZNWB
      36MgFVsEClmW0TQNWZaxLyI9IhW3oE/sBTH3IitF63BWP8GlTFbCSJHpf2Fe0rqkerB7G1Au
      RRpFVS2l6vm8jgE5VI7d6ZwJ4rKaBk69+xYSYtHzMtN/oWJ6m9CSHczlHUvIrgay41PYbLa8
      ZzJTmHRHx1lbXonDboeWVUy5XIjU3OI6tbwcR2XFgueo0h9gVVmId/v72BCupbf7dVyeCiob
      755hgKl+BUdFCXp8bvuSquBtql70XKiqiqIo2M5l2yQo8gVJaLZFGWFLYWVN8or9VNSuYV1j
      YZY5qnctqu9GLl5GSLYgjopPobhqUFxVy395GrGHHgLlInsdScFWcgeyqzA+6hzIMqxqgdKy
      +Y+nUzNLIIBgZRgjlyM5mZ/QmCTJ2IJbkF1zU42KpwlX1d0I3UBL5v8ckM7lODsZpWXa3she
      V4f3rjvnzrSShEinMacWbtumKNxaV8+Bni60zCRDXbsIr31iZvALIdATKfRYYu5KUZbw3dCE
      u7GwayCrTkpKS9l4603YLmH1uqIzgMvrw7UMKzBJdeMMf56cuw49/iHC1FCc1dhK70ZxL+w9
      m3f7kowteBuSrYjc2H5MbQzZVozq34gtcCvSIv61eaO4GO6+x3K2H51e65aXWzPDwXcsmcZN
      m8Hnw+H24A2UEOnrJlg5d1DPB8UZwtXwJ+QiezCS3QgjialN4Kz9IyS1BEk5jpaM4/AukcKd
      Rs/EGC6bjbJp7zZJVbE3NCA5ndjr6xCZLEqoDM/m20m2HWDkb75N8Okv4dq4EWmeZdsttXX8
      9+FDHDz6CrlsjIqGe4Fpc8LOAQZ++TvspX7KH76N+PEessMTyA4bRdc1ELhlDYqjsDSorNgo
      LaB0YyFcFWlQAFn1Yg89iL30ToQwkGQnkrxy3ZMkBbXoelTvaoSpIUk2kO0ruwlTVGxxCXLT
      zzQ2mzU7BIPQth92vQaf3IwtHMYfqixYM1RxhJCrnwQjg6lPker8J8x0P7ZABXavj8zkBEXl
      +XGOT42OEPYHcE3vRRixOLEdOyh68AGK/2AbQteRHQ6w2XC2thL/zSuM//t/4L23E98fPol8
      0XKlxuenLhBk37GdfPq6T2F3lSJMk4n2E4y8/g6+m1qoeOQTKC4H3rV1mNkckiIjO/Jftv0+
      cNUEAEw7yyuuwn2GC2lfsi8v3ZkvZHm23zFY3OMHHoIjh+GtN+HmWyirruf0+20F7+BKkgKq
      B0X1oPo2kB3djeq/GWeRn1Q0gjDNJW1fU5rG2cko97VYsvNC14m9+CKS00Xxo1uRL3JilBwO
      fE88jmPNaiZ+9Cy5wUGCzzyNGjxfO6QqCrfVhtkz0Uzl6sfQp1IMvdRGsnuQyk9vwX9zy0y/
      ZFW5Ijn/+XCtFuhyQVUtN5vbt8CRwwT7B0nHJ/N+DpgP9rJ7MTNDGMlOnP4ScqkERm7pTFDP
      xBgCMVP7nzn5Ecm39hLY/nnkBTSSJFnG1dpK6K//EjMWZ/TvvkPmxMmZ40KYVMT3MiGVMDIs
      6HtuJ9lIlLqnHyFwy5oV82JeaVydvfr/CkmCpmZ44CGCLi+SYRAf7F+2JpHirET1tpAbb8cd
      LMPQsuiZxSmSphCcjowQ9gfx2B2YmQyTL7yAZ8tmHOuWLlizlZdT9hffxLG6hbHvfY/4zl0I
      XSc9NYjR/xpeM8Fbr+xBLXZT/8xW3LVXt43qtQC4EigL4dz2aYpDVYy9uQu6l68baivZQm7y
      PTDj2NweMkuURqc0jYHYJOvKKxGmSezFlxBC4Hv8sbzv0orXS8kffwX/U08R+9UOJp7/Gf0f
      /hIzbtI66qCjwU/V9gew+S/BHP0y4VoAXCnYHQRq6hlLxaH9AAwsz0VGLVqL7ChDnzyIo8i/
      JDdgNBFHM3TC/iBadw/JN/fg/+xnUAKF+6p57ryDsj//BqmTRzl75Bf4szdw712b6EpMMr6C
      ZP3fJ64FwBVEqLaJmEMld/vtsOcN+ODwrP2CfCApTuwld5CbaMdZ5CEVXbg2H6AjMkp9oASX
      EERf+DnO1lZcGzcu+zfospuJ+iBCgZLOKSqNBCGPl3d7zyy7zcuJawFwBVFaU08sMkzS67E4
      BSePW+XVizCs5oPq2wBmBsXsITsVw9Dm/39TmHSNR1hVVk5q716MsTF8n3lyeTwCw2S87Ri9
      z7/OmNlOxeqHKbl3G9mf/JTmwSHaC1CMuJK4FgBXEB5fEIfbw/hgLzSvslKlY6Ow8zVLkiVP
      yPYgtsAtkDmKrMpkE7F5PzcQmyRnGFSkMsRefJnibY+ilhe2mSSEQE9mGHxxH2N7DuPY6MT0
      Jaht/SzFjz9G8MvPcGNkgp7RUQYL+A1XCtcC4ApCdTgpra4nOnTWyhCVheDhrRb1cvdO6OrM
      m3JpK70H2YygShMLSqV8PDpMudOJ2PFr7A0NeO+9p+C7f3Y0Su+zvyXZPUh4+/1kSs/gL2+l
      uNTiC3hu38Qnv/anuOw22p57jswypNQvJ64FwBWELMuUhhsYvdA9xuWy2GXrb4AD++HQe3ml
      SWVHKYq3EbdrYN5MkGbo9E6ME+7sIXvqNP7PfQbJln/5gRCC+PEezvzoVVSfh/qvPIpcJjHU
      vZvwmidmfdZbVcUN4ToOCYPIP36XxL79eX/P5cZVsxNs6BnGB98j0rcXXUviC62nvP4enJ7y
      FaNEJifPMNS9m+RkD05vOeV19+ALXY+8QiUXRiJB+vAHZE+eBCSc69biuvmmBTeXAAIVNZzY
      v3v2m4oC61stId/2A5aX2e1brB3m/r7zlMuKSkvY125HklTsZffjiv8r0cQIpmHMKrUemYqT
      jkQoe+N3+B5/HFvtXGU7YRikekeIH+9Bj6dwlAfwbWjGVuwhsucw423HKNm8ntBDtyJJEh2H
      fo7LW0lpeNOctu5qXsV3e89gtqwl+tPnyZ44gX/7U4h0htTBg2jdPcgeN66NN+NcswZpBYwK
      l4OrIgBMQ6P76E858+HP0XMWKWOoayfDPf/L+ju+jcdXmAzhxRBCEB3+gOP7/5bk5HkiysDp
      V1lz29epWvXIJRPwjUSC6PM/I/XOu6BbZd3Jtjbcmz5J4AvbUbzz58T9oSokZZ7vliQI18JD
      PmjbB//zulVSMTx0flnU2QFNq+DW28DhQC1ag+KqxJ7pJpdOzhTGCSHojIxw/cHDFNfU4L37
      rjk3FSEE0fc+ZmTnQYzEee5E7IMOVK8LbTxO1ZN34VvfiCRJGHqWoa6dhNc+iWqb617TEipH
      UVWGbtrAhpZVTPz4J4z+/T8gyRJad8/MrJZsO0Dxtkcp3voIUoHeDCuBS14CZaYmOHH8NDkg
      MTFI2/52xhOFZTGiw0c48+ELM4MfrDt2dOh9uo8+N6+9ZSHQtQQdh344a/ADaOlxOt7/Iamp
      gQX+Mz8IIUjtbyP19jszg9/6Yp3UgXZS7e0Likd5AyU4PUXoC5Uw+Hxw3wPW4B8cmP1MYJqW
      yV9PNwiBJNuxBT+B09ZLLnleMc4QguzhIzScHSKwfTuye+6A1SIxRncfmjX4AbIjUTLDUcJf
      fBD/huaZYB3peYOclqCi4b55u+2x27mhupq9nR04r7+e0Le+hRmPoXV1z1rSiVSK+CuvonUX
      xpAz9Swdx08wkdYwcymOHGzn496RgumR/weIQbLIsCWEdQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
