<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='FAO' inline='true' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FAO' name='textscan.0cbagav12h7cdy1d4j6ey1bx4577'>
            <connection class='textscan' directory='D:/GitHub/Visualization with Tableau/VizChallenge5' filename='FAO.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Area&amp;Continent' name='excel-direct.17ypuc609xqdst1amx3001vp16xe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/GitHub/Visualization with Tableau/VizChallenge5/Area&amp;Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FAO.csv].[Area]' />
              <expression op='[FAO Area].[Area]' />
            </expression>
          </clause>
          <relation name='数据透视表' type='pivot'>
            <columns>
              <column datatype='string' name='数据透视表字段名称' />
              <column datatype='integer' name='数据透视表字段值' />
            </columns>
            <tag name='数据透视表字段名称'>
              <value name='[Y1961]' />
              <value name='[Y1962]' />
              <value name='[Y1963]' />
              <value name='[Y1964]' />
              <value name='[Y1965]' />
              <value name='[Y1966]' />
              <value name='[Y1967]' />
              <value name='[Y1968]' />
              <value name='[Y1969]' />
              <value name='[Y1970]' />
              <value name='[Y1971]' />
              <value name='[Y1972]' />
              <value name='[Y1973]' />
              <value name='[Y1974]' />
              <value name='[Y1975]' />
              <value name='[Y1976]' />
              <value name='[Y1977]' />
              <value name='[Y1978]' />
              <value name='[Y1979]' />
              <value name='[Y1980]' />
              <value name='[Y1981]' />
              <value name='[Y1982]' />
              <value name='[Y1983]' />
              <value name='[Y1984]' />
              <value name='[Y1985]' />
              <value name='[Y1986]' />
              <value name='[Y1987]' />
              <value name='[Y1988]' />
              <value name='[Y1989]' />
              <value name='[Y1990]' />
              <value name='[Y1991]' />
              <value name='[Y1992]' />
              <value name='[Y1993]' />
              <value name='[Y1994]' />
              <value name='[Y1995]' />
              <value name='[Y1996]' />
              <value name='[Y1997]' />
              <value name='[Y1998]' />
              <value name='[Y1999]' />
              <value name='[Y2000]' />
              <value name='[Y2001]' />
              <value name='[Y2002]' />
              <value name='[Y2003]' />
              <value name='[Y2004]' />
              <value name='[Y2005]' />
              <value name='[Y2006]' />
              <value name='[Y2007]' />
              <value name='[Y2008]' />
              <value name='[Y2009]' />
              <value name='[Y2010]' />
              <value name='[Y2011]' />
              <value name='[Y2012]' />
              <value name='[Y2013]' />
            </tag>
            <groups>
              <group name='数据透视表字段值'>
                <field name='[FAO.csv].[Y1961]' />
                <field name='[FAO.csv].[Y1962]' />
                <field name='[FAO.csv].[Y1963]' />
                <field name='[FAO.csv].[Y1964]' />
                <field name='[FAO.csv].[Y1965]' />
                <field name='[FAO.csv].[Y1966]' />
                <field name='[FAO.csv].[Y1967]' />
                <field name='[FAO.csv].[Y1968]' />
                <field name='[FAO.csv].[Y1969]' />
                <field name='[FAO.csv].[Y1970]' />
                <field name='[FAO.csv].[Y1971]' />
                <field name='[FAO.csv].[Y1972]' />
                <field name='[FAO.csv].[Y1973]' />
                <field name='[FAO.csv].[Y1974]' />
                <field name='[FAO.csv].[Y1975]' />
                <field name='[FAO.csv].[Y1976]' />
                <field name='[FAO.csv].[Y1977]' />
                <field name='[FAO.csv].[Y1978]' />
                <field name='[FAO.csv].[Y1979]' />
                <field name='[FAO.csv].[Y1980]' />
                <field name='[FAO.csv].[Y1981]' />
                <field name='[FAO.csv].[Y1982]' />
                <field name='[FAO.csv].[Y1983]' />
                <field name='[FAO.csv].[Y1984]' />
                <field name='[FAO.csv].[Y1985]' />
                <field name='[FAO.csv].[Y1986]' />
                <field name='[FAO.csv].[Y1987]' />
                <field name='[FAO.csv].[Y1988]' />
                <field name='[FAO.csv].[Y1989]' />
                <field name='[FAO.csv].[Y1990]' />
                <field name='[FAO.csv].[Y1991]' />
                <field name='[FAO.csv].[Y1992]' />
                <field name='[FAO.csv].[Y1993]' />
                <field name='[FAO.csv].[Y1994]' />
                <field name='[FAO.csv].[Y1995]' />
                <field name='[FAO.csv].[Y1996]' />
                <field name='[FAO.csv].[Y1997]' />
                <field name='[FAO.csv].[Y1998]' />
                <field name='[FAO.csv].[Y1999]' />
                <field name='[FAO.csv].[Y2000]' />
                <field name='[FAO.csv].[Y2001]' />
                <field name='[FAO.csv].[Y2002]' />
                <field name='[FAO.csv].[Y2003]' />
                <field name='[FAO.csv].[Y2004]' />
                <field name='[FAO.csv].[Y2005]' />
                <field name='[FAO.csv].[Y2006]' />
                <field name='[FAO.csv].[Y2007]' />
                <field name='[FAO.csv].[Y2008]' />
                <field name='[FAO.csv].[Y2009]' />
                <field name='[FAO.csv].[Y2010]' />
                <field name='[FAO.csv].[Y2011]' />
                <field name='[FAO.csv].[Y2012]' />
                <field name='[FAO.csv].[Y2013]' />
              </group>
            </groups>
            <relation connection='textscan.0cbagav12h7cdy1d4j6ey1bx4577' name='FAO.csv' table='[FAO#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                <column datatype='string' name='Area Abbreviation' ordinal='0' />
                <column datatype='integer' name='Area Code' ordinal='1' />
                <column datatype='string' name='Area' ordinal='2' />
                <column datatype='integer' name='Item Code' ordinal='3' />
                <column datatype='string' name='Item' ordinal='4' />
                <column datatype='integer' name='Element Code' ordinal='5' />
                <column datatype='string' name='Element' ordinal='6' />
                <column datatype='string' name='Unit' ordinal='7' />
                <column datatype='real' name='latitude' ordinal='8' />
                <column datatype='real' name='longitude' ordinal='9' />
                <column datatype='integer' name='Y1961' ordinal='10' />
                <column datatype='integer' name='Y1962' ordinal='11' />
                <column datatype='integer' name='Y1963' ordinal='12' />
                <column datatype='integer' name='Y1964' ordinal='13' />
                <column datatype='integer' name='Y1965' ordinal='14' />
                <column datatype='integer' name='Y1966' ordinal='15' />
                <column datatype='integer' name='Y1967' ordinal='16' />
                <column datatype='integer' name='Y1968' ordinal='17' />
                <column datatype='integer' name='Y1969' ordinal='18' />
                <column datatype='integer' name='Y1970' ordinal='19' />
                <column datatype='integer' name='Y1971' ordinal='20' />
                <column datatype='integer' name='Y1972' ordinal='21' />
                <column datatype='integer' name='Y1973' ordinal='22' />
                <column datatype='integer' name='Y1974' ordinal='23' />
                <column datatype='integer' name='Y1975' ordinal='24' />
                <column datatype='integer' name='Y1976' ordinal='25' />
                <column datatype='integer' name='Y1977' ordinal='26' />
                <column datatype='integer' name='Y1978' ordinal='27' />
                <column datatype='integer' name='Y1979' ordinal='28' />
                <column datatype='integer' name='Y1980' ordinal='29' />
                <column datatype='integer' name='Y1981' ordinal='30' />
                <column datatype='integer' name='Y1982' ordinal='31' />
                <column datatype='integer' name='Y1983' ordinal='32' />
                <column datatype='integer' name='Y1984' ordinal='33' />
                <column datatype='integer' name='Y1985' ordinal='34' />
                <column datatype='integer' name='Y1986' ordinal='35' />
                <column datatype='integer' name='Y1987' ordinal='36' />
                <column datatype='integer' name='Y1988' ordinal='37' />
                <column datatype='integer' name='Y1989' ordinal='38' />
                <column datatype='integer' name='Y1990' ordinal='39' />
                <column datatype='integer' name='Y1991' ordinal='40' />
                <column datatype='integer' name='Y1992' ordinal='41' />
                <column datatype='integer' name='Y1993' ordinal='42' />
                <column datatype='integer' name='Y1994' ordinal='43' />
                <column datatype='integer' name='Y1995' ordinal='44' />
                <column datatype='integer' name='Y1996' ordinal='45' />
                <column datatype='integer' name='Y1997' ordinal='46' />
                <column datatype='integer' name='Y1998' ordinal='47' />
                <column datatype='integer' name='Y1999' ordinal='48' />
                <column datatype='integer' name='Y2000' ordinal='49' />
                <column datatype='integer' name='Y2001' ordinal='50' />
                <column datatype='integer' name='Y2002' ordinal='51' />
                <column datatype='integer' name='Y2003' ordinal='52' />
                <column datatype='integer' name='Y2004' ordinal='53' />
                <column datatype='integer' name='Y2005' ordinal='54' />
                <column datatype='integer' name='Y2006' ordinal='55' />
                <column datatype='integer' name='Y2007' ordinal='56' />
                <column datatype='integer' name='Y2008' ordinal='57' />
                <column datatype='integer' name='Y2009' ordinal='58' />
                <column datatype='integer' name='Y2010' ordinal='59' />
                <column datatype='integer' name='Y2011' ordinal='60' />
                <column datatype='integer' name='Y2012' ordinal='61' />
                <column datatype='integer' name='Y2013' ordinal='62' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.17ypuc609xqdst1amx3001vp16xe' name='FAO Area' table='[&apos;FAO Area$&apos;]' type='table'>
            <columns gridOrigin='A1:B175:no:A1:B175:0' header='yes' outcome='6'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Area (FAO Area)]' value='[FAO Area].[Area]' />
          <map key='[Area Abbreviation]' value='[FAO.csv].[Area Abbreviation]' />
          <map key='[Area Code]' value='[FAO.csv].[Area Code]' />
          <map key='[Area]' value='[FAO.csv].[Area]' />
          <map key='[Continent]' value='[FAO Area].[Continent]' />
          <map key='[Element Code]' value='[FAO.csv].[Element Code]' />
          <map key='[Element]' value='[FAO.csv].[Element]' />
          <map key='[Item Code]' value='[FAO.csv].[Item Code]' />
          <map key='[Item]' value='[FAO.csv].[Item]' />
          <map key='[Unit]' value='[FAO.csv].[Unit]' />
          <map key='[latitude]' value='[FAO.csv].[latitude]' />
          <map key='[longitude]' value='[FAO.csv].[longitude]' />
          <map key='[数据透视表字段值]' value='[数据透视表].[数据透视表字段值]' />
          <map key='[数据透视表字段名称]' value='[数据透视表].[数据透视表字段名称]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Abbreviation]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Abbreviation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Element Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Element]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段名称</remote-name>
            <remote-type>129</remote-type>
            <local-name>[数据透视表字段名称]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段名称</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段值</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数据透视表字段值]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段值</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (FAO Area)]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B175:no:A1:B175:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' value='Rank' />
        </aliases>
      </column>
      <column datatype='string' hidden='true' name='[Area (FAO Area)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
        </semantic-values>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Element Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Element]' role='dimension' type='nominal' />
      <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Item]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Alcoholic Beverages&quot;</value>
            <value>&quot;Beer&quot;</value>
            <value>&quot;Beverages, Alcoholic&quot;</value>
            <value>&quot;Beverages, Fermented&quot;</value>
            <value>&quot;Coffee and products&quot;</value>
            <value>&quot;Stimulants&quot;</value>
            <value>&quot;Tea (including mate)&quot;</value>
            <value>&quot;Wine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats and oil&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Butter, Ghee&quot;</value>
            <value>&quot;Coconut Oil&quot;</value>
            <value>&quot;Cottonseed Oil&quot;</value>
            <value>&quot;Cream&quot;</value>
            <value>&quot;Fats, Animals, Raw&quot;</value>
            <value>&quot;Fish, Body Oil&quot;</value>
            <value>&quot;Fish, Liver Oil&quot;</value>
            <value>&quot;Groundnut Oil&quot;</value>
            <value>&quot;Maize Germ Oil&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Oilcrops Oil, Other&quot;</value>
            <value>&quot;Oilcrops, Other&quot;</value>
            <value>&quot;Olive Oil&quot;</value>
            <value>&quot;Palm Oil&quot;</value>
            <value>&quot;Palmkernel Oil&quot;</value>
            <value>&quot;Rape and Mustard Oil&quot;</value>
            <value>&quot;Ricebran Oil&quot;</value>
            <value>&quot;Sesameseed Oil&quot;</value>
            <value>&quot;Soyabean Oil&quot;</value>
            <value>&quot;Sunflowerseed Oil&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
            <value>&quot;Aquatic Animals, Others&quot;</value>
            <value>&quot;Aquatic Products, Other&quot;</value>
            <value>&quot;Cephalopods&quot;</value>
            <value>&quot;Crustaceans&quot;</value>
            <value>&quot;Demersal Fish&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Freshwater Fish&quot;</value>
            <value>&quot;Marine Fish, Other&quot;</value>
            <value>&quot;Molluscs, Other&quot;</value>
            <value>&quot;Pelagic Fish&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruits&quot;'>
            <value>&quot;Apples and products&quot;</value>
            <value>&quot;Bananas&quot;</value>
            <value>&quot;Citrus, Other&quot;</value>
            <value>&quot;Coconuts - Incl Copra&quot;</value>
            <value>&quot;Dates&quot;</value>
            <value>&quot;Fruits - Excluding Wine&quot;</value>
            <value>&quot;Fruits, Other&quot;</value>
            <value>&quot;Grapefruit and products&quot;</value>
            <value>&quot;Grapes and products (excl wine)&quot;</value>
            <value>&quot;Lemons, Limes and products&quot;</value>
            <value>&quot;Olives (including preserved)&quot;</value>
            <value>&quot;Oranges, Mandarines&quot;</value>
            <value>&quot;Pineapples and products&quot;</value>
            <value>&quot;Plantains&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains, Roots&quot;'>
            <value>&quot;Barley and products&quot;</value>
            <value>&quot;Cassava and products&quot;</value>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Cereals, Other&quot;</value>
            <value>&quot;Maize and products&quot;</value>
            <value>&quot;Millet and products&quot;</value>
            <value>&quot;Oats&quot;</value>
            <value>&quot;Potatoes and products&quot;</value>
            <value>&quot;Rice (Milled Equivalent)&quot;</value>
            <value>&quot;Roots, Other&quot;</value>
            <value>&quot;Rye and products&quot;</value>
            <value>&quot;Sorghum and products&quot;</value>
            <value>&quot;Soyabeans&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sweet potatoes&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
            <value>&quot;Yams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bovine Meat&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Meat, Aquatic Mammals&quot;</value>
            <value>&quot;Meat, Other&quot;</value>
            <value>&quot;Mutton &amp; Goat Meat&quot;</value>
            <value>&quot;Pigmeat&quot;</value>
            <value>&quot;Poultry Meat&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Infant food&quot;</value>
            <value>&quot;Miscellaneous&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Offals, Edible&quot;</value>
            <value>&quot;Pulses&quot;</value>
            <value>&quot;Pulses, Other and products&quot;</value>
            <value>&quot;Spices&quot;</value>
            <value>&quot;Spices, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seed, nuts&quot;'>
            <value>&quot;Cloves&quot;</value>
            <value>&quot;Cocoa Beans and products&quot;</value>
            <value>&quot;Cottonseed&quot;</value>
            <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Palm kernels&quot;</value>
            <value>&quot;Rape and Mustardseed&quot;</value>
            <value>&quot;Sesame seed&quot;</value>
            <value>&quot;Sunflower seed&quot;</value>
            <value>&quot;Treenuts&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Suger&quot;'>
            <value>&quot;Sugar (Raw Equivalent)&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar beet&quot;</value>
            <value>&quot;Sugar cane&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
            <value>&quot;Sugar non-centrifugal&quot;</value>
            <value>&quot;Sweeteners, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vegetables&quot;'>
            <value>&quot;Aquatic Plants&quot;</value>
            <value>&quot;Beans&quot;</value>
            <value>&quot;Honey&quot;</value>
            <value>&quot;Onions&quot;</value>
            <value>&quot;Peas&quot;</value>
            <value>&quot;Pepper&quot;</value>
            <value>&quot;Pimento&quot;</value>
            <value>&quot;Tomatoes and products&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Vegetables, Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Unit]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
        <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
      </column>
      <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
      <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <group caption='工具提示(Area)' hidden='true' name='[Tooltip (Area)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
        </groupfilter>
      </group>
      <group caption='工具提示(Area,Item (组))' hidden='true' name='[Tooltip (Area,Item (组))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
          <groupfilter function='level-members' level='[Item (组)]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area, Area Code'>
          <field>[Area]</field>
          <field>[Area Code]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.487582' measure-ordering='alphabetic' measure-percentage='0.351634' parameter-percentage='0.160784' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bovine Meat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spices, Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vegetables, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groundnut Oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Offals, Edible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops Oil, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages, Alcoholic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poultry Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rape and Mustard Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rye and products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweeteners, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treenuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aquatic Plants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocoa Beans and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pimento&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter, Ghee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Potatoes and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apples and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barley and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottonseed Oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Infant food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mutton &amp; Goat Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pulses, Other and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sesameseed Oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demersal Fish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapes and products (excl wine)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelagic Fish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquatic Animals, Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts - Incl Copra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemons, Limes and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maize and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olives (including preserved)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pigmeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Fermented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fats, Animals, Raw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassava and products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges, Mandarines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rape and Mustardseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aquatic Products, Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rice (Milled Equivalent)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflowerseed Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Groundnuts (Shelled Eq)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize Germ Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat, Aquatic Mammals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tomatoes and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cereals, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapefruit and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Fish, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmkernel Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sugar (Raw Equivalent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fruits, Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soyabeans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coffee and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fish, Liver Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar non-centrifugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshwater Fish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soyabean Oil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tea (including mate)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cephalopods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ricebran Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roots, Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Citrus, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crustaceans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oilcrops, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sorghum and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coconut Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fish, Body Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pineapples and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molluscs, Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Oil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Item (组)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fats and oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains, Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fish, Aquatic Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seed, nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C�te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Element:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Feed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1992list'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1991' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
            </groupfilter>
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='1992' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='20%80%'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b' fontsize='11'>In </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>1961</run>
            <run bold='true' fontcolor='#1b1b1b' fontsize='11'>, </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>19.9%</run>
            <run bold='true' fontsize='11'> countries produced</run>
            <run bold='true' fontcolor='#787878' fontsize='11'>Æ </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>88.1%</run>
            <run bold='true' fontsize='11'> food and feed.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='11'>In </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>2013</run>
            <run bold='true' fontsize='11'>, </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>20.2%</run>
            <run bold='true' fontsize='11'> countries produced </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'>83.6%</run>
            <run bold='true' fontsize='11'> food and feed.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-format' id='refline0' value='p0.0%' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='80% gif'>
      <layout-options>
        <title>
          <formatted-text>
            <run>如果是gif，线就不平滑了</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='245'>
            <formatted-text>
              <run fontalignment='0'>In 2013, &lt;</run>
              <run fontalignment='0'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</run>
              <run fontalignment='0'>&gt; countries produced &lt;</run>
              <run fontalignment='0'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</run>
              <run fontalignment='0'>&gt; food and feed.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.20240963855421684'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.83642806520198421'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='133' y='184' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='CountryLine'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='100000' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='GroupTop5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>In 2013, China produced the most grains, root and vegetables. India produced the most milk.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Group:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Production:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;Sheet name=&quot;bar&quot; maxwidth=&quot;800&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='ItemTop5 '>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rank各国各item'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Top 10 Countries</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]&gt; - &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:7]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;</bucket>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Fish, Seafood&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='5' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='6' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='7' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='8' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='9' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' value='76' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' value='Group' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='level-members' level='[Item (组)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - bar]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area]' />
              <groupfilter function='level-members' level='[Item (组)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='feed 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='feed总量'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food-area,item group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food-item,area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food&lt;feed pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Food and feed percentage in Area(&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]&gt;) in &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>Globally</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>, most maize, sorghum and soybean were produced as </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>feed</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>However, most maize, sorghum and soybean in </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>India</run>
            <run bold='true' fontcolor='#666666' fontsize='12'> were produced as </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>food</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Maize and products&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Sorghum and products&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Soyabeans&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' value='false' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' value='Item for pie' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='foodfeed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>World </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>food</run>
            <run bold='true' fontsize='10'> production in 2013 is </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>3.7</run>
            <run bold='true' fontsize='10'> times as large as in 1961.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='10'>World </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>feed</run>
            <run bold='true' fontsize='10'> production in 2013 is </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='10'>2.9</run>
            <run bold='true' fontcolor='#f9a655' fontsize='10'>Æ </run>
            <run bold='true' fontsize='10'>times as large as in 1961.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1992' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</cols>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666' fontname='Tableau Light' fontsize='8'>Data of 19 countries (Russia, Ukraine, Belarus, Uzbekistan, etc) had been collected since 1992 (after the collapse of the Soviet Union).</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1958.3068783068784'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9738561.7894736845'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1991.4497354497355'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6807976.0657894732'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='foodfeed pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='level-members' level='[none:Item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='food肉蛋'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='gif area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</run>
            <run bold='true' fontsize='12'>&gt; Production in  &lt;</run>
            <run bold='true' fontsize='12'>Page Name</run>
            <run bold='true' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='33' lines='true' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='gif continent  food'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif continent feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-transparency' value='173' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='gif pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production in &lt;Page Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='10'>Feed percentages gradually reduced from 1961 to 2013.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='map点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Asia produced the most food and feed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Area:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]' field-type='quantitative' max='22632900.47249392' min='-18101244.776992112' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]' field-type='quantitative' max='11333290.785034472' min='-8836043.2705362774' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#ebebeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='milk'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Milk - Excluding Butter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;China, mainland&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]' symmetric='false' type='interpolated' />
            <encoding attr='color' center='0.0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='2013' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' num-steps='5' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' num-steps='5' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='ranks'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcdf:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;China, mainland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production Top 10 Countries</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#666666' fontsize='11'>Negeria, Mexico and Pakistan became the new members of Top 10 countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1729663756639514624]' derivation='User' name='[usr:Calculation_1729663756639514624:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' />
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' included-values='non-null' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' value='59' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.62569057941436768' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3] + [federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='中国玉米大多feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='member' level='[Item (组)]' member='&quot;Grains, Roots&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Maize and products&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='工作表 27'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' value='228' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='德国'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='13' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
            <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
            <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
          </semantic-values>
        </column>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Item]' new-bin='true'>
            <bin default-name='false' value='&quot;Beverages&quot;'>
              <value>&quot;Alcoholic Beverages&quot;</value>
              <value>&quot;Beer&quot;</value>
              <value>&quot;Beverages, Alcoholic&quot;</value>
              <value>&quot;Beverages, Fermented&quot;</value>
              <value>&quot;Coffee and products&quot;</value>
              <value>&quot;Stimulants&quot;</value>
              <value>&quot;Tea (including mate)&quot;</value>
              <value>&quot;Wine&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fats and oil&quot;'>
              <value>&quot;Animal fats&quot;</value>
              <value>&quot;Butter, Ghee&quot;</value>
              <value>&quot;Coconut Oil&quot;</value>
              <value>&quot;Cottonseed Oil&quot;</value>
              <value>&quot;Cream&quot;</value>
              <value>&quot;Fats, Animals, Raw&quot;</value>
              <value>&quot;Fish, Body Oil&quot;</value>
              <value>&quot;Fish, Liver Oil&quot;</value>
              <value>&quot;Groundnut Oil&quot;</value>
              <value>&quot;Maize Germ Oil&quot;</value>
              <value>&quot;Oilcrops&quot;</value>
              <value>&quot;Oilcrops Oil, Other&quot;</value>
              <value>&quot;Oilcrops, Other&quot;</value>
              <value>&quot;Olive Oil&quot;</value>
              <value>&quot;Palm Oil&quot;</value>
              <value>&quot;Palmkernel Oil&quot;</value>
              <value>&quot;Rape and Mustard Oil&quot;</value>
              <value>&quot;Ricebran Oil&quot;</value>
              <value>&quot;Sesameseed Oil&quot;</value>
              <value>&quot;Soyabean Oil&quot;</value>
              <value>&quot;Sunflowerseed Oil&quot;</value>
              <value>&quot;Vegetable Oils&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
              <value>&quot;Aquatic Animals, Others&quot;</value>
              <value>&quot;Aquatic Products, Other&quot;</value>
              <value>&quot;Cephalopods&quot;</value>
              <value>&quot;Crustaceans&quot;</value>
              <value>&quot;Demersal Fish&quot;</value>
              <value>&quot;Fish, Seafood&quot;</value>
              <value>&quot;Freshwater Fish&quot;</value>
              <value>&quot;Marine Fish, Other&quot;</value>
              <value>&quot;Molluscs, Other&quot;</value>
              <value>&quot;Pelagic Fish&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fruits&quot;'>
              <value>&quot;Apples and products&quot;</value>
              <value>&quot;Bananas&quot;</value>
              <value>&quot;Citrus, Other&quot;</value>
              <value>&quot;Coconuts - Incl Copra&quot;</value>
              <value>&quot;Dates&quot;</value>
              <value>&quot;Fruits - Excluding Wine&quot;</value>
              <value>&quot;Fruits, Other&quot;</value>
              <value>&quot;Grapefruit and products&quot;</value>
              <value>&quot;Grapes and products (excl wine)&quot;</value>
              <value>&quot;Lemons, Limes and products&quot;</value>
              <value>&quot;Olives (including preserved)&quot;</value>
              <value>&quot;Oranges, Mandarines&quot;</value>
              <value>&quot;Pineapples and products&quot;</value>
              <value>&quot;Plantains&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Grains, Roots&quot;'>
              <value>&quot;Barley and products&quot;</value>
              <value>&quot;Cassava and products&quot;</value>
              <value>&quot;Cereals - Excluding Beer&quot;</value>
              <value>&quot;Cereals, Other&quot;</value>
              <value>&quot;Maize and products&quot;</value>
              <value>&quot;Millet and products&quot;</value>
              <value>&quot;Oats&quot;</value>
              <value>&quot;Potatoes and products&quot;</value>
              <value>&quot;Rice (Milled Equivalent)&quot;</value>
              <value>&quot;Roots, Other&quot;</value>
              <value>&quot;Rye and products&quot;</value>
              <value>&quot;Sorghum and products&quot;</value>
              <value>&quot;Soyabeans&quot;</value>
              <value>&quot;Starchy Roots&quot;</value>
              <value>&quot;Sweet potatoes&quot;</value>
              <value>&quot;Wheat and products&quot;</value>
              <value>&quot;Yams&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Meat&quot;'>
              <value>&quot;Bovine Meat&quot;</value>
              <value>&quot;Meat&quot;</value>
              <value>&quot;Meat, Aquatic Mammals&quot;</value>
              <value>&quot;Meat, Other&quot;</value>
              <value>&quot;Mutton &amp; Goat Meat&quot;</value>
              <value>&quot;Pigmeat&quot;</value>
              <value>&quot;Poultry Meat&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;Infant food&quot;</value>
              <value>&quot;Miscellaneous&quot;</value>
              <value>&quot;Offals&quot;</value>
              <value>&quot;Offals, Edible&quot;</value>
              <value>&quot;Pulses&quot;</value>
              <value>&quot;Pulses, Other and products&quot;</value>
              <value>&quot;Spices&quot;</value>
              <value>&quot;Spices, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Seed, nuts&quot;'>
              <value>&quot;Cloves&quot;</value>
              <value>&quot;Cocoa Beans and products&quot;</value>
              <value>&quot;Cottonseed&quot;</value>
              <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
              <value>&quot;Nuts and products&quot;</value>
              <value>&quot;Palm kernels&quot;</value>
              <value>&quot;Rape and Mustardseed&quot;</value>
              <value>&quot;Sesame seed&quot;</value>
              <value>&quot;Sunflower seed&quot;</value>
              <value>&quot;Treenuts&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Suger&quot;'>
              <value>&quot;Sugar (Raw Equivalent)&quot;</value>
              <value>&quot;Sugar &amp; Sweeteners&quot;</value>
              <value>&quot;Sugar beet&quot;</value>
              <value>&quot;Sugar cane&quot;</value>
              <value>&quot;Sugar Crops&quot;</value>
              <value>&quot;Sugar non-centrifugal&quot;</value>
              <value>&quot;Sweeteners, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vegetables&quot;'>
              <value>&quot;Aquatic Plants&quot;</value>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Honey&quot;</value>
              <value>&quot;Onions&quot;</value>
              <value>&quot;Peas&quot;</value>
              <value>&quot;Pepper&quot;</value>
              <value>&quot;Pimento&quot;</value>
              <value>&quot;Tomatoes and products&quot;</value>
              <value>&quot;Vegetables&quot;</value>
              <value>&quot;Vegetables, Other&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
        <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
        <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
          <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='61' param='horz' type='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='59' param='horz' type='layout-flow' w='99032' x='484' y='684'>
              <zone h='98632' id='57' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                <zone h='98632' id='51' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                  <zone h='98632' id='49' type='layout-basic' w='99032' x='484' y='684'>
                    <zone h='94269' id='17' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                      <zone h='94269' id='11' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                        <zone h='94269' id='5' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                          <zone h='94269' id='3' type='layout-basic' w='99032' x='484' y='5047'>
                            <zone h='30110' id='1' name='20%80%' w='27132' x='484' y='34902'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='27143' id='9' name='foodfeed' w='27132' x='484' y='5047'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='27117' id='15' name='gif area' w='56845' x='27616' y='5047'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='30110' id='21' name='map点' w='37928' x='27616' y='34902'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='34304' id='26' name='GroupTop5' w='44614' x='33315' y='65012'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='34304' id='40' name='rank点' w='20313' x='484' y='65012'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='26775' id='29' name='GroupTop5' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' show-title='false' type='color' w='12518' x='20797' y='72541'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='29428' id='44' name='Rank各国各item' w='21587' x='77929' y='69888'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='30110' id='48' name='food&lt;feed pie' w='33972' x='65544' y='34902'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='2712' id='22' mode='dropdown' name='map点' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' w='27132' x='484' y='32190'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='2738' id='45' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='37928' x='27616' y='32164'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='4876' id='47' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' w='10687' x='88829' y='65012'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='4876' id='52' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' values='database' w='10900' x='77929' y='65012'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone forceUpdate='true' h='7529' id='53' type='text' w='12518' x='20797' y='65012'>
                              <formatted-text>
                                <run bold='true' fontsize='11'>France, Italy, United Kindowm and Poland were no longer the Top 10.</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='27117' id='55' name='gif pie' w='15055' x='84461' y='5047'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='2738' id='62' mode='dropdown' name='food&lt;feed pie' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' w='33972' x='65544' y='32164'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                    <zone forceUpdate='true' h='4363' id='43' type='text' w='99032' x='484' y='684'>
                      <formatted-text>
                        <run bold='true' fontalignment='1' fontsize='18'>Global Food and Feed Information</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4962' id='14' name='foodfeed' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' w='8464' x='19166' y='18135' />
        <zone h='11805' id='25' name='map点' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' w='8464' x='27993' y='49957' />
        <zone count='1' h='9410' id='20' name='gif area' name1='gif pie' synchronized='1' type='currpage' w='10157' x='69166' y='6159' />
      </zones>
    </dashboard>
    <dashboard name='仪表板 1'>
      <style />
      <size maxheight='1027' maxwidth='1569' minheight='1027' minwidth='1569' preset-index='15' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Item]' new-bin='true'>
            <bin default-name='false' value='&quot;Beverages&quot;'>
              <value>&quot;Alcoholic Beverages&quot;</value>
              <value>&quot;Beer&quot;</value>
              <value>&quot;Beverages, Alcoholic&quot;</value>
              <value>&quot;Beverages, Fermented&quot;</value>
              <value>&quot;Coffee and products&quot;</value>
              <value>&quot;Stimulants&quot;</value>
              <value>&quot;Tea (including mate)&quot;</value>
              <value>&quot;Wine&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fats and oil&quot;'>
              <value>&quot;Animal fats&quot;</value>
              <value>&quot;Butter, Ghee&quot;</value>
              <value>&quot;Coconut Oil&quot;</value>
              <value>&quot;Cottonseed Oil&quot;</value>
              <value>&quot;Cream&quot;</value>
              <value>&quot;Fats, Animals, Raw&quot;</value>
              <value>&quot;Fish, Body Oil&quot;</value>
              <value>&quot;Fish, Liver Oil&quot;</value>
              <value>&quot;Groundnut Oil&quot;</value>
              <value>&quot;Maize Germ Oil&quot;</value>
              <value>&quot;Oilcrops&quot;</value>
              <value>&quot;Oilcrops Oil, Other&quot;</value>
              <value>&quot;Oilcrops, Other&quot;</value>
              <value>&quot;Olive Oil&quot;</value>
              <value>&quot;Palm Oil&quot;</value>
              <value>&quot;Palmkernel Oil&quot;</value>
              <value>&quot;Rape and Mustard Oil&quot;</value>
              <value>&quot;Ricebran Oil&quot;</value>
              <value>&quot;Sesameseed Oil&quot;</value>
              <value>&quot;Soyabean Oil&quot;</value>
              <value>&quot;Sunflowerseed Oil&quot;</value>
              <value>&quot;Vegetable Oils&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
              <value>&quot;Aquatic Animals, Others&quot;</value>
              <value>&quot;Aquatic Products, Other&quot;</value>
              <value>&quot;Cephalopods&quot;</value>
              <value>&quot;Crustaceans&quot;</value>
              <value>&quot;Demersal Fish&quot;</value>
              <value>&quot;Fish, Seafood&quot;</value>
              <value>&quot;Freshwater Fish&quot;</value>
              <value>&quot;Marine Fish, Other&quot;</value>
              <value>&quot;Molluscs, Other&quot;</value>
              <value>&quot;Pelagic Fish&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fruits&quot;'>
              <value>&quot;Apples and products&quot;</value>
              <value>&quot;Bananas&quot;</value>
              <value>&quot;Citrus, Other&quot;</value>
              <value>&quot;Coconuts - Incl Copra&quot;</value>
              <value>&quot;Dates&quot;</value>
              <value>&quot;Fruits - Excluding Wine&quot;</value>
              <value>&quot;Fruits, Other&quot;</value>
              <value>&quot;Grapefruit and products&quot;</value>
              <value>&quot;Grapes and products (excl wine)&quot;</value>
              <value>&quot;Lemons, Limes and products&quot;</value>
              <value>&quot;Olives (including preserved)&quot;</value>
              <value>&quot;Oranges, Mandarines&quot;</value>
              <value>&quot;Pineapples and products&quot;</value>
              <value>&quot;Plantains&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Grains, Roots&quot;'>
              <value>&quot;Barley and products&quot;</value>
              <value>&quot;Cassava and products&quot;</value>
              <value>&quot;Cereals - Excluding Beer&quot;</value>
              <value>&quot;Cereals, Other&quot;</value>
              <value>&quot;Maize and products&quot;</value>
              <value>&quot;Millet and products&quot;</value>
              <value>&quot;Oats&quot;</value>
              <value>&quot;Potatoes and products&quot;</value>
              <value>&quot;Rice (Milled Equivalent)&quot;</value>
              <value>&quot;Roots, Other&quot;</value>
              <value>&quot;Rye and products&quot;</value>
              <value>&quot;Sorghum and products&quot;</value>
              <value>&quot;Soyabeans&quot;</value>
              <value>&quot;Starchy Roots&quot;</value>
              <value>&quot;Sweet potatoes&quot;</value>
              <value>&quot;Wheat and products&quot;</value>
              <value>&quot;Yams&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Meat&quot;'>
              <value>&quot;Bovine Meat&quot;</value>
              <value>&quot;Meat&quot;</value>
              <value>&quot;Meat, Aquatic Mammals&quot;</value>
              <value>&quot;Meat, Other&quot;</value>
              <value>&quot;Mutton &amp; Goat Meat&quot;</value>
              <value>&quot;Pigmeat&quot;</value>
              <value>&quot;Poultry Meat&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;Infant food&quot;</value>
              <value>&quot;Miscellaneous&quot;</value>
              <value>&quot;Offals&quot;</value>
              <value>&quot;Offals, Edible&quot;</value>
              <value>&quot;Pulses&quot;</value>
              <value>&quot;Pulses, Other and products&quot;</value>
              <value>&quot;Spices&quot;</value>
              <value>&quot;Spices, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Seed, nuts&quot;'>
              <value>&quot;Cloves&quot;</value>
              <value>&quot;Cocoa Beans and products&quot;</value>
              <value>&quot;Cottonseed&quot;</value>
              <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
              <value>&quot;Nuts and products&quot;</value>
              <value>&quot;Palm kernels&quot;</value>
              <value>&quot;Rape and Mustardseed&quot;</value>
              <value>&quot;Sesame seed&quot;</value>
              <value>&quot;Sunflower seed&quot;</value>
              <value>&quot;Treenuts&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Suger&quot;'>
              <value>&quot;Sugar (Raw Equivalent)&quot;</value>
              <value>&quot;Sugar &amp; Sweeteners&quot;</value>
              <value>&quot;Sugar beet&quot;</value>
              <value>&quot;Sugar cane&quot;</value>
              <value>&quot;Sugar Crops&quot;</value>
              <value>&quot;Sugar non-centrifugal&quot;</value>
              <value>&quot;Sweeteners, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vegetables&quot;'>
              <value>&quot;Aquatic Plants&quot;</value>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Honey&quot;</value>
              <value>&quot;Onions&quot;</value>
              <value>&quot;Peas&quot;</value>
              <value>&quot;Pepper&quot;</value>
              <value>&quot;Pimento&quot;</value>
              <value>&quot;Tomatoes and products&quot;</value>
              <value>&quot;Vegetables&quot;</value>
              <value>&quot;Vegetables, Other&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98442' id='5' param='horz' type='layout-flow' w='98980' x='510' y='779'>
            <zone h='98442' id='3' type='layout-basic' w='88782' x='510' y='779'>
              <zone h='49221' id='7' name='feed总量' w='88782' x='510' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49221' id='9' name='food肉蛋' w='88782' x='510' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98442' id='4' is-fixed='true' param='vert' type='layout-flow' w='10198' x='89292' y='779'>
              <zone h='8666' id='8' name='feed总量' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27167' id='10' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' w='10198' x='89292' y='9445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8666' id='11' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='36612'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='foodfeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='20%80%'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food&lt;feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' size='216' type='filter' values='cascading' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' size='193' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' size='90' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' size='41' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' size='101' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2013</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GroupTop5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rank各国各item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:11]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='milk'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:3]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ranks'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='20%80%'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GroupTop5'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Rank各国各item' />
        <viewpoint name='food&lt;feed pie' />
        <viewpoint name='foodfeed'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='gif area'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='gif pie'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map点'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='rank点'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='worksheet' name='feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-item,area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-area,item group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CountryLine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent  food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ItemTop5 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]' show-morefewerbutton='false' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='德国'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food肉蛋'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed总量'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='仪表板 1'>
      <viewpoints>
        <viewpoint name='feed总量' />
        <viewpoint name='food肉蛋' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='工作表 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='中国玉米大多feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='foodfeed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' size='193' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' size='90' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' size='41' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' size='101' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1992list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='80% gif'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1992list' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='20%80%' width='192'>
      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
      xp2a3/oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='80% gif' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CountryLine' width='192'>
      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
      /wfrRzqPg05n9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      2hUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GroupTop5' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ItemTop5 ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29SZNcWXqm99zZr89jeMwRCIw5kzWQVcViscShmlSbTFyIksykhUyb1kam
      hWSmbZt22mnXC230A2SSTGqpW91qE40UWV1ksaoykQOAxBRz+Ox+/c6jFgEgEIlMABFxPRCR
      uI9ZWsLD3Y8fH757znu+93xHSJIkISPjLUV80x3IyHiTZAGQ8VaTBUDGW00WABlvNVkAZLzV
      yABJkpAtBmW8jchP/2Hb9pvsx7eO3c6QzsSbSdtJkiAIwrG/LTZLzNeLZ2o3iiIkSTpTG99E
      HMeIYvoTjrP2WQYQBIFisUiSxHz++R3W2jWSShtdSIAYZzxBrFbRRYEkgV6vQ6lUQ9MUJEl6
      4ct4GZYxwvQT2s36qTv9PJNhl8HUp1WvUizkcP0IPae98nm2bZPP57GnBlKugKYc/xCn0yml
      UunU/Xr0ySb/7J/fPvXzT8p/+icf8Ber82dqIwxDZFl+9QNPSJIkxHE8k+A6a5+PPdMzuuxs
      71HIaZjDR5RzAqOBiRBHxHu7iIoGcUKlqDAZjAhFlZs3riGf4H0VyjWMg/1Td/irTEyPjbVF
      bv/mY8rVGggxg5FFs1Lgy50+f/T7v4s1HfDlvU1EVUNXYOjA2lyO+1+ayLJOsSDx5Vaf9fky
      qDqBZaEWK2cKgIzLwbEA8NH545/9lGGnS0nTsB2fYiGgWp9DzytMpyZuALWyRlyC4WjISZWD
      Meqz3+nTnptHFF9/5Pgm8qrIw809llY3SAILJ0pYX28y6fdpNaoMBgN0XWF1bRUEgeFoRLUk
      IYoCy+vrTAcGCSHtRpVqs4VIRMd20HO5M/ct4+IjnJcV4ukweL4khGE0k2H9Vdx9tMfnO8ZM
      2k7iGOEr8+l311vcXGmcqd1ZaoBZtX3Wdo8FgDsZ8uCgw9rqNYq6kkoHnxLHMY7jpNrmRcbs
      bpIzH5/4efLaj0B6+Wd/UX9ML+NCi+Cn+JaFH4bsbj7g4dY+H354CyFw+PiTO6xdu065mOPz
      Tz7j2jvvMJpMUQIDT8zjuy6/87u/iyJ985RGFEUKhcLhFGhgcP3qBinMgBgNR+RVCfQymnQo
      bkVRJPdsChNjGDaBazBxExbnGs/uc133uccdZ+vxY5bW1tjd3mZlZeVrhf5TIf11eMPPEf/q
      n574/eT/i79G0AsvfcysxOpbL4LlnIYiKWiaxsaVdSQilHyZlfUNKpUKrZLCYGkJ3/WwbIe1
      dhNZLzPsHhBGMcprvMFCoYhupbc8aBgGckFlt9sn8iMqRY29vQNycoKTaJTzMlq+QVGNSKKI
      Tz/5mPZck3tbHco5iXIxz97QpSR7XHv/+4w7m7ghjMcGS6vLTPv7HEgim7s9VEVG0yJGZkKj
      IJMv1YncLXJ5nd/cvs/P/uyPOP/JVsZZOPZ95etzvF+fe+FBjUbz2b8/+rCGY01pzrVp1isA
      LC28/vJb52APJxCBBDj7EKBrEls9g/b8HJIAQRjSbNQAgXpOx5oa6DkNiYQoipibaxIhMt9s
      UtRFEGTWC3UIJriuhyRJKLLGzRstIstAqc4T+xYbV9YRgKk7oVTWKBV0wsDHCWV8P2J5oU0E
      WQBcMs5VBEdRdB4vdSEwdj4j1/v1iZ+nfvAXIL88j5FpgCNSFcGzJI5jXNc9j5e6EFijAwrh
      6MU7JAXq187UdhYAR6QqgmeJKIrk83kmwx4HgynXr6Ujgg92txjbITevbxybUEWhz9Qw0Ip1
      dPX8PX/Rfof81r948Y5cFZY/PFPbmQg+IlURfB7k83ncnS5JShrAti08J+Hxw3uQwL3HHd65
      0sINVWQppK7X0M/e7YxvKeceAKY5RVGVtDQwuVwOLwwo11rgOyy2Y2wvpFyuIAjxS5dmMzKE
      5BDCMHzTfflWYfa2KPoHL94haTD/0ZnazjTAEalpgCwA0sWgxIFSZ6mivTgKnfGzjqJoJvs3
      ZtUuzDYAztLnZ3ZoXddJkphPbn/G+++9g+N6JEmMKsuEUYysqAS+hzsxKC3Oc+/2x6yuX0dT
      RYYjk3q1hKioqK+whlrGiKkbMz93Nt/KUyaTCZVK5dnt8WhALl8ip6mptH9ajK7Jr3o+f14v
      oevpzjQzEXxEqiLYGR/Q6/S4nysQ+S5SKY/sezieT05T2Hy8yVxzjcJCG0lW2bz/OU4iUtAq
      jLrbFFurrC22XvqChXINw07PDm07NsPeAV4iIYQ+cQylypTbt+/yB3/8J+SVbNdnxjdzLABi
      ucQf/tFPGPbHFIvzuFGE+iRq49BDEGUqpTqKKLG+fgVjNAA1T+hYyHIbrfj1vpjnMUZ9Or1h
      anZoPaej53RIYga9HkpeRxQSlleWSOJsm2fGyznXTHAQBOfxUheCg+EEI1JZr+dQU16JykTw
      EZcmEfZm9gO8OXSnQyM2kITvEKc8EsVxfKJtqG+63adtz6rds/T5XDPBuVwOY9RnrzfmxvVr
      qWSCB/0BBU2GfIXcEzv0U1F/SMxkYuE7BlMfFlr1Z/c5jvPc447z+NEjVtbX2X70iNUrVxBP
      aIe2h3cQD/4tuas/Ovub/AqZCD7i0mWC9XyeQsFPrT3TNFFihd1OnyiIqBRU9g+6qGKMh0Yp
      r5ArNChrEAU+n93+hFazzr2tDtW8QjGf42DsU5QcNt77PpPOJl4IE8NkZW2ZcXcXWRbZ2hs+
      sUOHTGyBui6hl2tEzuMndugH/KN//Meku40oY9acewD0u10cH9JKBRdyMjtDi/n5FiIQhhFz
      zRAEAVnTsacG+XwOIXZAEJlvt4gFiaX5eYo5AUFUWC9JiKFJFIZomoagaSwszBNZJo21m8iB
      wY1rGwCY7oRKVaVcyhMFAXbiE8UC6yuLJ94fnfHmOVc36Nskgqf798hHE6Tl76fediaCj7g0
      IvhtoxdVsYMq77/pjmS8lHMVwZqmMRn22O9PUhPBw94+YzukXqlQKedPXBjLnIyQ82VyXymM
      NR6PqVarp+7XZsfg9uaY795aOXUb30Qmgo+4dCI4n8/juenZoU0nfFYYa1gqkxAzmtjUizr3
      9wb87Kc/Ymr0uXfnEaKaI6ckjBxYa2ncHdoocp5CvndYGGuhgqBo+JaLXqmeKQAyLgdvxA6t
      5bTU7NAlXeHh5h6rV64RBw5eFNNoLWAOhywtzNHr9SkWc1y9frgLazweo+QlcnmJjfoi5sgE
      MWRlYY7WwpPCWEGXwjcsb2Z8u3hmh/a82RRyfdPMSny9ise7XexA4N31l3ujTkMmgo9ITQS/
      iR/JefCm3leCwN7AZG9gvvZzVuYqvLPWfOXjkiSZyfuaVbtPuYh9fmaHVlWVJIn59W8+4cP3
      38UwbfKajB8JGMaQcrGIlstjOS61cpHhaEyxWMB2PPKazO5Bn40ra698QcsYYTghC+10rozD
      7j5jJ6ReKVMpF04ugsdPRLCavgj+H//Pk1WH/nd/cI2Pri++8nGZCD4iVRFsD/eYjMZ8+XAH
      VXTZRUeJA3Jywq/v3WWuvcjUT/itm8t8+snHlBuLlHWFgZggCK/XibTt0Kb7nAguloiFmNHE
      oV7Qub8/4B/99EdMJz3u3X2MqGpocsLYFVhtqdwd2shSgUK+y/0nIhhVI7C8TAS/JRz71Qq5
      Gn/w099n7/EjXKlMOXJQKw3KBQ1ZVtGLZfKOj6TorK5foVpvoasStmXgRq8X3caoT7c/Ss0O
      Xcqrz0RwErp4UUxrbhFzOGJlcY5er0exqHPt+nUQDq/sWlEinxfZaCxjjaYgRqwsyczNNxGI
      6YYdioWXlyfM+HZwrpngNyG035QI3tzrsT04WTHghUaJq4u1Vz4uE8FHnEsmeDQaUasdfTGW
      bVHIn+wKKQjCGylT/qZoSWNWxY8BkG/9YwQtvcM2BEGYyQ91Vu3C7ILrrH0+9osc7u+w0+sh
      qgUUYgLfRcwV8VwPyzIJfZupFRH4FvVKmd2xx+997/WKPAmCgKIoGKM+u90RN29cTyUT3Ov1
      KGoyQqH2zA6dJAmFZ1OYiNHIwncmWKFIu1F9dp9lWc897jiPHjxgdWODx/fvc+XatRPboYXB
      PaK//u8ByF39fcRiOkdCwewuJrNq9+lKzawCIDURHEcRolpgYX4eXYzY3O1SLuSwZYXYd0mk
      HLmcR7OxAIJEPTl5vf9cTqdUCtPIgQFgWzZaorDT6RMGEZW8SqfbRyHEF3MUdQW92KSiy4S2
      wxeffUqjXuXLrQ61okZe1+hOAgqCyZX3fpdJ5zFeBNOpzeqVgMHBFrIssnMwQpEVVC3AdCWq
      ORG9VCNyp+h6jt/cfsCf/ns/y+zQl4xjAVBfXKEhis9+nO+UXz4fXTjFCw6HA2w3JiFBSCEM
      SnmV3bHNYruNKByVdxEEAVHJ4ZoTCoU8RBaiJLMwP0ciyqwuLz+zQ+fLAlJsI3I4ciiorCwv
      E9k2Vz74HbD7vHPzOiBguRPqsUy1XCQMAxwpIkbi6pXVzA59CcmK484Is/OI3PQBANLajxCU
      9KwVmQg+4tLYoZ8m294WpqHKA6PG93/ww9TbvowBcFH7fK4BIMsyk2GP3e6YWzfTEcF7W4+Y
      uDG3blx9YUL1dSL13hef0lxcp145PFT6qytcAAQ2VpJDCN1vFLmvonOwz1/+63/FD3/8+6d6
      /quY1YrarETwLFeYLp0dOvDTs0O7roPrJGxvbSMQsfXwIY12m6kv0a7KPLhzl+byFVwv4L33
      P8DzXIz+Ln/7t9vcvLaK5YZ89utfUCjPk2tUGT6+R6FYIK6s05QN+kaEkoT4Ycy73/9OVmn6
      W8YbsUPndD21VaDm/DK1wMeyLRwflpaXUfJFFD+iWFBYXrtCrlyjUiohC7C2cQNVjHEjmUJe
      QVAEqvkNVK1EfaGJEniUSgVMD4rlJq7Xp1BuUS3pfDvtgm83z+zQtm2/6b58qzjY32dqTLh+
      81bqbV/U+fTLuPAi+JuOC804JWqBDz66MpOmL2MAXNQ+P7NDS5JEEkf88le/4bu//RH7+13q
      rQYiMB0PkRWF/eGUhWaNyPco1ptor6gE/XVYxoixHbA0/+JplKehf7CL4cVUSyVq1eKJ7dDT
      0QC5UEFXj88Gh8Mh9frps7fdkc3V1dn8mJIkmcmPaZbtAheyz8e+dXOwh21Z3L7zkJIo8DgM
      UAMf1zYI0am1Goz6+0RSnvIpq5unXh3aj4/s0P0CsRAznrhU8xoPDob82R/+GGPc5e6dR1+x
      Qyv0Ri6KVCCvP7FDL1YRFBXf8inUamcKgIzLwfGDsotNfvKTJaypweP7W8zN1wj9Avl8jkK5
      znRq0FpaYzIcEMUJyikCzxj16Q0mqdmhK0WNh5t7rG/cII5c/ChmfiGPNR5zRc3R6XSpVIrc
      fOdwLj6ZTCggUirIVOdKOBOLRAi5sqYx324hEtM5OKBULJ65bxkXn3PLBEdRhOOc3Dt0Vp6u
      QZ833cGYucZsNtTMSlDO0jp+Uft8LACSJObuvS+5dfMm8PWJpFGnS6E9x9Oc7rjfYa87oL24
      SEnXMJ2YevVFh2WSJDM7fuciMp1OKZXSs0A/z0UVlG+i7VQzwb7ZZ+vRNoqiMRmOKM3ViS2D
      qeVSLpe4f+8eays3EYb7xHKF96+vY9getzaW+eXtL6g35jBGQ7YEgZ3eiKurC6gS7I0Dfvw7
      HyEKAsaoz05nyM2bN0ijbP72oztMXJnFdot6/fCoJNe2GZtT5ufaxx5rWQaynEfTZp/+EEXx
      rbuafhNP7dAXsc/HRoDJaIRe0Ol3R1QrRawoJCcd/liiwOGgO6RSrCFpCa4XouslCmrM5m6P
      paU2k4lJtVbFNaYMTIv5uRaaFLPXm7JxZQUB8Owp/YnN4nybNGYmrj1kYgoc7DxCLxb58u5d
      Vq/colBSsAf7WKGELIno+TKmY/LerQ8o5GdvWp7lCJBtij/irH0+tQZ4+rSTzq+7e9uMnYhr
      G2tfu8nkpAS+jRcIJHFE6Nt0ekPK5Qa5vIxjjImQqDXqeJZNZzji+tVrqKdR7yckC4AjvpUB
      cFKiKHqrss0v2y12Vi7bFGiWbZ+13XMtjlt8i5YWkySZ2fu9qILyTbR9qezQAJNhj7sPt/nu
      d7+TiggmDhhMHBq1cgqNpYcgCDNdfp1V27No9+lS9EXs87m7QWVZJqdphxoihQ8kSWKMwT5/
      +9d/ydr1m0ReAMGEUNAQBZhbvsZKOytwlfH1nHsAJElCvdlCSmM3DHCwf0C52uD6jRvEQLFW
      RRMKJKJCpVYDZi94My4v5yaC3zayVaAjLvIqULbHI+Ot5tIHwM7jB3z2xZfESUwcx0RR9Mx2
      0e8PiONDc5tl28Rx/OxqFIcud798zGQy5GBvDzeIDu+PD9s5/C96q+wbbyOXvlah73t4XszH
      f/9zQjGHrEhISUKp0cKcmOzv7qGXy9jmYwwHbt5Y5+4X91GkAE+sETgWez0T254ydULEJCDw
      HBzyCNYB9dV3ubWR/jlfGReDSx8Ac4urNAMf066QxAkH/RGrq8t0uj1ajRqWG9Csl4Ey9Acg
      qlRLOqX6MqpWRCLgRr7M1LIQ1IRWvYJnT7ECgdjNU6i8PbmLt5Fne4JN8/VPMsl4NbPMBF/U
      pNI3MUsRfNY+f2UVKCGOX//ImTAMEETpsAzhG/DcX2Ruf7nNrx4MX/j7732wwrWls+00y1aB
      jkj1hJgkjvj7X/6a733nQzY395hbnEfiMHsryyo7A4PV+QaeY1ObW+Dhnc8QRQmt0kIIPRr1
      CmPTYdI9oL20TITEfOv4l20ZI4amx8ri/Kk7/TzdvW3MAIp6jka9ihtEqLKEJInEMciyRJIk
      hzVDBeFJMS4R13VQVRVrMkYpVtBkCUE4rFWUJDGj8YRW89XndX0Tuz2D/+Wvvnjh78ut0pkD
      ICM9jgWA0dslDHw++fwhFUVma/8A2ffwPZNIKNBo1ZkMu8RSnqYoEEcRjUaTkTWlt7/PxFqg
      US1QbTSIPJuxG78QAGnvCXbDhCurS3xx+1OM8YAoiTDtiIIq87gz5E//8MdMJz3u39tEVDUk
      MWbiJKw0FUbTEAGNfL7Pw+0+64t1BEXGt0MK1Qrpn++YcdE4FgC52gI/+tEqnmOx/WiH+VaL
      OBAgctGLFWzTpLyygTkZEydw890PUGSJih9QKZWoVmpIkojvmPhRQqvw4tBkjPoMRtPU9gTX
      KwUeb++zunENIh8/jlnSdJzJBClfoNPpUK2WufFkT7BhTKggUS3INBYKuKYDhFyV87TnGogk
      dDsHlMsXy1uUMRsyO/SM6A7GTJz4hb+3awXKhVeXbXkZmQg+ImURnJEW9x7vc2P9NCcovJpM
      BB+Rqgg+D4xRn629Hu+88w5SCnno7Uf3mTgxt25skHB4yo0sywiCQL/fp1qtMej3KVXKqIqM
      rKhEgY9AyJ37+ywv1rBNl1qrhSSKiM+EMCRxiKRopzLuDSZvz2h3mTn3AFAUhUazlUppdIAg
      8PH8mNu//jtiSUdRZQgDio0WlmHT73RRiyXc/U1MT+LG9RXu3XmILPokSpPQtTkYmLiuieVG
      CElI4Nl4QgHB7lJevM47V1fT6WzGhePcA8AyTUwrIJlrpHJEUntpjVYYYNkWURTTHYxYX1un
      0+3Rblax3ODJZpkKYn9IIqhUSjql2jKqlkci5FahwtSykXIJzVoZ354yDQQSN0/xgm20yUiX
      TATPiOHYoF6dTfBkIviITARfULL9AEdcZBF87nboybDHJ7c/J0or7OKAXn+EbTuEYYDr+fie
      SxCEOI5DFL+4FJmR8ZRz1wC5XO7weKS09gTHEcaow69++YiF9euIYUASTPEiES2nUWutsJzt
      Cc74Bs49ABzHoVgqp7YK1Ol0abbmSQSZOEnQilVUCgiySqlSJtsTnPEyMjv0jMjs0EdcIhGc
      EAQhijL72pnfdn5zZ5Of3+298PebKw3+8DtnOzopE8FHpG6H/vWvP+a3f+s9Nh/vMbd0aIc2
      Rn0kWWF3MGWlXcezbRrzS+TUk7+wZYwYGC6ry+nYBA52NrEjEU0SabYa+GGEkICmKgRRTF7P
      EccRtu0giCKKJBIjEvguoiDi2hZKoYQsikhCQiJIJFHAZGox3z79MU4HQ5N/+Yv7L/zdD8Iz
      B0BGehz7BU+6O0RxwO07jygA2/v7CJ6PZ48R1CrVWpnpeECQKLROOYlP2w7tRbC2ssD9u/fw
      nClBHOOFApoAW70Rf/IHP8I0Bmw+3kdQFEgiDDtkqaFgeiKRL5DPj3m822dtqYEoi/hOQr6c
      bYV8GzgWAIXGEj9orxH4Lgc7B1QXWiSRgBAtoOoFXNehkG/jWOapy9EZoz6jiUl7LknFDt2q
      V9je7bCydoUk8gniBFXVcKYGSqFEp9OhVqtw9frhoR2GMaHakKkUZFqqjme6JIRIWoG5Vh2B
      hF6nQ7lcOXPfMi4+WSZ4RgxGBl70YoDrmkytdLbz5jMRfESqxXGn3T0e9gcsLlyhpMsEQUBe
      z7G1s8/K8iIAvusyNgyq1RphFFEuFQk9i7v3H5MvllAkBUGIqDdaJGGAkssRhiF6LjezzOhF
      ZLdncGtjcSZtZyL4iHRFcBiRiDL9zi6uItG3TcRYJUgiotAjiiI810OSpcMf/WafP/i97xF4
      LtX6HJ4zoT8cUyjk8JzH3Lt7j7nlNebayyzPHx7EbYz6PNo54P333k/FDr358EvGVsC779xA
      SBISIIljREmi3x/QaNTpdrqUKiX0XB5ZlgjDAGKfB5t92g2dieHSnJ9Hk0WiJ3ZqOCzpHsfx
      qT7g0dQ9+5vLmDnHvtni3AIfLsrEYYgkiZQmU4qFHKbto8kCsSgTBx6KqhGGId+vt5kaBo1G
      nTiZkGtt4DomOT2PALRabWRNR9PUZ6/hOTblWuOZ7/6sRGFAGEV8/A+/QMkV0fQcgW0TyQqy
      mGM6HiFoOn5nGy/Os7He5v79bTQlpFJfI44MbNdjd+sxcZyg6TnMYQdfKpFYPfTGMu/fvHrm
      fmZcTM7dDOfaJqYb0KhVU6kXH4YhQpIQhAFB4DM2XRbmmpimia5peFFMXtNIBHBtC71QwrVN
      ND2PIIgIT2wZQRgQRKBrCkkU4viHewM0PY96irzILz97xPfem81yZzYFOiI7IumCkmWCj7jI
      IvjcR4DAc7D9Q/Gcih0oSQjjGHlGR/uclswOfcRFHgHO3QznuQ4PHm7z0W99lM4RSUlA56CP
      53lUK0UMO6CgJIiqzmQ0pLWwQil/tioMGd9ezj0A4jgCSO2IpMloiD0d82hzi9bKVXJCjOGO
      cYKE5dU1pqaTBUDGN3LuUyDfc/GCmGIxn8oUyLZMtFwO23bwXBe9UEIkQpBkFFkGBKQ01ltP
      SDYFOuIiT4EyO/SMyETwEZdGBPvWhIe7HdbXr5JTZyMq4yjECyL0XDrTkq9eAWZ1FTspn2/3
      +XT46sH1B6slVmu5E7WdjQBHpCqC3YmBE7r0ux02d/ZZna/iCyreuEO+1sKYTGlUK+wNDMpK
      SHvtJtXiyb4813Hojw1Wl5dO3enn6fV7KCS4iYwY2kwtl3qzwdSwWLuyno7QPgVRnOAEr96P
      HMZZTYI3ybHJsSjLiEhMpxMiP0AulCnnFFw/wLIs5peWMEYGvu8hCgkT4+TTJkGAyWRCnKL0
      8CKQYhfDdBGTmPGgy917XzB1otReI+PbyRvIA7jYXnCYB0hhFSiKjn7kge8hSgqiCJ7no+fz
      b+zgjjs7fe6MX/247y6XWKmebDqYTYGOyDLBF5RMBB9xaUTweRAGHhPToV6rprIMGgU+46lN
      uVREUU5+JTg85kl+oQBuEARn2hv9b/7uDv/Tvz46IaZR1vkf/ss/PXV7z5ONAEdcwkywx6Db
      oVqppmKH3tnZodpscu/zT2ktLBJGIdOpTbtVZ2J5rC0v4LsWjzd3EBWNWknHT2TE2GFq2Eiy
      SqFUwPFCNCEglvOE9phIynFldfnU/QrCCMPynt1W3kAuIuPVnPu3Yox6JIr+5DyusyMICZbt
      UGvNE1hjpqZBsVxid3OHT+/cw/M8XM+hoOfRVZmt7V3u3X+Ia43JVytYhsOw1+GLz+8RCjJC
      ZDI1g+zQv7eEcx8BmvPLlMMoHSMcsLy6jueHaKoCSYsEEASBdqPO1TjGth2q1TrFJ0nZ1lwL
      BBFJFBAEkbl6E4hZv5qgPplC1eoesqJ+42u+Dvmcytr80b7i2gmXizPOh0wEz4hMBB+RieDn
      8GwTwwlpNtIRwaYxwg5grlF74b4o9EFUTnXCy1mZPvw7Srv/z+GN7/4TyDdSazsTwUdcOhEc
      hgG7OzvU69VUsrTdgwMmToQYewRhguNH5KUQLxSJY4/awgZV/Q3sFUgiCJ/uC86yvReVcxfB
      QRAQhiFpDjxJGGK6AYlv8vlndxhPpwgkBGGWCc54Oec+ApQqdT78oJbatGR14xpLMSiyBEnC
      zxbWIYkRRAlJOhS6bwRZh+KT8o/imzfnZXw9mR16RmQi+IhLI4K96ZiHex3W1q+S1w6vWvbE
      QKmUeVlONPJ9fEBXX710GIU+jh9RzJ+tOtpTHMvA8hKa9eOlDEPfR1RVRA4P5ssXj/Ygx2FI
      LIrI4uxGh+nDX1Da/ldHf9DK8IP/KpW2MxF8RKoi2JtOcSOPYfeAnz/c4trqHL4VkvR36Q9d
      rq0tIckqntFj3wgpyTFqvsB0OKZ99eprBYDvBYwnk9QCYHd7G63cZHdriFaooMoKvm+zvblH
      Y2WB1XabzQf3mF+9ztQcIxMhJTIdc0yzWkNTVNwwYXnh9JWgv5Ykhjg4uv38vzMuDMcCQFQU
      ZEHBtm1Kuo5WqlLOhQzcKXPNJsagy/yVW0yHHVRZoDG3gOeMQZRRXjO6o9Bj/6DL4vxCKsVx
      q9Uq250O1vAApdhAimKEnIYqy3iui2eOsPyInc0tFjaWufcPf4+slciXVPojAyl02Ru76QdA
      xqXgBHmAhOFwTL3+4nr7SYijiDCOUZ6c5n5W4ig6LIeYJIelDKMYUTosaSiK4m/5Z38AAA/7
      SURBVLPXSJIEQRCIoghRFImi+HCvcJIQQ+plVaZbH1Pq/eLoD0oBPvxPUmk7mwIdcS52aN/3
      UV9jevMyskxwemQi+IhURbA9GbHV6dOolgjCmKlp06iV2N7vs7G2TJJEDAdDJpMx7fYCfiKy
      fsKTXgLPpj+2mG+3UskET0Z93Eii3Xy9kWl/dwu91KBaPjwvII3g/jp+/v/9Nf/X//a/Prv9
      7//Ff8j3fvcHqbSdjQBHpCqC7emUwDXpWzp1NSZ0p+x0QyRJYnfrIV4UI0s65XKFKHB5uDM4
      eQCECY45IW61UrFD246PbdmosohIzHAwoFAsEiQSUuLj2g7FSpneYMK1a9fo97rMa3nuP+hS
      KebY7Y1o1wqIYg4nCpFCFyn26IQV5ktgGVNKlRqD0YQb79x47cRJkiTHdqtl55FfTI59n/lK
      jVsLy8hPxGlzfhnxcJr8BAGIEQ5LyrK0evLir8PONlagPLFDn30McMwxhhPj727jBjHupEe5
      2WZsRyzVVL68d4/q4gZLC238IKYxtwDumM/uPOL6xhKSKPHF7Y+p1Je58uE7fPJXf0mz3UQu
      VPHMARNHwDT3WVls4wLZwUnfLs7dDJfEMTEgCkIqIvhp9w//LwCHYvep6H36/697niAcD+7D
      2y95viC8dsh+/Ktf8W//5q+f3f6DP/wjbr33/mnf5jGyKdAR2Z7gC0omgo+4NCL4PLCnY0ZW
      wOJ8OiLYno4x3Jj5Vj2F1tJj8mCH/Pbo2W35d24gpFSjNBsBjrh0dmiAfrfLfLuVih16b2+P
      XLnB4/v3yJXrWMaIgq4TCiKuF3LtyurZXyTjW8u5WyU9z8X3vdRWRcrlMr1ej+nUZDzs8vkn
      n3LQH+IlAgU9/eXNjG8X5z4Fmg0x5tShWCq86Y48Y7K9T2HgPLstvbOCoJ2+zMrzZFOgI7Lq
      0BcUy7bRdR3hyepSmmQi+IhURbBrjHi432F17RrF3GzkQRh4WG5IJaWrted5aJp27Laqqqks
      sZ6F25s9ftWL+fP3GlT0dD/LbAQ4IlUR7JsmXuizt/mQB5t7rC+W8Sggxzb5QoHeNOJ3fuud
      M63ehGGEZRqpBcBwNITQx0sUxNDGdgKqjRqTscHG9esob2BDfMbl4ZgIljQVRVKRZYmNK2vI
      Wp5CTmZpZZV8oYQUB2fe3u27Nls7e8QplQUXEBBkjZwcY5gOAgnTcZ87d+9iudme4IyX8y0R
      wReP+3sDHpkiP1ovU0j5sJFsCnRElgm+oNiWSV7PzWRDfCaCj7h0mWDPMekOTZYX51NZHRn1
      O0y9hJWl+WPaJEkSAt9FkHMob+CYmOmDn1Pa/yv48X+betvZCHDEpcsEJ4hEvk2ckEomeDQa
      YjgxqhgQxSKG7VHNCTiBAIlPffHqmymMlXEpOPdMcG9vi6mXpFgdWiAOQoJEQghtHt5/TH80
      RBQE4iRJrQhvxreTTATPiOn2p5Smd+Dd/yD1trMp0BGZCL6gTE0TXc8jz+BgjEwEH3HpRLBl
      jBhMPVZSEsHj4YBSrcZoOKbZuDiW6H/5t5+RiCp/9oPrqbedjQBHXDoRLIoio8GApcV50vg4
      JsMOhmlxMBgjiSJR4LLfHVKrFvAjCSEwcfyIRnOObrdDs15DzhVpfaWSXMbbybmLYNd1CMMg
      NTt0rlhjPBwx16zR39/CsS12djbxkhyFnEK+VKPRqGGN+2xv7jC2Q5q17Mefcci3SATHdDp9
      2u2LUeHt7z59iKzqfOfGyapmvA7ZFOiIzA59QTGmJoKUjv//q2iK9Ow8szR5G0WwDIdr6aVS
      CWcy4OF+l9XVa5Tys/nyfM/GdiOqlVIq7Xn2lM7IZK5RQ9M04jg5LHn4Cp5+cL7rICraC6s1
      ruuSy53+YLu/ub3FP/vnt0/9/Jfx3/3nP+Wja2crUfl1vI0jwLFnBpaNH4Xsbj7g0fYBrYqE
      qDfRpJhb772XimgFCduepBYA+90BS8uL3Pn0UxqtNlESMpnYtJs1OmOL929exbUnPLi/hajl
      qBZz2KFIQQ4YjS1kRadY1hmOLUoaoBYIrAmCVmRj7fTnBGdcDo5d9uRcDkVS0PUcG1fWqDfb
      zLcaLK+upvTjB9eesr27n5odWhUTtnc7zC2sIEQenu/Tarfod7rsHXSYTqcEUUSz2aReLtLp
      9uh0e4SBQ31+nsgPMUZDDvY7KPkSOTnEtsPUi+VmXEy+RSL460iwLIdCYTb1eV7G33/2iP/3
      472ZtP0X/867XFnIpkCQZYIvLJYxRpdeb0OOIEoIevW1284ywUdcukywYxl0hyary4upZIIt
      y0KVRVB0FPHwiiAIwnMfSozj+ES+fViQq918dt/LPryD/T1a8wuMh0Pq9frX7jF+2dVn+A//
      M8pf/dPXeg9i7QqF/+z/eK3Hvup1z8LbOAKcfyZYUkginxhS0RX9Xp96QaXr9on8iIImsrt3
      QLtZx0tkpNhBUKvIsUks6fzmH37J8uoKnYGBb01YWFhgaHqoicvilVtM+7t4ERwc9GjNz9Pb
      foggwubmPooiU6vqGHaMio+cKyHFLoqms7PX57e/88H5ZxYzzsS5f1/dvS1ML3pSX/rsSIQ8
      2u+TUzSqpTwxIpVykdFogOdaON6hoC3kCxiGSbVaZjIeMxiMqVTLjMcjHNfDc00mhoXjOLh+
      zNWNNaLpAEvIMdrbotVsUa3U6QwHuK5HoVxDIsZ1XExjwqjXx0vlHWWcJ99yEfzmGN/7G7QH
      //trPVYotMj95L957bazKdARmQi+oNjTCV+bS1R0kM5+3NRFFJTfRCaCn8OcDOkbLmspieBB
      dx/DjVlfXTq+JziOcB0HScsfiuRzZvrg55S2/sWLd9z6c1j4zpnazkaAIy6dCJZlmcloRLy8
      mI4dejLGcBL2xZA4EegMpyzUcjiBhIhPbfEq6hupgZ1xGTj3S6Pj2MRJnJodWpIkhDgCJYdM
      iDE2GE4MFFkEUSQrDJfxMjIRPCOmu19QMr548Y6F70J17UxtZ1OgIzI79AVlODYI4sMBNqfK
      VIqnd5Z+lUwEH5GqHdoe9XnY6bG6cpVyYTaHS3i2ieXH1KvlVNpzzAndsUWrXkPXNcLo8BT6
      VxEEAYqi4Dk2oppD+Yod+qxnfD1vh/7JR2v81//RD0/d1lfJRoAjUhXBoeMQRCG7m/f5m50O
      7793HXybTz67z9rVq1SKOT795FOu3nyH8dREDSYEcgnbnPLD3/sx6mtUupIUDXfSh5QCoDsY
      s7y8yOe3b1NrtkiSmNHYYq5RYbc/4bsfvotjjbl/fwtJ1SjlFaa+SL2QMBhaKIpOsaSx3zNo
      lhRQ8gSWgaiX2Fg7fxNdxvly7LKn5HVUSaFUKrFxZZ2cIlKszXFlY4NGo8F8o8rK+jpJ4GFM
      LRpziywuzDPXrNPrdIlf4wVtc8Lufic9O7QEmzsHzC+toRARRhHzi/NMRmMs28aYGERJQrs9
      R7NeYWyY2JZJFAbMLS4iRAmWaeJYNrlSlbwGrh+91iiScfk5lQgOfBcvTCjm9Wd/m9X88Wwk
      OI6LruuvfmjK/PqLTf7miw4AN1Ya/Oz7V1NrO5sCHZFuJjhJ6PZ6VAs6iV5CezI+eLaNlM8/
      my9NTQNN1VHV1982+bZlgq1xj7yeQ9DS2fn2PJkIPiIVEfyUOLTZ2d5DaFeZjk2kOMQ2DFRR
      xEygVirgBQmqFCILKqbjsnHt2mtVX5YkiVKphGWM6YymXFldSSUTPJ1OyckSaHkUEXzfRxTF
      564KMbbtEXoWIytkab757L6XXT32dndpLy4y6PVotVpfa4f2fR9V/frFguDe/01ODlE/+o/P
      /ia/QjYCHJGqCB71hyg5iZHhIBZERCLCIELOaazOVzjoT4gjKJQVfMcnOsU8XtVyiExSs0MP
      B0PqBZVOt08URBR1md3dfeqVAm6soIkhUq6GhkOMwse/+gcWlxbZ6Y4QAodWq0lv4qKLHqvX
      38fo7uBG0O0OaC8uMNrfQhQFNrcPUGSZcklmbMYUlBgtX4HQRs3lefBolx/86PupbR3NOB+O
      BUBjYYXGwsrxRzyXs6nVWmd+wc7eNnYoPbFDn30IUMSYxwdDmu055Dz4QUCtUsLzPBRdxfdj
      yopMTsoxGprU6lUsyyb0I+bqFdwnh+qJoYMxtfH9gFBQuXZ1nWg6xBZ11P4+C+3D+j6DaQdV
      1anUKoS+hxOEBKFJEgQEpBPUGedHlgmeEeP7v6CYk5CXv5d629kU6IjMDn1BmUwtcrqONgMn
      aiaCj0hVBM+SpyJ4Oh7QG9tcWUtHBFuWRaFwdOSqNTVQcvmZVE47CY+HLoqscKuWfjItGwGO
      uHR2aFXTmBoHqYlgY2ow7B3gJzJC6OIHMdV6hfv3H/P9H/wQTc7soBnfzLnboW3LBIHU7NCK
      rKAXK1SKGn4QoSgKrj1FlAS88HVy0xlvM5kInhGbnSG5fJF2KX1TYTYFOiKzQ19QhsaE4DmR
      0ygUkcV0BtxMBB+Rrh162OVBt8/K8lWqRS21Tj6PZYyY2AGL8+nU8d9+9CWFap0okqk3Ki8c
      vXpWW/Np+aKzz7/ZfPDs9j/54U8o5Qsvecbrk40AR6Rrh3Y9wjhi9/E9fr7X5913roJv8cnn
      j1jf2KBa0vjk40M79GRqogQTIrXCdDzi937y09cSnIVyDcPeP3WHX3gDao79nccISRnD6jMe
      WfiTLrnKAkpOppRXeXz3C1bf/+FM6mlmXG6OBYBaKKBNLWrVMrJWpKCrKJUq168J1Fpz1IsK
      02vXEEKPkWHywdVVUHTMgk6v02Fxaf6VqtoY9ekNxrTn5hFT2LBbKFWQxIQozjE1OxiWy9XV
      NZRchXK9gmdOWFy7QkHL7M0ZL3IqERxFIVHMsbX2OI4RU5rjnpYoDIgRLoSX3zRN3CB4dluV
      pK811J2GWX3Ws2o3SRKSJLmQfc5WgWbELC8IWQAckQVARsYZePNzhW8pSeTz2Wefk8/XQPSo
      Npepl0+/GrW//QgzkBBDGx+VkpqQaGVWFs7m0N3dfIBerrOztYmeL2JNDQrlOrICy8trr7XX
      4+uwzQn7fQMhsFAKVaxRD1EtIgse5eYyzWrx9H3eesjUcnC9gHy+gG0aFOptZALW1tYRTzDV
      zKp5z4gkjijXW8ShS7c/JKedLSGmqhqj0QBR1dFVkW63Qy539q2e9UYTooBqq43nTJlvz2FO
      DaZOgHSGRYp8sUxeU9A0jUG/j16sIAkh3V7/zJ+FJCkszbdozC9im1OW5lsYkwmOHyOc0GKf
      TYFmRZLQPdijVGshiQlhmJDPn742kGsZ9CYOtYKCj0ohpxCG4TEj4GnY235MJOkohNRac/Q6
      HZrNJpAgKdoL5WJeF3MyZPdgQLNZJUJBjl2UfBVVFgijmEL+9MG79eg+SqEGgUOzPU/n4Emf
      kwhF008UuFkAZLzVZFOgjLeaLAAy3mqyAMh4q8kCIOOtJguAjLea/x/y3EAHw5vqVQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rank各国各item' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bar' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='feed 2013' width='192'>
      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
      /z8/JN6tJNZSoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='feed pie' width='164'>
      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
      2Iiqquzdu5f58+ejKHKEIjoR+R9SVZXt27cza9YsFEUhJSWFESNGsHv3boLBIA0NDWzfvp1p
      06bdcW1SUhJffPEFdXV1AHi9Xjo6OqiursbhcFBaWkpLSwulpaUkJiZSXl7O6NGjSUtLG+xq
      SvpARIS8dOkS7e3tTJkypbMQisLHH3/MiRMnsFgsjB07lpkzZzJ58uQ7rp02bRozZ84kPT0d
      k8nEuHHjOHr0KG63m8zMTFJSUkhMTGTr1q0sWLCA06dPM3XqVHJycrDZbCxevLjbsakk8kRE
      yB07dvDcc89htVoB8Pv9vPvuu8yePZubN29y6dIlysrKbnsiMYSiKCxdupTGxkY0TcPj8fD0
      00/zyCOPYLVaKSwsxO/3c/z4cc6fP09GRgZ79uxh7ty5eL1e/H4/LpdrsKss6SWDLmR1dXWX
      RCEqKytpb29n7ty5XWPI1157jYMHD94zv9bWVn744QfGjBlz2/t1dXWcPXuWrKwsrl+/TkZG
      BrGxsWRnZ9PQ0BD2eknCw6ALuW/fPubMmXPbsy6pqalUV1dz5MgRgsEgN27cYPfu3YwYMeKO
      69va2jh37hwdHR34fD5Wr17NsGHDmDBhQtfvqKpKcXExs2fPxmq1kpCQQEVFBe3t7Rw6dIik
      pKRBqaukDwzmE2Uej0d74YUXtMbGxjvSzpw5oz322GOaoijaAw88oL355pua1+vVNE3TnE6n
      lpeXp2mapvl8Pu3VV1/VbDabZrPZtHnz5mlNTU235XXixAmtqKhICwaDmqZpWlNTk5adna1Z
      rVatoKBAa29vH+CaSvqK3KArEQq5MCcRCimkRCikkBKhkEJKhEIKKREKKaREKKSQEqGQQkqE
      QgopEQoppEQopJASoZBCSoRCCikRiv8HWBpQYcabdYsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='feed总量' width='192'>
      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
      I83/B1miPUaLE0LqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='food-area,item group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='food-item,area' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aYwl2ZWY98Ueb99f7pmVtXX13mw2yeaQwxkuGs7QHs8MIHisDYYXDWDD
      /mH4hwEZFggY3mTYMGD/MCDDkkZeIVHyyLY4ojUjUcNlOOy9uqu6qrsqK5fK5eXbt3ix+8fL
      iniRmZWZ1f2qu5oZH9CojpMR8SJu3HPvOeeee6/g+75PTMw5Rfy0HyAm5tMkVoCYc02sADG/
      GFgD7m3uMDCsR7pMfkyPExPzyWL1eO2nP8LLzZG3dpFTRUbDEZ6e4V/+1i8/9LJYAWJ+MRBl
      5pZXGTketiWTSydIJzK0TfvEy4Q4ChRznpmaD+C67rRuFRPziXEmBfB9j3a7g+e5dLo9XNui
      NxjiOA62fXIXExPzJHMmE6hb3+bO+g6ynkRTJWwHJAEUBSQlxcrSPK7rIopxUCnms8WZamwq
      V0KXBQQEBFEAQBAEfN/H82IXIuazy5l6AM916HT75HIZur0BmaTGwHRJ6iqe56GoKp7rIknS
      J/HMMTFTY2pRIDdWgJjPIFMdBzAtB8sJo0FJTUGSYr8g5sllqgrwv/7T6/zBj24Fx//F732T
      Zy5UpvkTMTFTJW6eY841sQLEnGtiBYg518QKEHOuiRUg5lwTK0DMuSZWgJhzTawAMeeaWAFi
      zjVnGgl27RF31zaZnZtht9ZgppSj2RtRKeawHZt8Lv+4nzMm5rFwJgUwjQH9XpcNx6c6k2V9
      u0kxpbJ29zaZ0iLZjIfnjf+bxHVdHMd5LA8eEzMNzqQAvu8jyRKqKnH//j65TIrmwKBanWNk
      jhBEEdH3j0yIkSQJWY7n3cc8uZypdqZyZV54sfy4nyUm5hMndoJjzjWxAsSca2IFiDnXxAoQ
      c66JFSDmXBMrQMy5JlaAmHNNrAAx55pYAWLONbECxJxrYgWIOdfEChBzrjlTMpxl9LiztkGx
      UqXd6jJbztHomVRLOWzbplAoPO7njIl5LJxJAdREhmI+hzkwKJXTbOy2KaVV7q3dJltaIpeL
      5wPEfDY5W7K+7+GLCoUs3L2/Tz6TpjkYMTO7yGhkxvMBYj6znK12CiKzszMAvFiceZzPExPz
      iTLV5vmqvMm39NeC47z4RSBeHTrmyWWqCvCK9j4vZv4wOE5If2Gat4+JmTpxGDTmXBMrQMy5
      JlaAmHNNrAAx55pYAWLONbECxJxrYgWIOdfEChBzrokVIOZcEytAzLnmTKkQzmjArTubzFTy
      3N+rU8hl6A4tZssFTNNiYWH+cT9nTMxj4UwK0O93cB2Lnb02S0tVtre7lNI6O9sbZEuLwVwA
      3/cj13muF88HiHmiOZMCZPNlEo0uxUqFvb0WCzPjHWIurF7BsqxgPoAgCJHrREmM5wPEPNGc
      qXaKssqVp64BUCqWACiUHt9DxcR8UsROcMy5JlaAmHNNrAAx55pYAWLONbECxJxrHnuMsjc0
      6Q2t4LiYTaCrcWg05slgqjVRkFUENRkeCxL/z09u83/88XuB7K//61/j80/FI8cxTwZTVQBt
      5hraM78eCpIFoDvNn4iJmSqxDxBzrokVIOZcEytAzLnmWAWwrRHNZgvX84/7c0zMLwzHOsE3
      33qNnpfg5VdeIiFKuEaXdz7YZKFaYLvWpJBNj+cDVPKYps3i4sIn/dwxMVPhWAUol4u88ePr
      vPz5lwDwEFEFh/1mn8XFCju7PUppnb3dLTLFcD5AvevQ3rOD+yyMHLxDcwRcL54jEPPkcKwC
      NBsd5sp5BpZLQpFAFFHUBDOzVfZqTZbn8jR6JhdWr2LbdjAf4PVNmx/9bBjc5/e+COKhOQKS
      GM8RiHlyOKYm2khKAl80SKoSAIqW5OpTVwHI5fLjf+NdkWJ+ATjGCZYwRiZzlQKW437yTxQT
      8wlyjAL4dFotkCSkQ+ZLTMwvGseYQBLPPH+V99d2USTpkW6WnF2l+GyY+CYns8Dw4RfExHzK
      HOuNDrpt3nnrbZ57+RV0RT3zzVLzl6hIc8GxksoBux/7IWNiHhdHFMAa9uiO4Etf+hIp7dF6
      gGeFH3BJ/KfBcUb4Dz/+E8bEPEaOKICsJXCNPq3ukL7poMtnVwIRB1kIxwEE4pHkmCebI06w
      KMmsXFhiYHlkNOXTeKaYmE+MhwyEtUjrKkPbQZPP7gPccua5bbwQHH/dSwGjj/2QMTGPi2MV
      QBB8KgtLpB5x6mJLHbCRrgfHI8k+4eyYmE+fIyaQ1W9xe20DUVKPpDHExPyicUQB2nu7CLrG
      e29cx3K9T+OZYmI+MY7YONVLT/OdS08fOdGyTGRZZmiYJDQF03bRVAXf9+PktpjPLGequb7n
      8N5br5MrL2DaBr4nAj4JXQJR58LyAr7v83njKZ5pZ4Pr8nYe/9CkeN/38by4Z4l5MjiTAvRa
      +wxNG3FgkE4rGIaLJks4to2kJYLzEp6G7mWCY9EXeUn9gET6+4FsQbqG789O8RViYj46Z9sf
      oDTHl75cBgQ63T4rCzr9kUMqoY1bc0EY7w0gRIe+BEHkkrLDUuL1QJaQu0iPmGMUE/O4OLPx
      LsvjQbFScTwfIH/24YGYmCeWqXqvIrcR/DeCY4F/dZq3j4mZOtNdGhEDgdaEJJ77G/NkE68L
      FHOuiRUg5lwzVRPob+6n+Ye3q8Hx37imcGWaPxATM2UewxBunD8U89khNoFizjVT7QF+5846
      v/rDnwbHi7/yrWnePiZm6kxVASTfR5vI84mnRMY86cQmUMy5Zqo9wJ28xM3FMEfi25pIbpo/
      EBMzZc6kAI49Ym1tk7n5WfZqTWbKWRpdk0oxi+3Y5LLjau4KArYURoHipOeYJ50zKYAkyfj2
      iM3NXUrlNGtbDQophbt3bpEpLpBJj5dHV1I5UtWliQtlPO/o8ujEy6PHPCGcSQHskYHjeciq
      yPZOnWwqSbM/olqZZWSOguXRU5UFipdfDK7TUllEMV4ePebJ5Uw1UU1meOb5F0897559j58M
      fxIcX/U+R/KE82NiPm2m2hTvu3U+sO8Ex4YXrwkU82QzVQVY1GVezoVRoLQcp0XEPNlMVQFe
      zWu8vBxOik9qMr6eRc7NBzJB1qf5kzExH4vH7o0q+QWU1VdDQTL/uH8yJubMTFUBeq3naa2l
      guOlpRIym9P8iZiYqTJVBXDtJM6oFBz7XhzujHmymWoNnbV3mR29Gwq81WnePiZm6ky3iVYc
      0CdCn2KcDBHzZDNdBcj2YW4/PFZtGEz1F2JipspUFWBoyBjtMMyZdUSub9q8+ZN+IPu1JZel
      0nFXx8R88kxVAe5u5rnz2mJw/NXPqbgzz2A+H44NeJl4XdCYJ4epKsBtRP7ID2/5LAIzmR4v
      LtwPZFn9wjR/MibmY3EmBXBtk7W1dSqzM+zVmsyWszR6JtViDtu2yefHg1vDhEsrH26U7cg+
      i8IH5MU/DGQJngLmDv9ETMynwpkUQJQUsukEe7t1CqUU69stiimVtbu3yZQWyWbH8wEWru7z
      +dLd4LpkdsAHrSo3JjbO+4qTYjaeDxDzhHAmBRj1m2zsNpmvFrl/v04+k6I5GDEzM89oFM4H
      +OpOgVffC/N+1JkEDdVjkDAjvxjPB4h5UjhTTUxky7zychmA+cWlh5739/c1vv9h6PD+xyOJ
      F7zLPNcJZZJT+ajPGhMzdabaFC9lZb44F6ZDZxQR0byJ6P/JxFm/C2SOXBsT82kwVQW4p73G
      T9L/KDj+lvQMWc9lYIeOcd7zePf2Dn/y9nog+86rV7gaDw7EfApMVQGed9qo5kZwXPJNXtv0
      +eFPw4nxf3EVNvc6/LM37wWyzz81HytAzKfCVBXAthYZDV8Ojj03zUv7d7h484NAVukPeI+j
      k2I+uHmdP/0Xfxwcv/q1b3Ll6eem+XgxMUeY7hZJRhalFcb4BUdloIrsJcMF6LIP2R9PcQZk
      jK3gWHXjJKKYx890TaBigacvrATHqq5x++IyW9/65UC2VC5CZ3jk2lrf48/WQ19hoe+xcuSs
      mJjpMlUF+HE2yevzxeD4d1WZ99wP+AdOuE/wqvcKkDrm6piYT57pTorf/T6ff+/3g+PEs3+H
      GU3i+YwSyDLy8evxCoKIICuR45iYx81UFeDdpcvckH41OP52Os8XRI0XL4RL5CYSMtePuTZ3
      6QWu/m44gyy7kqXZNVjbCXedXKxmmSmkp/nIMeecqSpAZyhxvxm24pYjMGhfo3kvXB9ofq4K
      ka1UH867azX+m/8z3HDj3/zO5/itrz41teeNiZnunGB/geeczwXHST+FN2hj10IF8K3jroyJ
      +XSYqgIUhzZu0wiOdcfjZmfE6+vtQPYbRpwJGvPkcOb5AHc3tpkrpbm7WaOYz9AZWMxWCpim
      xfz8OPbf8X7MfS90ghf9L6Bd6ZPVw9FhuWpAbcpvERPzETnb/gCKRjqpM+ibLC5V2N7uUkpr
      bN9fJ1tawvPG8wEcYxG388XgOtdKsrmm8bMfPR3Inq8k8bx25P6e5+J53iGZx5cSt/m7K/9j
      IFPT/w6Oc+kjvWhMzHGcbYcYy6C+v8/s3Cx7ux3mqllaPYuVC5exLCuYD6DM5VGeDecDyJkE
      2dwPmZ2fCI0mFvnNhS6//sV/EcjUyhXuijOR3xRFkduDIn/vdrgs+69fm+G54YD1u+Gkm+rs
      LDOz8QyzmI/GmRRAVhM8/8J4VlelMt4JvlQ+ep7RlOishenQzksCM84ML4zCSpzxMphYdCkE
      soKvsCy8QVn83wJZSvhLNCsFvvK1UKHmF1Psbm3xvf/lbweyr3/7N5ASOX58PTSzLi8UeXY1
      3LE+JuZhTNUJVuwsiVHYGoueSr24yvtXvhHInk6V6Gzf5529MBT6JdPGUEv8mf1SKPNKqAmX
      7rwdyKyUR7mQ4pu/czWQLS+X2G32+Z//8VuB7Le/ei1WgJgzMVUF2E4MeCvfCI5flB2u1n5K
      aSM0garX/nOcqsznP68FskJBxO3IZLYTgUyZkcilsjxrfT6QlbwqA8nnAz1UiozsIseBpZiP
      yHR7AHeLhP16cCz6/wp39ed4LfcXAtl3lHl2TYc/7vxaIPstexZv/x73fh5ee2nxCmVNIt3f
      Ce9vLbGgLfNXet8Mf8OscnOaLxFzrpiqAsxZs7zQfzY4TrlJckad5VbYKyRsi+P2506Wcsy+
      eC08r5Tj5wOHv3EvHFf4q3MOv52uIfv/d3ih/zWupmf5m5/7cXivRR0IzamYmIcx3R4gZaKX
      e8GxqLgI7m0Ee6LCel8Djq4OV7QlXuipkWPdN/j3e+H+AtfsPmvtBH/wszCd+suqzeevSSjJ
      MN9IVOJdaGLOxlQVwFSeYpAI7XhXLKALT5EXfyuQKcIM+EevdSwYtMOUCceEbL7C1ZWvBbJC
      ZgErqXBtNcwHKudL7JDm73phCsar/gJX9jr8p78fhlq/9uIKv/lLV/n9P3w7kF1dLvGNz61G
      IkilXJIXLkVDsjG/uExVAQo77+K9G05r1F5dZduHDSes8Rd8kEQTVQ4HwyTBoiGluJ4Il1zJ
      yCmuukPSw7By4izS8DMkJwbSFH8EooSYDDdkFRQFx/WotcJZZb2hiWHa/NEba4HMdl1efWaR
      /+7v/yyQfeHaPM9frNLqhcu8y5JINqXR7IbmmCQJ5FJxT/NZZ7pRIG2e99NhzL8ipnBFB1sJ
      K5MvuJSbFs/fDE2l3IKDoI24mg+nRObUZfY9nVtOOF6w6mksaBa/MjuxBHtqwISKTAXLdvk3
      /ss/CI6fW63wn/3Vb/Jv/Vf/CM8fK/Ol+QL/7b/3bX763haOOx7FTmgyrzw1T3dgBueJgkA2
      pR39kZgngqkqQCoxpDwRBlVkG0/XsXPhxnierGBqNVr50La31CE7ns3/lQplf14eULQ63DD+
      WSDLOWVK1gWae+GMskxFhYIPQhgaRXA/1nvIos/vXQujT6WZh0xkBv777/2MwWj823OlNK88
      Nc9/8D/8E+oH0z7zaZ2/89d+m4FhBUoBkEnGSvEk8JEUwPNcHNdDliR830eSxhWkUsijrywH
      5yV0jbIh8HQzjPqkbQGsNDPdcIRXtxMs2QN+ox6aNoumhZAucmElXFc0my1jjEQ2JsYLFlcU
      cnaPrzbDEOpCWYdkeP+TULH4Ov88OL7I8wi8ygU5zNhLSWOF+8vpHwQ5S4XkBeDbx95TliVk
      eVwmijL+97v/0w/Y2u8AoCkyf/s/+V2+/wffo17bDa77y//2v8v7G3U6/XApyVeuzSNL8ey4
      x8VHUoD7G/doDyxyaR0XmdWVse1uuh5dKxyVKns+/aHNTiO0nVdtl0SpTemZcEd5Lftldls6
      byphfkVZ0MkaLRo74QivceEKYknlxmLYU2i5p0kJq9jy84HME2dJCibPyuFvzIs5BHw0wgkJ
      Ci6qCt/5RpiIl674uEj8wP1yIFv0SlwAiheehgMFSBcf7ijPLntog/F52cS41f+vv7gGwwPT
      TRxPGrpsfMj8YG3iSp/v/dFbvPNh2Pv8rb/+r/H2jT9ldz9852/80u/wD390h5/fDJed/4/+
      0ldZ22lx8149kP3mV65iWTY7jW4gu7pcJRv7LgEfSQF8RFKaxnA4QEsVg6DOzbbEa1thKPMv
      WiJLMzqF50MTqJBReHdX54fvhbb9vzSn4qh5Btmw0jlqFdHdQhHDyJCEgG1Bqxa2iKO+gF9s
      M2qHppJjSCSTFb7whVAZL6y4FNQhf+2lH4TPsvxlfF6mpYRRJV9aYEb0+aVnwt4okxmbK83V
      5/APzBg3FYZdD6NodVSnd/D/Y+f8h4lv02PsC0miyG8A3DXgTrh7Dj78uaff4nOV9wKRKv15
      rNt7jG6FCYD+Kw7qYJ1EK5xcKrqvcOPuDt//6a1A9ssvLNHf2+bG2zcC2UL2V9nfbnL75juB
      7OUvfJX1fYP/94dvBLLf+daXWMyLrL0X9qzLT71IZWE18HnG7yIgfYZ7qI+kAHNzM3QGNtn0
      Iq4b2tsJvUYu835wLElfprPf4/6N7UCmPzciofhUwqANmgRL7h3mzP89kOXcv0JbXCGphCPG
      srSCLiZY0Z8Jz5MrjDyNtWEYQcrbOYqez/owNCWylsNAkPjHatjLPCtnKbsCf3wvNKkuOxqX
      r3kY74Tvoc2acBXuvPsjPH/88WfL8/DCLyEJHhLjMpAY/+3PGWuYxjjXSWW8MHD1zetkG2OZ
      qMjwheewX7mKtTqxTqogsCItUpVCf0ZCpIHIFqEf4gK//HyXF+dCMy2fdvjK7F2WnvlRIKsm
      vopu3+KqEa7KkfSeR5D7VPWw99Akgxn1Pq/m/nkgq6grNL0rvGkvT1ybxt9f4803w/0erl59
      lUx+kZ+8Fa7/enXlGrn0LH/re2FE8JXnL/ONL11jazPcRTSTKZErrPD+vdAMzKV1FqsFrt8N
      ZZmkxsX5Iu/eCWVJXeHSYpl37+4EvpWuyFxdruL0PgB/3PgJSg5Rn8P1Qv9LEMbBCXwQfN8/
      Jir/aHieh+u6dNotup0Ovj/+kersHI5s0bU6jIP/AkWtzHAoUGv1g/PmyxkUz6TXqPFAmC1V
      EWWXYWcdHx8BgURmAYQkndpOcF46X0JLprEH4e/KehJflGjtbAbnJTI5Epkcze2NQKanMmSL
      VegbwbUoMugKwn7t4IkBVcXPF9gZbuIfSFVRpazP4O1eB++gp1F0xMrTjFpD/INWUhAF9GIK
      z9gEzxq/iyAiJi9yr9nEsC1830cQBK5VZ8DawXeNQCYkVunVa4yG/eC5SwsX2BsO6BjheRdL
      ZbqjBi2jFZy3lF9BcX2c0TB4PyWVxXcE7IEZvJ+a1RmJIzpWK/hOebVI0tfAsMKy0VUQLASj
      Efwueh4fDaHdCssrlcbTJXzzfvgecg5HKlDr94LvmVRV8qqMX7sRnqfn8XPLbG2sB7+rJxJU
      Z2YQulvh70oqfmoGb3gX3/cQGMtEfQl6B+UCoMrYssSd7VZwv0xSY6GUhp4xHQV4oASiKJ5J
      JgjC+CVOkPm+j+/7kevPKnvU5zlvsrOWP/CRvsmn/X6PIpO++93vfpcp8KCgnGGT165/SCab
      RdcO/AGzzU/fvI3lWJQK+fG5dp8/e/MGA9OiXDyQOSP+7PV3SKTTJHVtLHMt3n7zTfYHJjOl
      wljmu7z7xmts90zmysXgt2++9XM2mgPmK6VAdvvdt7iz02RhthLI3nnzdVxRJZNOBrK1O7e4
      cXud5cX5QLaxcYe3r3/AyvJiINvcXOPdd28xtxBGZ7Y27/H+zfcpVOdQZYlBr8Pefp1+t0t/
      aJLNjJdy2bzzPu++dx2lsEBWH1uf97e22L57AztRJZuQwXO4ceMGg24TQ0iSTY7LsF3b4vb6
      HplMFlUZXzto17i33SCRSAQys9/gjXduY/tQyI3NK3/U4qdvfoDj2hTzufG7WF1+9sb7GLZN
      +eCbDBr3efP2JsZgSKk4LutOfYfbd+/T7fUDGZ7D9TdeZ7dvMvug/H2fG2/+nM2OEXyTfq/D
      +7du0+z0qJTC7/ThzXf4YGufxbkqgiBgDHrcfP8W9WabaqUcnLd+7wPevXGX5aWFSPm/c/0W
      i4sLSGJY/jduvE95dh7lYN2pezff5M3371KozpNQx+bj3Q9vcvPDLZYW5oL7Td17ESQF3/fo
      djqhUJQpV8okFGnyRAqlMmltwg0RRFzfZ9jrRmTJfIlSZDBJQMuVqGSi0QwlXWAmH103aDCy
      KGSiK9HJEjQ7vYhMFGXm56ORHdnzKM9G85ZUfPKVKtKkc24bCHomaGWSqTT7tT2MQZdUbmLi
      T6GAoKQpJMN3VmWRUnU2vJ8oc3F5EccXSenhEjOyquOaPTqDg4ia59Js9/DsUcQplbUECU0m
      NZGSgihTqVbQ5Inyl3Vc1yIhh++RzJVIKBKlQujg50ozCJ55yNEV0HMlyulD5Z8tMpMNnbt0
      Jocmi2N7ewLX88llw++USGVI6woe0fM0SSSdz0dkguezuLwYOVMRfHKlKvLEN8mXqiT0JCk1
      fGdRUg+W5ZkoGqaMICqoooeihoXTbe7T6feR1fCj9NoNWp0O0mTimiCS0mSQwgoy7HXodHv4
      YigzBj063S7+hGNoGn3anQ6+f6iwXYtuP7oWaSqVihSga5vsN9sctgabvSGd+g69YTiS3ej0
      GXb2affCe3q+T7fXnTAbRJYX50nnK6S18Blr+w3mF+fDQvd9dmt7DEYOSTX8FJ1OC9+16AzD
      kK2sqOD7aNqBUogSubTOzs4utUYYsbKHXSxfQdfCBqPT2KfXH6DoE0rh2hijEaOJNBUBqO/X
      aLQnGiDPZm1rh6ERhrKNQZdOrwtC+G4jo0+n08E7VKW27m/SOVT+tutTzGUjslZ9m51GtFFq
      7O+ytRuGdXFtdustPNdlUqda7R7pdJKJ+k+t3mJ+fhbhIEbp2iMarc7YP3rwao41fQXw7CH1
      7oh+N/wo2UIRTZJpdyZCi7kCmiTSaoczw4xuE1vUGE0UdjKdIaGpdLthj5JIjU2kXi+8n5ZI
      k0zo9CZ6j16nxcz8CvOzUa13PJFKMWzlxpP+kwwH/ch5lXKJcmWGpBaGdquVMrlChUwyVFxR
      S7NQLYYfQBBoNRpYjhNRqupMlcbeLvaDiIQgUEhnkAWbzsRyMaVSiWbHpJILf8McDcmVZkgo
      YUMgaSkurCxRLYWtpJLMI3tDBkaotLlCgc31NWq1icrke2QzuYiNDx6mC4I/McNIVLh68QKz
      1XBrq0QqQ0LTIt9Ef1D+EzKA1dVLLM4dne/tuNHR+rnFVS4tRwcvU6kM1fLEvhGSQjadYmQM
      mAjqMFMtsbu3H8o8l8rsLOJE1qWk6Eh2j/c+DMdTRFmdtgL4DC2falYhW5zYC0xKIHkDEskJ
      80ROoPpDcoUwLKmoKslUCl0PKxyijC77KBO9B4gkVBFJmZRBWlcQ5YktmnIFrNGQ/oRS9Lst
      BsYIYzSKXFvIJnEP9R6DgcHIHEW6//5giG2ZkbVLFUVBlpVIV59NJ6jV9hja4Udod3rgjjCs
      0GQpVkrUW8Ox/X9Afb9OKa9Taz8wdxzq9Sa2NcJyDiqObdDuG2jpXGRgyzEH9EcuhvGg1fXp
      9A1mChmKExO5XVFjbqZMuTDREks6czkVLTVhdngO2zu7NFoTK3kIIglFiPToAClNRlKiKR61
      vR326s2ITMRle3c/Ims19tjaja6Xo+k6ohDtlYv5DKbtR3qAfr+HYRg4Bxpg2ybd/hBF1RAP
      WqVur0d18SIvXluN3G+6CuC5bG7vIsgazfpe5E96IsnImOgKnSGmkKTVCF/asmwau1v4ghK5
      VtV0LHN0qkxRNSwrjP332k1Gtstkaem6Tn8wYDCI7j8gyQqObUdkjm1RrUZ9ANe2KVWqBDrh
      uWzX9hE8G3vCFldVHc/zUaQJX0FWeerq5ailK4ikVIG++aBi93l/fQdP0qlmDyq2KOM6Jp7r
      MBwdmEWihGkMGXQ7oYxxMMK0bXzv4H6+z/Z+ly9+8WXazbAHaDfrNOo1esPwnXvNXUwhSbs1
      0VPgUynk8cTokNHx5a9jmWZEVi4U8A9FYJKpNMnkocYrV4r4Izub9+j0R6xevBg5T5JkPM+Z
      tGRwzQGuIAXtvefYGMaITruN4x6Ypa7F7n4DSYq+x3QVQBApFwsUCwVmZ8Jur1m7j2GLqEpY
      sRvtPvlMkkol7CmS2SIri3M0G+EH6LTqdIcW2oQZ0us0afcMdD1sbfrdNs1On8SE7ZvJF+k2
      dtjdD1ugZr1OuVKJhMVGwz579Vbko7QbDZZWL2GOooqSyRfwXQv3QWkLIho2a9v1wJF1LIPu
      cIQiS4ENClAsZKl3bXIHTrDv2txb30JPJMMRbyXNS89cYdjrYjoHCuVa2L6KLBDkGCGpLMxW
      mZudwbQmfAUtTUpyyeYPTAdBYL5aZPP+LqsXw9avVKqQz+doTSiFmirw3LVLPHVpotKJMrKq
      kk+FZdNtN+n0R2GUD+h127S6/cg3MUdDbF+iNOHw9tpNbF9m8ZAzmkpluLASDolSBoUAABVE
      SURBVGbKmk4mk6bdbE7cb8D2Xp1UMhG0ab7nkMiWSWkq2oECSaqGKvq02p2g9FUtwcrSUuhD
      Mf7uU1eASqnAcDBkZy9s2YvVeTTRRZ5QgJ29ffb3dlC1sPuu7+9hGCNK5VApcoUSSU2O7C2c
      yRVJJ7SwMgDpbJ5MKnFkD+LFpdWIjez7Pqqi4E8YkXoyTSGXQZbC+/muyfbuLt0JZ9f3fRzb
      otsbhK24IFCszFAt5oJWSVYTuOaQ/b1djAkTqD8YMr8wH0QrBElhaa6K5QmRnmJkmLhWn57x
      oHX2EUQRWRIiLZ+Az872fYKOx/dp7m2ipkvUg0ZEIF+qsrK8jD4RhdvYuEdvaPHUlXChMU0W
      WFvfwp60zz2bgWGi6eF3yuaLpHQ1+k2yedLJROSbiKKMadu0W2El9n2PRDKFcug7Ob5ApRhG
      zCrVWRaWL3JpKWxINT1FqZALki8Btjc32Kt30FSBkX0w+ChIzCws8cVXPod2EBaVZIW9rbu8
      czPMD9OT6emmQwN4jonjC2zfv8+1ywctjmsxMF18OXRuL1+6hOv5yBMfpdZoMbJsHL8Bswf2
      qu8xNEwkd9IW9BkMDQQ56kgNhkM8cWJ16tGQnf0GlZlwqZaZheWxY3ooNNcfDCIRkUJ1nrRt
      R5TWHg3xEEml0uHlvsd+q0s2pUfSnUsz86SKc+QS4fsJzoj/75/8gK9+/ZvkEuP79vt9fM/G
      sD1yB41sOp0ilcmjPwjhSRpPPz2eLz3ptNquj67r6BOtmp4p4u98SDZzdNpp5H2HIxzHY2Ra
      wRgCooJvD6jVW6wuHZSZqJJLaQyGBsWDcQV8n4FhIDpHyx8p7BUUVaVYyEfKP1soE43/HLyL
      0ePOusPlC4snP3d/wMhyHgxYUyxXxt9clCKVfefDD+j2OiQXn+PaXAZZUcjk8lhy1KeYfhhU
      EBFFmVe/8MrEr0goEpRLoUevayr12h7bu7Wg4lxcXeXq5ctcXJ10VAQUWaJ0aCUuRZEplaI7
      S6qKEpGpehLfHkUiIuNnhE6zHrGdNUWlWIze7+7t91nfmliVQpFo1vept7qR83RZwnAENGXC
      MZYl9mt7WE7oF/QNm3I+gTVRb1RNQ1AzFFNhJfZ8j3a7E6nsgiDguza7E5EczxqwX2/wJ3/6
      8+DFFMGhO3Ixhke3oZrkmWef56UXXySbnkjKckfUOyPM0cS1noPpwqA/EaIUQJXlI9/kcPkD
      uJbB1s7pi8HWdjZZ39k/9TxNUykUikEDlEhlWFpaYmlhPjI2Uy4XSWTLzObD97MdL2INwGNQ
      ABCwbRN3wiFEkLBMM+r8+T6O55NKqEGikq5KrK9vcP2dtzAOujMEAdsyD80jFnAsE//QwIlj
      W0fGAcqlIr7rRZKh3nv7Na5/sEFyItrkuXbgMD0gl9a4PxGH3tncYvnqs6RkN4g4IIgIoojn
      jDAfPLPnMhxZ5PL5yEfJF/IUSjM4RhhuVWUBw7TCtVGtLrv1Ngk9wWhCUxp7W7z+2muMvLBH
      SWaKJDWFpy6HNruiZ7i0sshs9Zil+05DlKgU83RbjcD/sE0DUdHDXmL80ti2eeRyxz76TdbX
      16nVG0fOPcz80gUuLp5hiUvPiTQqD2N/v04mmyU9Mb5iGGbEfIJpK4Dv0x+O0DUZd3KxW9dC
      lDUarTDmPxq2abSHaHoS5UFIRRDRdY2EpuI+qIy+B6JMqzW5qYaPL0oR2xLAQ6Tdjsp6wxHd
      2j3u7U5eL1CcsDcBHA/6veiivb4oRUYXZxaX6OzvkMwWUSac6GRCR5KU8D1ECU2R6Lab2BNK
      1et0EXHYmAj39QcjkqJFd3RQXkoKRRS4cvVykAaB52CYDulcgXw6dEYHvRZrG1s43mSlE3Ac
      m+2dXR4ZQSKha+h62Cj5CGiqQrEwUV6+D4J06JuAL4hHvsmLL7/CpZWTzRoA03IYDvunnmc5
      Hsagy6Exyyi+R2VmFtexedByep5LQtfGoegJpj8QZvXoGR57tYluT1JJ6gqe4wTmjuX4lEt5
      hsOJKIvnMhiaLF64TFo/0FRBJJ3UEfAmNF8gnUwg4o/DnAdkUklkAQwzHMgR8SnMrbJUDQe+
      ZFliNIru1JHJpNBkie4g9FM6PQPP7HJ3fTxXWVI0VlZWWJibibgQtu3gu1Z0BJVx3v/kgE2+
      WMCyXJ6+cjmQpTMZREXHHBxcK0isXrpEMpHEeGB2iDLlUpFhv4f9wO72XPpDi5WlBUr50Kp2
      rCFDw0LRPsqkFwFZFhDVFMkD/8O2DGr1Ot3exHcSBFKpBCIe5kT5p1NJJMEPei7LGHDrgzv0
      B6dveZvNZo+0zseel8mgq/KR0eVJHGvE7t4+vU43jNb5PoVSmUI+6oFMOQokkK+uMFdKsrSw
      EIibzSaqplIqFYPBomw2i2kMsSe6M9cXkAUXYxR2r512C0FSyOULqAdOTq/bAlEmmy8EkY1+
      t40nSKSzBRIH+UXj1FkfxwP1IDox6LZJZkvMVsLdLEfDPpbjk0hlyE6E+4r5PMXqHIXcyfuS
      laqzXLp0mcrEoFK90cAyB0GawoMRYVEUwtbVtWn3hsiyQnnCNu00amzu7pNOhzlMlmmhakoY
      oRElKpXSeODPD8JAIGlIvk06/eh7qTmOgzUakc2GjUUqUyCX1DEnxle6nRaCKJPNFdEOyr/X
      beMLMplcIXDe1USKlOTT6J6uAM1WB8c+efsgczTAsBw0PUU+k3zoebKWJKHKyJKHdRDYECWZ
      rc3NyMj89MOgjOOyo9GIexvhCg/FXIp2z2B/0hb0PLr9QeQjt5p1HM/HtMLBmVwuR6/Xnwjr
      jUNu/V6fxoQsnc0z6PdoNkNHqtdpkivNRvJOUtk8o+GAzkQKhp5MMxoOaDajtqqiKtT2ahQO
      JWRF8BzefvtN7qzdC/wC17HJZ3MksyXmKmPTwew3qDXajCw3cGcESUHyHWyjQ2t4ULFdm53d
      PUamFd0pU/CwLCcSvjVHBvv7tbAV9hw+vLOG4/u0mlFT5Cx8eHcN0/EY9sN0BsvxyKYT6BN5
      RNns+Js0GmFZj79JL/JNANRkimzy5N7IcWxURUFVT14oQNNTmMaQVrsV6VmPo1As4DgE4WXf
      95mfq7I7EZ7Xk+np+wC13R32anXKlQknTJRRZYn5uYnQnKSQUCX6E11ZuVRCkFSMwaSdJqBr
      CrOH9gDQNYWZmcMyleqkzAff81HV0Nntd1u4/kFy2QTJpE6lGsacR4MeI3OEnsxwIqJMNaOy
      VQvt/fb+NnvNNo7r0D0YaVX0NI7jceniShCuA9CTSeRUkVJKDsolny8wau3QmJgcLwoioqyQ
      fpD24Iy4s1mjMjPHfCUfPMv83AxXn7p2ZKDpLCzMzXLpylWWF0Ob/e7dNWZm5xj0JnJ8hOO/
      SUJXj+zVkMvlGJ5iAu3X9jBsh2LhhIbmgFQqQblciSS+HY+AKBL0tvWdTe6urSMcSt+Y7jiA
      IFApF5EzVTx70kbzMUeHIkOuxcj2o9EEUSGTVPClaIsxvjYaczbNozLrkCxbKJEtRMNy6WyB
      ztuv0/LSXL10IXI/TQ671Xptj+3WgOwJXe0DKrMLdLwO+kEYNF+ew5M742S3zFjRJEXnysSg
      U1gMJrYjRLrmQiGPIMtkJ9K9RcFHVhOhUy5IFPJZXGecHjGOaAnkiwcNTzSb5ExkcoUjsour
      K9T2G6xejD77uPyj0RhzNCI5Uf7bW+tYrsDiwskrdOSzWfYbbexDqSjHYZkWIuqJ59imQbvb
      J53Nox6MDlfmlynNzFNvRgMdj2U+QHt/G39St3xothsRE6jXquNKKt6hvkwURBwnut55s91k
      fz/atbbaLWr70bhxp9tmd+/kWLLv+yxdfIqLC9EW0rMGfLAezl1evHCJL3zuBa5eOn1Lpv3d
      +2zt7AZhUB+fdqvNoNuNRIGOQ5AUttdu0TUfhEH77O7XafatSCvn+gKO2afTPxjTkBSWl5ZY
      XV2NhHOnjaonWViYD2x9APzjy7/VaVOrhbKZmVk8c0C9HY28HCaRziL4zpmcYNkzuHF388Qo
      kKIlcEyDQa8VGYkXJZlqJRoenvpIMIJAu9EgW5pIgRUlFubmyUwMuox8lUrGJpMJTYxGo44g
      yZQmbW5BYGFuDjkRNUUWZudAjzp6czNzOHK0izuMa4/Y229QqkRTdPOlGRxlwgkTBAQ4lC58
      PNXFiwjpQZCLIisa2ZROdziMjD8ch6LqLC4toT5IhfBc+oMhvpyc6BV8RFFG8ImM+n5qCAIL
      s3OIiWj5L8zO4amhT7e3s0Xf8pmfP9200ST4cG2Darl44nnJQpUlpwenfJbZ+QVM2yGpnHzi
      1LNB9xsdFlZXcc0JE0iQEUQhiMTAeNKHrCUZTQwKlQpZPFGj35uIL/s+hcosmchaNgKJVIJK
      OWre2K6N65y8W4asJrB6Dbb2Dg3OiFKYQfmIDHo92p0uk1/F6Le4v1vDdE5RAEVC0tJhJqSe
      49lnnuG5qxfQ1YP2yR6wsdfj2qVF2n3j4Tf7xBCwfYH0oZ4nnS9yYWIwK1coUy7mj2yAeBzF
      ygyScIpnC4hKgqWF0/0bxzKOpFwfe79Tz3gkfFqtBvXafiQ+jDtiY/M+7YlY8qUrT7OyOMfy
      UpgBiKjijTqIE634sN/htZ//jI1Dw+Se67F19xatiXTeTquNYZ6+E3elWgXbjDyjaQzREqfb
      +4fxfZ9kJkN2Ytql73tU55eZn1sknzy5W2/W9vBE6UhuUgQlxWxRo973uTB71E7/xPE9drbv
      s3/Inr539wPWt0IzMpnO0mo22Ns7eVCu3aiDIEaSII/Ftblx/S0+nDBVj6Oxd59W3yCd0uiP
      Tm7UpmsCiTLXrj2D67pRe86xKM4uIRI+zMNMC9uySOTCbj6ZSuPYbrj0CAA+69t7LC3MU0iG
      5y4sLSEo0fm/xzGyQRNGbOzUuLI8brGae1s0KXJpZeGUq6PUtzdo9g0GhonpjJeLtIwetz5c
      A1HCdjwk5eFKIMoylm0fmY4ZRaBQqvIEVP0xgsDVyxfxJC1cCgXYqe0j62lYnD84TSCdSqKl
      T35ywxjQ6Jmkk6f4MpJCJS1xfbfNi8/yUDNITyRp95vjVHXl5DZ++j4AsLu3x8J86PlbnkBa
      9fCEk+O861v30VIZzGEXeBDaU7h8+SK5fFiInuehy2KQ/vqAfreN4ZtUSqfYnJ6Fmpvj0mIY
      lq3MLuJ2H32zsWJ1Fktss7iQDKJAqp5ieXmJkWlHUimOI18qsbl2h15pLpKu/KTj+z6CbdA1
      HHIHs9meuXqFRC7aig8Gg+gMs2OYW1g+ZsuUo1ijIenqKi+XODEMmsoWuJRMsN+zgxUhHsbU
      o0CuNcQ0bfabYdxY1lOM+l009WQNlwQfy7Ki0+p8l42trfGE5gP6vQ6qniSXjTrGa/c2GI5O
      zoL0fZ/kwYoJ4kQptnoGgne6+XTkmRWNhbkZUulMkPhmGQOarS6WZZ+cs/LgHqoemQ/wpPPh
      B7fYrdURtHRQ+TutBo12/4gl59oWe4cieEc4WJPotICD6zgYI/NMPgWiQvoMK3BPPxvU9xia
      Np4TVibRNWj0HYzhyQMii0srLMzPH5lEPT87x8zEpOxsrogs+kfi0K+++iqLcydnFA57bUQt
      jTZR4XzfJ5PNks0el6n+6Ch6ipQu0+t2Oe1TNfb2UDMFEqd01U8SyWSKdDodmeGXSKWQFZlO
      O+oXpNNpEonpLMabSCRIZzIoyumRsJ3dHW69+w4D8+E+gO/70x8Jrjc75FJaZAL8zVt3WZwp
      RkeHH8Lk8hsAzUYD13UPrSLgc299g63tqDP03jvvsH8oQ/HoI/r4PsxMTNn0HItGfT+Sfvxx
      sIY9tnZqpLNZTmrYfcdiZDvsbd+nd0Jy15PG/OIyV65coZgPe2DHGrfMhx1ZNZGKrDP0cWg1
      66eO8wR4LsXyyfXNd+3pJ8OVckmu37jN9kTOxYXVSwx7bYzRKSN9noNrW9Tq0dRlWYShEY4Y
      W+aIq5eifgFAqVjgNJ1O54qsrCyTmxjhlRQNwR5w7/7pEzfOgusLzM5UEPCondD9C7KKKssU
      kiJvvn/3oed9Fljf2uGll15ib2crKl/7kHubJ0dtzkq+PEMllzhdCTyXnVr9YA+Lh7dAoqxO
      3wkWFI1iLhNZS2dra5NcqXKqTba/X+P+/R0WL4Sjr+1WAwcxEma8e2+d0chC0VwgdLZbnS5S
      5tEHinzfp7xwibT16D7AcaSyeVLZ0wd/ADLZDK4yy69cOXkA70nnwvICmxsbzC0sReQXL17G
      k6djAnUaNbojl8X5013mlZUVhiPrxB4YHkMUyHdM2v0B5Yn5oleuPXvCFSGSJFOdmYlMTs8X
      iigjC2siQ7RaLjEwTFQ9Gre3XRf5DCO3h/Eci9reLunCKXHoR+D+3Zts1vtce+5z5JMPL2Zd
      V7jx4RrPPv/c1H770yCRyrKSytKs72O74SSn/XqdoWmTz+dJfsxR7Hx5lvxZJrqJEoooUN/Z
      Ileqkj1h/4Lp9wCCyMrKRZYXzhLYOvQwioLV6aLoYWtfrMxyeHC8WK4ekbWaLV79ytdonuID
      HIekaGiaFs14/JiIso4qGyd2wQCNeotiSqQxcFjMf3bCoEfwfdZuvctQzoYJeYxn2QnJ0seu
      /I9Kv98jUzi0Hu0xTD8ZTtZxrQHd3unT2w7T3N+j1x+cmut9HP1uk/WNDerNR6/E9miIrGhc
      uLB6+slnRFZVMplMZE7wYXzPJlM4WAYx8/gS2j4pHEGlkk8F4WXPdVhYXKFc/OSH8GRRAFGJ
      rMt07HnT/mHPGrBxfxc1maFcPJsd/ABV10l44hlyvY+ydOHSscudnIV7GxvkEhId0+fRnvgh
      eC6SoqEnQD7hcTxrwM2bt1heqFLrWiwVPts7R96+e4dV36d6EH25e+dDLNMkUzl9TvA0qe/d
      x3AFKjOzJ24w6HnelBXAd6l1bH7t61+l1nh0UySXL5JIuajaR3MIz5K5eRwrKysMhiO0KfWH
      Rr/N7l4NV5CYPcESlPQ8r3751fHBR3z2J4nnr6zSJ/TLisUi/aERTaX+BEinMwxGLXqdJmm9
      +tBe+MPb70+7BxCxjB5bWwPS+Ud3KFPpLKdn8kwfVUt8ZKU7DtfzSCSTDE331Hr9UZX2SaTZ
      6pGZDccGjvPVPgn0A4f8NLKF0vS2SIo533RaDbr9IVoiTbX8xKTtncpnZ/w95okmly8i4bGz
      +xHWI/oUiRUgZiqYRp+9RotcbjppD58UsQLETIW7G9skkwlWzrK84RPE/w9BWlUs3cvT1wAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='184' name='food&lt;feed pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='foodfeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='foodfeed pie' width='192'>
      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
      g9fu/wENWxWP/RzBEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='food肉蛋' width='192'>
      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
      EQgE58P/BzekEYsnSVK2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='gif area' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif continent  food' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif continent feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif group' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='gif pie' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARA0lEQVR4nO2da0xUV7vH/+xhBnVgCgi0CkghYtUaNQfNFJqaiBKsoUDLgbZpP9Aaa+Ol
      r1WbtEdTb5ijfRuMH15j8B5ToQwmjhobRSFpI2hVYhWqAfsOlBlTGQUZmOkMsPc6H3hnjig3
      YQbW3vP8kolhX9Zee/mbZ1322msCGGMMBMEJwnhngCCehoQkuIKEJLiChCS4goQkuIKEJLiC
      hCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQk
      uIKEJLiChCS4goQkuIKEJLiChPQT8vLyEBAQ4PnExsbCbDZ7JW2bzYYNGzbAZrONOq1AL+SH
      kAExMTFobm5GTEzMeGdlUChCElxBQvo5HR0d+OyzzxAUFIRJkyZhy5YtcLlcAIC6ujosWLAA
      KpUKcXFxOH/+vOe8ixcvYsaMGQgICEBMTAxqamq8kh8S0k8wm82IjY31tCGTk5Nhs9lw8uRJ
      pKenw+Fw4MmTJxAEAZcuXYLdbseRI0dQXFwMURRx9epVFBcX4+HDh2hoaMD27dtx4sQJiKKI
      u3fvYs6cOV7JJ7Uh/YT+2pB///03DAYDLl++3OfYrVu3IjY2FsePH0dhYaFnu06nw+rVq2E2
      m7FmzRro9XoAQEhICDQajVfySRHSj+np6cHkyZNhMpnAGPN8tm3bBqfTiczMTIii6Nne3t6O
      5ORkdHd3Q61W+yRPJKQfExISgri4OBQUFKCjowOSJOHevXv4+eefMX36dDQ0NHiq7K6uLlRW
      VqKxsRHx8fE4ePAgGhsbIYoibt++7bUhJBLSz/nmm2/w5MkTREREQKPR4OOPPwYAhIeH4/vv
      v0dBQQE0Gg1CQ0Nx5MgRTJgwAXq9HsuWLcPcuXMxadIk7NmzB4GB3mn9BdAKugRPUIQkuIKE
      JLiChCS4goQkuIKEJLiChCS4goQkuIKEVAi3bt2CXq9HYGDgc7N2Ojo6cPDgQcyfPx87d+4c
      NB2r1YqCggK89tprMBgM/R7T2NiIGTNmIC8vz7Nt79690Gq1iI+P7zPzp6SkBEePHh32fZCQ
      CsBisWDLli3YvXs3XC4XmpqacPfuXVy6dAkAsHHjRjx+/BjfffcdtFrtgOnYbDasWbMGMTEx
      +Pbbb/s9RpIkHDhwAKmpqdDpdACAP//8E1euXEFTUxMOHz6MAwcOQJIkWK1W1NTU9BF3KEhI
      BTBlyhQYjUYsXrwYKpUKkZGRyMnJgcPhAAAUFRXh66+/RkhIyKDp6HQ6lJaWIj8/f8DZO1eu
      XEFrays++OADzzaLxYKUlBRERERgwYIFCA4ORmdnJ4xGIzIzMwf9EjwLCakABEGASqXy/G02
      m3H+/HksXLjQq9ex2+04ePAgNmzYgKCgIM/26OhoVFVV4dGjR7hx4wY6OzthtVrhdDqRkpLy
      QtcgIRWEJEk4e/Ys1q1bh927d+PVV1/1avrFxcVYtGgRZs6c2Wf7tGnT8PbbbyMhIQGrVq3C
      F198gYqKCmRkZGDlypXQaDTIyspCW1vbkNcgIRWCKIrYs2cPbt26hZKSEq+/zGUymXD9+nV8
      +OGH/e5fsWIFbDYbGhoa4HA4EBoairq6OoSFhcFutyMpKQlGo3HI69CM8VEg2SxgtgeQbBYA
      gNh8/T/bH4DZLJBsD7Ch538RFapFVFjvBwBeDtMiKlSLOQlRXsvLgQMHEBMTg48++giC4P04
      c/LkSRQVFaGoqKjP9gsXLqC6utrzBbDb7Th37hw2bdqEU6dOQa/XQ61WIy0tDdXV1UNeh4R8
      QSSbBaL5OrrrjBDN14c8vqXNjpY2O2Dqf/+c+CjMSYjCh0tG/k7Kw4cPcfv2bRQWFvpERgDY
      vHkzNm/e7Pm7uroahw8fxqFDh/ocV1ZWBr1eD51Oh6ioKFRWViI7Oxvl5eWYNm3akNehKnsY
      SDYLXNX74TB8AvvhdDgvbBmWjMOh1tSCksu1yPqfEqz851kUX65F7b9bXiiNpqYmlJaWIjg4
      uM9iANu2bYPNZkNycjICAgKQkpKCjRs39nnJy2AweIZlnn4RLC8vz7O4wHCHbf744w/cunUL
      S5cuBQAsXboUbW1t0Gq1uHnzJrKysoZMgyboDkL376fRVb0fku3BiNP42LplROdFhWnx4ZI5
      SP2v+BFfW46QkP0g2Sxei4IjFdJNVJgW/8jRe7W9yTMk5FNINgu6qvej+/ehe4PDZbRCupkT
      H4V//Lfe0zFSKiQkekXsrjOi6+p+r6ftLSHdfLBkzqg6QLzj90JKNgv+NnwyqnbiYHhbSEDZ
      1bhf97Jd1fthP5zuMxl9RUubHZsPVaCiZoCxJBnjl0K6h3F8UUWPJfvKrmFf2bXxzoZX8Tsh
      3R0XucvopqLGhM0HK8Y7G17Dr4R0txe92YvmgVpTC1b+8+wLD6jziN8I6evOy3jT0mbHvlPy
      r779Qkj3QLdSZXTT0maXffXtF0IOdyKEEqg1taD4cu14Z2PEKF7I7t9PK6YDM1xKRjBBgxcU
      LaS7qvZHNh+qkKWUihXS3YnxZ/adutY7F1NGKFbI0U4bUwItbXbZtScVKaRksyhurHGkVNSY
      ZFV1K1JIf203DoScoqTihBTN1/1miGe41JpaZBMlFSekq9q/hniGi1yipKKEpOg4MHKJkooS
      kqLj4MjhWbdihHS/L00MjOcdcY5RjJDddTTMMxwucz7LXDFCUnQcHry3IxUhJFXXw6fW1MJ1
      ta0IIUnGF6PWxG+UVMRiU9R+HB4RqieIFNrR0ywAnC7RInshqboeGLeAs9RNmKVpwix1U++O
      fwPA8Nf9HktkLyTz8xk9TzOggP0gmq9DFePdJZ+9geyFdC8W6o9EqJ70yqduQqSqfVABn0Wy
      WaACCel1pHb/iZCjEfBZeC032QupZLwp4LMwTmsW2QvJa8GOBF8KKBdkL6ScX1MYTwF5LTfZ
      CymnCMlTBOS13GQvJK/fdDdvTfiNCwGfhddyk72Qgm4qt4ULAKtCzo53FvpF0E0d7yz0i+yf
      ZQfoosc7C7KE13KTvZC8ftOJkSF7IYmRweNjQ0ABQvJa9RAjQ/ZCCi9RlT0SeC03+QtJEXJE
      8FpusheS17YQzwi6qdyWm+yFBAD17KF/ZZT4f3hudytCSFUsn992XuE1OgIKEVI9O3u8syAr
      Ajn+AitCSIAGyIcLz+1HQEFCBlKUHBa8l5NihOR1XI03eK6uAQUJqZ6dzXVVxAO8V9eAgoQE
      APXrNPwzGBPSd413FoZEWUJSlBwQOURHQGFCAkBQ8urxzgKXyCE6AgoUUhWzUBaRYCyRU5ko
      TkiAouSzyKk8FCmkKmYhPd/+D+rZWbKJjoBChQQAjYyigq8QdFNlVw6KFVLQRWNS7tHxzsa4
      IeimYkL6Lm7nPQ6EYoUEeqtuf5UyUKZDYIoWEvDP9qR6dpasOjJPE8AYY+OdibHAYfjEL1ba
      lXut4DdCAsqXUtBNhXbFxfHOxqhQfJX9NBPSCxQ7b1LQTcVEGUdGN34VIYHepYydF7YoKlIq
      ITK68Tsh3biq96Prqvx/rFPzxmrZdmD6w2+FBIDu30/DeWHLeGdjRAi6qQicna0oGQE/FxLo
      /XkMh+GT8c7GC+Ee9JbjOONQ+L2QQG+7srvOKIsqXD07C5rk1bJ7AjNcSMin4LnDo4pZiKDk
      1YqMik9DQvYDT2IquXruDxJyEETzdTgvbB6XJaPdM3X8bRGEMRXSbDYjOTkZZrPZsy03Nxel
      paVeu0ZhYSGSk5ORnJzstTTdbcye30/7VE53zzkwVj4zvL3NmC96n5ubi8LCwrG+7KgQdNEI
      Su4d73PLKZqvj7pKF3RTEaCLhvr13km0Su2ovAiy/xWGscYtJ9AbOZntASSbxfPbgcxmgWR7
      4PnXLZ37kaV7YSxBF+23UXBQ2BjS3NzMvvzyy3731dbWsqSkJCYIAouMjGTHjh1joigOua+5
      uZllZGQwlUrFNBoNi46OZlVVVWN2T4R3GXMhY2JiGADPZ+vWray9vZ0tX76cnTp1ivX09LD6
      +nqWlpbGqqqqBt3X1dXF8vLy2L59+5jL5WIul4tt376dhJQxXLQhf/31V7z88svIzs6GIAhI
      TExEfn4+KioqoFKpBtwXGxuLV155BWvXroUg9E5cCg4OHutbIryIrKef9fT0QBAEj4yE/OHi
      f3LmzJl4+PAhTp8+DVEU0dDQgGPHjiE1NXXQfeHh4aivr8eZM2cgSRIePHiAmpqa8b4dYjSM
      ZfvAF52aq1evssTERCYIAps3bx7Lzs6mNqSMoSc1BFdwUWUThBsSkuAKEpLgChKS4AoSkuAK
      EpLgChKS4AqvCmkwGBAQEPDcZ9eu3vWt79+/jzfffBOBgYHQ6XTYuXMnXC5Xv2lduXIFs2bN
      gkqlQlRUFI4fPw5JkgAAkiTh+PHjiIqKgkqlwty5c3Hv3j0AwN69e6HVahEfH9/nqU1JSQmO
      HpX/yg6Kx5ej7l1dXWzt2rXs5s2bzOFwsHfffZeVlZWxnp4e1tLSwnJyctiRI0eeO++vv/5i
      S5YsYdXV1UwURVZfX88WL17MKisrGWOMnTlzhr311lusvr6eiaLIGhsbWWtrK2tqamI5OTnM
      arWyy5cvs5UrVzJRFFlLSwv76quvWGdnpy9vl/ACPq2y79y5g6CgIMyfPx+tra0ICgpCWloa
      VCoVIiMjsW7dOjx69Oi585qampCQkIA33nijzwwfq9WK7u5ulJSUYMeOHUhMTIQgCIiLi0NY
      WBgsFgtSUlIQERGBBQsWIDg4GJ2dnTAajcjMzIRWq/Xl7RJewGdCSpKEEydOICMjA4IgYMqU
      KYiIiEBZWRlEUYTVasWJEyewaNGi5859/fXX0d7ejkuXLkGSJDQ0NODixYtYuHAhWltbIQgC
      5s+f/9x50dHRqKqqwqNHj3Djxg10dnbCarXC6XQiJSXFV7dKeBNfhd67d++yzz//nHV1dXm2
      uVwulp+fzwCw0NBQZjAYBjzfarWyJUuWMAAsLi7OM2GiubmZLVu2jC1evJhpNBqmUqlYRkYG
      a25uZowxdujQIRYSEsKmT5/O7ty5w4qKipjJZGKffvopU6vVLDMzk7W2tvrqtolR4rMI+cMP
      P2D58uVQq9UAAJfLhU2bNuGdd95BT08P6uvrUV5eDoPB8Ny5bW1tWL9+PXbt2gVRFFFeXo59
      +/bh2rVrAACtVot//etfcDgccDgcSE1NRUFBASRJwooVK2Cz2dDQ0ACHw4HQ0FDU1dUhLCwM
      drsdSUlJMBqNvrptYpT4REiTyQSLxYLU1FTPtt9++w1OpxPvvfeepw2Zn5+PCxcuPHd+ZWUl
      ZsyYAb1e72lD5uTk4KeffsLkyZMRGRmJl156CSqVChqNBrm5uWhtbUVnZ6cnDbvdjnPnziE9
      PR0tLS3Q6/VQq9VIS0tDa2urL26b8AI+EdJoNCIrK6tPJyI2NhYmkwkVFRUQRREdHR0oKytD
      RETEc+cnJCTgl19+QW1tLSRJgtVqxY8//oi4uDhMnDgRSUlJ2LlzJzo6OtDV1QWDwYDExETo
      dDpPGmVlZdDr9dDpdIiKisK1a9fQ3d2N8vJyhIeH++K2CW/g7TaAxWJh77//Pnv8+PFz+27c
      uMHmzZvHBEFgEydOZKtWrWI2m40xxlhpaSnLzc31HGs0Gll8fDwDwMLDw9mOHTuY0+lkjDHm
      dDrZjh07WEhICNNoNCwnJ6dPu/D+/fts/fr1fY6nNqQ8oAm6BFfQo0OCK0hIgitISIIrSEiC
      K0hIgitISIIrSEiCK0hIgitISIIrSEiCK0hIgitISIIrSEiCK/4PRj9btAeAUUkAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map点' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='milk' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='rank' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='rank2013' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ranks' width='192'>
      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
      6dXiSokAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='rank点' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='中国玉米大多feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='仪表板 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYwkR3rff3lUVlXW3dVnTXdP99wccoa73F2tqMPc3QfLggVDFgxLhg1b
      EOAHG9aTXwzDgP1iAQYswwcMPQkwYEkwDEGyIK+0suWVtFotl+SQOzxmyDl6jr677rsqz/BD
      9VRWzvSc7ItT8QMIsj5GZkZmxz/ii4gvIhQhhEAiGVPUo86ARHKUSAFIxhopAMlYIwUgGWv0
      z3Pxg/6zoijD36N9akVRhv9PIjmOhARQ3bjD9e0uP/WV1x57gd3a4W5ZZSoFntvn4xurXDyz
      SDI/h9vcYKNiUywXMRB8+etvYhragb+ERPKiBC6QEPzVn30fP6KyvXaHd999l1K9w9qdm7z7
      7rvUOxYrN67xox9dpdW1uXFjBafXQkFh4+5nlDsexUqbbDJCp91G1RS6PesIX00ieTqBABSF
      ublFXr/8CrfvbfK1r32Vmx9/wL3NCl/7yut8/P57bFVbfOnSRVRAeA7dbhfLE3iuDUDK0HAU
      DTOVJmKYTGbMI3otieTZCHWCFXXwM6r5vPfee5i5GTSvx3vvvc/E7Am69TIfXb+BUBQEAj01
      y09cWqTR7oOiYJhJFNfBd2xqtQo9xzuSl5JInhXlRWeCt7e2mZ2bRQif6598zLmLl7n2o3dR
      owkm8pOkYyp9Jc50LrXfeZZI9o0XFoBE8jIg5wEkY40UgGSskQKQjDVSAJKXCiF8/vB3/ydt
      28N2HGzLwvM8bNvZM/3nCoWQSI4bVnObze0t/uq7f4ofz7L+6XucOf8Kn90v8U9++ZceSS9H
      gSQvFa3KNiKepbh6h1xhiY2V6yTTaWodl69cvvhI+n0VgBBCBr9JvlDsax/A9/39vJ1EcuDI
      TrBkrNn3TvBHKzt0rUGPW9dUvnq+sN+PkEj2jX0XwG9++0fc264DkDINfutf/cJ+P0Ii2Tee
      SwCO46BpKo7roykgFBVNVRBCoGly4Yvki8czC8B3Ld5+90ecmp+h1rYwDXDR0TwHc2KGuakc
      ew0oyVFWyXHmmQVQ2t7E8xw6lkfU0FE0BR3odXokVW2koIcLvBwZkhxnnlkAM/PL5KZPoCmC
      ZtcmroOnRjAWTuL7Hqqq7oogPA8gXSPJcea5+gCGYQCQy0Q/z20kkmODnAeQjDVSAJKxRgpA
      MtZIAUjGGikAyVgjBSAZa6QAJGONFIBkrJECkIw1UgCSseaZYxh67Qb3VjeZyE9Qb/VIR8FR
      o6TNGI4nmJqcOMh8SiQHwp4C+O53v8tbb73F97//fd566y0AYqaJZ/Vp9mwSUQ1XUVB8m5vX
      bnLuyz+B53m7kZ8j0aACXNc9jPeQSF6IPQXQ6XZYW1tjc2uTVqtFKpWi226hx6KYhk67a5GK
      gqManL14GbvbREvkd68eiQZVQNdloJzk+LJn6fzS61/CFz6XXrs0tCXSE1xISzdH8nKxpwAW
      FhYQQuD7PqqM55e8xDx2FOjD997mypUPkWe8SF5mHiuAdDLOxnbpMPMikRw6j+2hVmotYoqP
      +6REz4j1/f+I394BQImmiH3zX37OO0ok+8OeZVv4FhoqTctlP3oA7p0/w6+sAKCYeZACkBwT
      9q7clQjJiUl+LD+D3NNB8jLzGO/G49Nr15maPcH8AT34O59VaVmDLnY8ovJzF/NPuUIi2X/2
      7AQrSoTLly9ge/6BBQv1HJ/u7j89R7YzkqPhseXbdyzurNyVLpDkpWZPAVjdFl0XXr10cV86
      wRLJcWVPAWi6QaVYori+zoOjxYTvUa5U8RybRquN1evQ7Vm4rott24eYZYlk/9izE6wbUc6e
      XuSH11Yxdm12v0+zvE2xZqL5LhEdfAF2u01+fpmpnL67NWJ4b1DP83h4f1zPe3R+eS+bRHLQ
      PHaOq1pvktRVHCAKWN0mXSIkVJ+O46Er4CsaeiSC67ojZ4OF9wZVFAWFsCz2OkdMni0mOQoe
      P8nru8wunhwmMDN5Fo0EpmniuB66CkLR0FQVIfxBQd+jEKuq+rAmBra90kkkh8yeAujWtrm3
      WeL866eHZVePGKQjA4fo0Rh/WXglX0z2LLnVrSJGKsrHVz6S0aCSl5o9W4D5i5eZv3j5sPMi
      kRw60neRjDVSAJKxRgpAMtZIAUjGGikAyVgjBSAZa6QAJGONFIBkrHnmDR/sXpvNcoOUobDT
      2N0cVxlsjuv6MDM9+flz89kfgN0e/LeRgAs///nvKZE8gWcWgBFPEo206Dke6biBUBR04bHy
      2TXOPmVzXBE2PbJh7gObVruD0q8NbNEMntxYV3LAPLMA+p0mpVKZmekpml2bdFTgKDEuXPoy
      dr+Flniwb+ijm+MqSiALhUeD6fa0KYrcWFdy4DxzCYsl0ly+NNgsd+bAsiORHC7Hvor93d/5
      bTrtQb8glU7zC7/09444R5KXiWMvgDu3b1GvDfoFE5ODjvbNX/stnGYXgOhUljP//O8eWf4k
      X2yOvQD2wnc8hDPoIPu7HeWd7ib+7uoFXYkwFZ89svxJvjh8IQWwF79377/TdTsA5KPT/PL5
      f3bEOZJ8EXhpBLAXzT/6Y8Tuli1aJkPym99gpXwLXwxaiqgeYzG3xI3iDv7uWG08EmFpQm7T
      OC683AL4vd/H3+1AR06eJPnNb/Br//df03MG/Yfl/Gn+7d/8df7FH/4vrF1X6sL0DP/hb/8d
      uiv/GbErFC1WIDb/i/DR1WA8N5mE02cO/Z0k+8tLLYDPg9u6DmJ3Is63Bv++coWhAmbnEKdO
      c+/WjeE1MTPB3PzC4WZU8rmQAvic3P702vC/J6ammSnMceWP/+nQlpl6jXNf/VX8teC0HSVu
      oE5nDzWfkr15YQGUttd3Y4HiOJ5LLiv/oAAIQWXjh8OfiqKBEPh3dwJbPoWS1Wn/xk8Obfrp
      bxH5mX/HJ9/7k6EtOz3H0sXLsPZ2cP/ENCJ/jl69GlxrRFFNk53extBm6klyUdmXeRovKACB
      5QqE6HL91qece+PN/c3VOCAAf2TTGd/Dc2w++D+/NzQtXfoqS+cvwN3/F6SbvoSbOsnqD/90
      aEoXlkhefIX/sfKbQ9uruS/zrdzPcut/fzi05U5Pkzib43d/57eHtguvvcaZL7/Bf/qL7w5t
      by4t8zOnTrH98btDW2p2gV5ilt/4gytD209dWuBnXp2DETeQ6Vl6iQyrH6wMTfmlaWKFKVYq
      vaFtNmUwYVi0qreGtniqgKdNsLrTCG6XS5CJ67RbzSCdmUDVVDqtVsjmaxqVbjt437iJLyw2
      G0HFcCp/GkOPDn+/oAAUfKePo0ZZPneebqNG1px+sVtJDpbRQEQhcGyblVs3h7bJqSnmXYer
      G+tD20I2h+86dCtBqxVNZenpeT5aCWynCznoduCD94OHXH6d7pTOZ396dWg6983L5CYnuLrZ
      Gdq+VABNXOe9b//jIN3XfpVm4uf4N//tL4a2f/Q3Xuenz2W5+s4PgnSvXiaeSPDhu0HLeP7S
      63STSX7/4x8NbX/9/EVsd43/8r1/P7T9+s//V65u1Phwcw34HC7Q4vLZ0G/f9/F9n+XZDDFj
      sMzAjEYGm95OvgKR1CBhLIPneeTiKsbu3usxXR2kS85BJDkwGknwPArzC6QzGQDSmSye5xFd
      mERvD9JFckk8z2MmWqCv9wHIGDk8z0M/fRq/Nxjx0Wdn8TyPM/mz9N1Bp7aQPoHneVyYmsbe
      3Zz3ZG4Cz/NQ4qeGo0BEB+mYngoKVDYLvk86mxt+AzORxPcFmekvBbbsqcG3ScWGNiUWQRHA
      bJBOZJcRKEwtBiNLqclZPKFAaqRjHZtACIhmAvdGjydQhMpcLEiX0XMIIJo3g3SmgappLC4t
      DW3ZiQkiisor00GE10wyBYoaeoYWMzF0lQuLwWHpU5k4nqrB1EjlZyZQIxrZhSA8PpaOoyGY
      NIPN9uM6aCIR+lZGfJp4VA89I5eMoul66DtHDONRW8QgqmkUUpkgK3qEiJLk7OSF4D0UnUw0
      xtxuOkWIh/dufjGGB2s/tMentEnbQdiEEI/sRfsstofvtW8rwhRFQVVVhOewubnJ5tYWri9Q
      VRVFUejUK1z98CMsN7C162WufvgxljeweY7FxsYGG5tbeCPXdtsNtoslfEFgaz1qazfrVOtN
      2M2Loij0u222dsqAEkq3XSwjCK6tlzZYWd0K2ZqNKrVGK3S/WqXExlZx8PEepKtXqTfbw2+g
      KAqV7VWuXrsVsjXqVYrlashW2rzPR5/eHtqsXofNzU22i+VQuu31u3xy407ItrV+j/XtcLpy
      cYvtUiX83GaTRrMZsq3fu82Nlfsh29rd29y8E7Z12w2K5VrIdm/lJrfvrYXTteoUK/XgPbqt
      3XKwHfqmldLO4Js+sAErNz/j3trmiE1QrdWHBfdBulJxm3qzPSxvCoJbNz5ldX0rZLt541NW
      N7aHtlajyvb2Fp2ePcyHZ/f4+KMP93dJpKIoKFoEz+rSbVRo9P3hS7TaHYRn0XcDW7vdwfcs
      7F2bpkcw47HQ/QA219axbCek5o31NazdeKBA4YJ6tczG1s7Qtr6+Trm0je0Fz11fW8N2nNC1
      3VaDe+tbCDFyPyGoVkps7ZSGtmKxhK5roWuF8KmUdtjaLbQA3V6XTrcXSre2uorzUJ473Q7d
      Xn9oi8YTtJoNiqViOH+dDr2RdACNWnl4mHmQvzK6FuTPtXus3L5JrdEOpWu32/QsK2RrtVv0
      LTtku33zJpVGI3xt69F0Nz+7QX23o6ooCuVak0QySWF2mk6nNxBircyN23dwXS+0m3iz2cJy
      7BGbQqNaorQrKEVRQHisrq7jeiPXCp9mqxO+Vni0Wl0s2xraUqkUOG12qoGorH4Xx/X2f02w
      oigkUynimUkyseD2nlBYPjkfrA4TPrFEkpnZE5iRQTpF1bCtPkZEpT9ycN7UzDSe6yBGFtvM
      TE9RrVSHIQwAtWoNM5miMBP4pNGYSS6bCuVxbjpPuVoPrVTzIikuLE0PbVavQ6vTJxZPMDey
      3NMwIkPxPKBV2aLSZ5hOeA7xVJ7lhSAgz/ccZgsnHmmio/EUpxYLoe+XSiaYmQ6u7XXb+Fqc
      qYl06NpILM2phXDQXySi44yspNONOPGYSbvV4IG36zg2k9NzofdybIvpmQKzU+Gh02q9jrMr
      lAfYviBpBiMp7VYDLWYiRp6bTsS5f/cuxVqTVHLQD8nkJlkuTNHo9kL3y8/MYRqjh3H5fHbj
      BvfX1gKTopFOJeh0ukOTZbsszBfI53IP2ebI54J+hKKooMeZmwzSoUaYmZk5mEXxdq+PM3oy
      jBBM5rPUOz6Z+OBFPddhbX2TfqdBd6SwCyG4ffMGrieG1/Z6PRy7j+sHJbbT7eLYfRwvsJnx
      2KClCG7GRC6DUKIYWlDwur0eVq8fEk9UE5RrHbTdLxKNJ1CsOtdX1kKHe2iaTmtkSA4gEjXx
      rf7wt6JF6HYa3Llzf2hTtQjtyiY37gVDcuLBuz209LPf64VOzImbSQxdwRopiEII4rEorhve
      v9u1utzfbf4fEIvqpFNJutZAuFavS3+3RR2+gxGlXq9RbzRC1y4U5jCMWMgWjeiMes/JVIap
      /ATJRNDhTufyqJpKcXsrdO3aVhlDDfLsC4FpaJjJzEgqhdMnF0ilR+aWhE+rPajth/kwdNbW
      N0MVWdTQqdRbaNpo0RY4noc/Un5we+xUmgcjAFVXWbtze+T4U0GxWCYWM4aZ0CJRlhcKaEac
      qB5ko9dq0Hd8lAcvIHwULUIsFmdYhn2PjZ0y6UQ89NxmdYcPPvwEy/WH1zaaLax+D2/k5V2h
      kE2bKCMtSrXWYCKXCd1PMzNMZ4I/qhCCeDxGLBY8t99tUS5XsB8qxDFNo7C4GLIlMxPk04ng
      fp5DLJ7AfahFEU6XldXNkK2yfZ/b68Xhb991iETDBVMIQS4/RT4bbinSiTi1SpVuf/CcZDrL
      6sqnXL91d5im1ajho2JEjNC17V7/kRZU13Ti8fCzi8Ud4nEzZJsvzDH/UGhIpV6lUQ/G713X
      od5soT3Uye27MJ0PBNBq1tCjJoo/cm6popLO5lBHN/FXVGIR7ZFKpby1RrUZzBFEzTSZRHT/
      BSCEj6oZTE9PoanKMFPZTJJ2uxtSa6lYRI+OFGwgNzXHX3vrLTKxoElcXVvDsS28BxerGoVC
      AVVRgmcA0yeWOXPyBMYD8agaybiB64M64noonsPq2jr1VjAuPTs1QbFcC2p73+Hu/Q2i0aBA
      OFaPu/fXKZfLQ1vMTJGbPsFPfS28nXy1uMEnt+6HbJVaG3x7pOYV3F9fpz9Ss/ueh5meYCKd
      DF07e2KZpbmp4W8tYrB6+xpXP709tPXaTarVGs2R9wJotntomkJED77p4vJZLp8fGXLN5PBd
      m7gZiNu2LU6cmA9VFDA4LKX5UEsRNzTWNndCtma7S7NRG/5uN+u8dvE1ZmYDt00I8D33kQIb
      0bVQ65bK5JnMpkgkggoEISgVt6mMCArf4/qNm6ytBy2t6/lMTE4RMyJDm2P32draPAABeC7t
      Tou+44cKdr1SYnPjPo2+t5tPFzOZotWo86ByFr5LpbTFO++8j+PtKl3VWJzNs7ZVDLlUEcVH
      GZnRA9je2iQ7kWfUze40q7R6Fs5IC2BbXYQWJZ0Kaqxuv4dlWcO82JbNycVFMpnM8M9vxEwW
      5/II36fTC5riRDzKxlb4j5+ZOclXLy4Pf1vdNum0Sd9yaPcGBV7Vo8zkc6EwEtvu0+31UdRw
      oavUauQeaqFmF87w1dfOBe/abqDGkpycnxvahBComk5Eg25/xJcXA7dgFNf10LRAJIYRxbIs
      LDvsepmmGRIKwNZ2Cd8PCrHv+yRiBmYyaI2S6SytdotyKWjJquUdGp3eI8OciqoNBxt2nwzC
      Z2t7J2RLJVMU1+/S6O0+W9U4vXiCdCbw9zvtNrqRxIwH5cVzHTKZ7P4LQNUNfMchk8uFaudk
      OoMeiZMaqdkT6SwL8yfQd9PVS5v0HIVsNkGzF3xMoUWZn5sJ7id8VCNOPB4N1U2u64X8WiEE
      MTOFrjJ8ht3vEk1Pc/HcKSIj+et0+hTmZoaiNeIJCoUChdnpUMe11bWJxWNsbqwObb7wuXcv
      XNtb/f7uNjEDijvbbJaaZDNJUmbgPsRj0VCnOhZP4Lgerv1QRzGXoVIL9z1cx6LZDmr7qblF
      Tp1cIJ0MhH1vdRWh6USTWQqTAwE5Vo+NnRK1WjV0PzOqUyqHbd1Oh2pph541+Hs0a2Xa3d4g
      xunBN6lXOXXuAoXZYDKtVimytbNDrR7Oc7NexR8pdvG4yWzWpNwYfV+FmKGHvku706HdqpPN
      BZ101/dJp5LMzM4O/74IH8tTmcwFwoubSSqlHTq9QMhGzCQeix5ANKjwmZiaod3rhwpns9lh
      cfnksICpmj4YnhohPTHDjBIDRSFrBs2V4ruokdjwWsexqWxvsF7rM1c4MUyXzU2QnZ7mwbfo
      NircurdBLBGuxefnTUrFbVxfENEUarUqEzMFcrmJp55WmUolSWpR5mYG7sjm1iZRTWXp5MlQ
      OkXVaDabUBg09wtLp5kHHp53LG/dp+RnWdhN123W0I0YyyeXgk8qBL1+j74VFJxOq0G1XMKN
      jxQIu8+VDz5gcmqW82dOAZBJxGm0OmgjHdlINM5sPkOP4BsD9F2Br/RDNlSVeDJNPDooKnrE
      IBKJEI8FtWkqO8HtlRUKi6eHtvzULJ1OF8UIXEghBPOFAn40OXJ7dY8JLJ9Pb9xk+oTFzORg
      NGdjbRVXjaO6wShQr9NB01RcNUkiGggyoqu4I62boYPwmrQ7PWYm0iB8dnaKdHu9AxCAoqIp
      guJOkYnp2eEnNqIGtuM8cmbwKFokyvT0HjFFvkuj0caaK6Brgz/gzMwMLbe8O5Iz+Hhev8kP
      39vizR/7ClFdQTeizMzM4ImHTy+GqZFhRtfuU6zUsRyfwszkE0Vg9ftoseCz9TttnEgURRv9
      Q/vEYjE8dbRzNvCkH753Nj9NY6dJt+9gxiJs7hTRfZu7GyVeWRrkce3+PRbPvop6/97o7Zg+
      cRIjNhLqYMTQvB6VZlBIJianmdhr0z5FIxEP3Jh2s0YqlUaPjXTSd0eaun2HnuUSj+rUG00c
      zyNqhMWTSmdRlaDFa9YqVBstRrJHq1FFqBGiemR3vgXSmRyWZZGKjrpUKpcvvUY8HYj73IWL
      u3kKUlVKO2xtbnDi4mgwpoKm69TrDSYfuIyKxuyJs6SGw6UKpmnSd8TBjAJ1Ol0UYWM5g9x6
      Th8XjWql8siRqU9DCDEYkkTB2B0tEkLQ7nQQrsOoG6s9tJGWpkcwTZNUKsWTKvapmQKvXrzI
      idmpJxZ+4dkk0uGw71NnznHy5EkWR/xux+qzur5BpVJ56vv1HEHK1NncHgxdnjl7nuXzl4aF
      H2B2ZpL1+6tE40HNGTNTzM7OUioGQ57C9zl7/lUWZp8emBg342yMdBST6Ry23afZDDq3Vr+L
      omok0rlhCzA3N4dv94ezuQ+o1cqUqsG16VyemXwO2w76SulsnuL2Jp9+8Jes1wfuSKNW5vad
      +6EaGwDfYeP+naFv/2BSSx1xW5fOXOCrX3+ThBa4SgIFMxYlNtJCbW2u07VsxLCz6dHs9Eml
      kgezIMZxHCZm5kkaD/Q1yPiLHIbtuzYr9zeIGho92yMS12mUt2h1+swsniK++4xOs4aIJpnN
      B8/RjRjT07En3f65sCyLeq2GYsSfmM6ImSzMTVHr+U9MB2CaCZZOn9sdW3/M/eIplpfC7mKv
      06RSazK/sDS0tRoVOpZHIvHkdxZCIDyXRDK4p+M4JMwE/ZF5Fc91dzujQd5UTcfzBfV6lYVC
      4POnUmmmph5uagSZTLjjns1myE3NMJMetJipTI65EwX63Q7kBzX0+updbKFTWDhJJv7kIhqJ
      muRHxkJu3fyMdrfPwlIwEba1UySbmwzmfVSd5eXBAMWBtACe66Co2rC291wbX4vy+qXXgs7K
      M6JFolw4cxI1msLc9fOi8QSpTBbP6g7H933XoVpvY9v9R/zs/UJVNSKGQdJ8sgAAqvUmqWTi
      iWmEECRiBteu33hiur1IpLIsLi6SGRnJSmYm8HpN7q9tPeFK2Nm4z/raGlo86Ciu3r1Ddmpm
      UBB3icZM+p0mrXZ4WPXc+fNcOBdEAzfrFRzXp9PthtI1Wx0sK9yZb7U7pNK54cSk69i4tk1m
      ZOZ2dnYOt9+h3grf71nIZnPkJvKhId/TZy9w6tQp0ntUDAfSAswUCtRG/FA9EqVZvseq3efE
      /DwR7flEUClucX+9yuLSKVIxjXgyw3wyXLOkJqa5mBt0TF+kpXlWNE17ZHPfh+l32+TyU6Bq
      T0xXLW6wcm+DWHbqiemelX6nzWRhieXEkwU6O7/E1OwJqiPj58unT7GzU2TxZDB02+u2KFYa
      LJ8Jb4Z56+ZNfFXntVcGYcaxaIx2p4OZCv9NOp0WqmXTtz1iu6EOphmn1W4zvRuWYETjmFGd
      mzdv8bU3XgcGLounRpl6aALuWZieLTxiy6TTe6QccCACiCfSGJEItUaLyYkMqm6QjBv0OnVa
      VoEJ89kbnnp5C8Wc4M0fPx8aQt2Lgyz4MHBt+t1Vuo7HibnH75AaM5MUzORj//8D8jPzTEzN
      UarUnpr2WXi4AD4JTY8wNRnUuqoWCY2owSDoLZObYHIiSGfbFvmJHEIPalMjnkBV4OHGvVyt
      MVNYHBZ+gH6vTywa/jZbmxtE00G/ZeGhtSYHyYG4QDvr9/jLH/wQPR64APMLi2Tzc+Se4tM9
      TCyewPc8Oq1GKJzhqJhIRYmY+7f+WVE1ph/xnY8HnoCIKijX6kOb1esOo3cf4HseuUwKRuYG
      auUdTp99hbmRwMT7d1dQIzHww32jzMQkiXh4UvOwOBABxOJJCnOzoYmmerNNu1akY3tPuHKP
      eyXS5HMZtAOu3Z+VwfqC0tMTvgTML5zk7LkLzI5EUaYyOXqd1nC/VoBup4llWaGJpmK5QqOy
      je0HRUxRVTRdC802F0slEqaJYYRjkA6LA3GBqpUSsVQOQw8Kra546FEzFJPzrOxsbaEnMrud
      2yMUguewVukymXp+3/RloVWv4noCIxrMAzTrNeKpPLlc0DKev3BxN+4/uHa0f/EAu9/FFhqG
      djSHoRzATLBgcnqacr0dmrRo1irc3yyRmprHNJ6v4ZnM57i1tsPc3NyRb2Q0P38ClMjTE76k
      pLITTHTa3N+qcGZ5EO1aWDy1Z9qbN66DZnDxwvnH3m9+cekgsvnMHEh56vd6tDvdYNxVCGKp
      HAsFnVjkOb0uIehbNir+0fcBtAiq8FEjT+6Mv+w06lWyI8OWe2FZ1mChivHkoeCjZt/7AL5r
      c291nWQ6NeLuCMqVMj7acw+BInyiZpKZmdnhTPBRIYTAtqxHVoSNG33bo1baomc/3m2JRqOD
      3TWOR9ftsex7iXKdHssXXmc6ZQQLYhQV09C5ffsGbev5OsGoGq1Wg4379+jbT59ZPUjsfpdI
      zKRerz898UtMPJFk6dRp4saTHYhytfrQyqzjx77nTovEqBU32Co1iT1wFXZdoNdffeX5WwAg
      aZqkJ3JEjrgF8H0Py7KObMTiuNBpNR4Jzd4LTYFut//UdEfJvvcBtEiMs2fD24YL4VMuldAj
      USZfwH/u97t4jo/r+UT1o/O/44k0p049flZxHNhYuzcIRUk9faJvY3OTjqeFYoaOG4cyqNJr
      lnA9EMKi1XfJJ55vFCWVylAs1R4JaZYcPgIFXdMwok+euLJtizfe+Aqucrxby0MRQDw9zeJi
      lKQZQzOer/ALIbAsi1giyRF7QBIGk2PPguc6tJp1LMVkdurJI0ZHyaEUKeG7lEpFNjc36LvP
      1wluVrao1lt0bHHko0CSZyduJmk1OxjR4z1kfCgtgKob5NMJSvUmzzuUHzNTJCxBVCgc9USw
      5NlpVMtMzs5hxEw8L7zY/jhxaBOr3XaD7Z0iUwtnST1HrRA1U5wwxzf04IuK68Cr9XoAAAZk
      SURBVHk4toXrusRicZLm8RTAvu0O/TRazTqNZoup2ROhjbAkLy9Wvw+q9sj64ePE4ZRE4XPz
      5i2sfi/Y8lDy0nP9+iePrCY7bhxaVbx0cgGhRl5oIkzyxSQRM9gpVZ+e8Ag5HAEoKo1qlUg0
      duxjQyT7R7FUwfOPd9zUoQjA91zSuTz43oEvW5QcH2YLJziz9GzzBkfFoblAkWgM0asHezhK
      Xmp6nTa6pg1O7DnGHMowqPAcKpUKaixLzjzqJS2SwyBiGMwWTqA+ZWeMo+bQhkElkuOIHJCX
      jDVSAJKxRgpAMtZIAUjGGikAyVgjBSAZa6QAJGONFIBkrJECkIw1UgCSseaFA3OE8PHF4Byp
      iGGgMFgB5Pk+CIEWMY71SiCJBB5qAXZWPuV773/yxAtuXPmANmD3e7z//vt89NGHdLqDc6A+
      /ugDtra2WL37GZ/dXj+wTEsk+0UgACF45+33IKJy99Z13vnhDyjVu3xy9Qo/ePsd+rbFu2//
      gOufrSCAjz/8mAuXLnH+zDK379zFsft4nk+306LnQLO6Q7svQ58lx5uR4zsUCnOLvH75FT76
      8GM0TeX6tat8cu0GolPinbf/iuTiJc4uLwCCbNpk5fp1dqodTNMkYsTQNFCsGrYSx8zmSMZk
      6LPkeBMqoTEzjgqcOrWEJXTOnVvGEDZGPM3S4hzvX72C1+5xol2lYfWolx38fouaE2dxcZ5U
      KkunsoGjguJ2cDwh1wBLjjUvvB5ACJ9qpYIvFHITE6gIbMdFCA9Q8TyHuJlEe85zgSWSw0Qu
      iJGMNXIeQDLWSAFIxhopAMlYI8cpJS8Rgj/5/d/h3Js/R0pzUVUPRY3Qs10KM1N7XiEFIHlp
      cPstSo0+9pXvEU9MUF6/RS4R5V7d51d+5e+zV2COHAWSvDQ4/TZdV6ffKhE1czTKG7ieT9fV
      efXi2T39/X0RgO/7qKrsTki+eOxLqZWNiOSLiqy2JWPNvnWCd1o2lW4Q/XlqIkYsIvUlOd7s
      mwDu1yw+LXaHv2dTESkAybFHllDJWCMFIBlrpAAkY40UgGSskQKQjDXPJYB2q4XrWJQqdRzH
      wbL6B5UvieRQeOZhUN+1+OTDa0wvzoLtUa1sYcQynJyfxfd9hPDD6X0fz/P2PcMSyX7yzAJo
      Vqs4nkO/Z+FYHrlcEsexURQFVVUfOf5UVVUZHyQ59jyzALLTc/zk5AyKAp7no2naIAZoWPAf
      XfwuzwSWHHeeayb4QY2u64N/ywIu+aIjfRTJWCMFIBlrpAAkY40UgGSskQKQjDVSAJKxZk8B
      fPvb38Z1Xb7zne8cdn4kkkNlTwH4wufWrVsUS0Vqtdph50kiOTT2nAh788ffRAjBN976BrFY
      7LDzJJEcGnsKYHJyEuH7uJ6HHhnsp+X02ly79gmR1CRWr8/MdA7bclheXjq83Eok+8xjQyGu
      vP2X+HqKr3z9jUEiLUIyZdK2PSbTCZrNGtF4Dt/3HxsN6rryjDDJ8eaxApjImPz5Byt85etv
      AKDgo0YyvLo8Tbne4VSmgOd5KKqKKgSKEu5OqKqKrsutRyXHm8eW0GqjRyGXwt1NpBtxTp06
      CcDcdPyQsieRHCx7CkD4FvFYAi0G2mHnSCI5RPaeCFM0upZNPmXi75lAInk5eMxMsEKj0SRi
      GHssc5FIXh72FICiaLxyYZlaty9P0JC81Dw2FqhRKXHlvQ+QA5mSl5k9BdBtlGk6Kj/55tdk
      tJzkpWbP8m1mJolrUC2VkBubSF5mHuvi5ycn2Gk6n6sP8P0//zM++fDq8Pcv/oN/SC6f/xx3
      lEj2l8eW706ng+b7eAzmAoQQeJ6HpmnDM8GEEE/c+6daqbB6797wt+M4+5h1ieTz83gBNOpE
      U9mhj+RaXW7fvomrJvBch/xEGsfxWV5a3E3x9HPCBIIfXlvnxlplaPv5nz5P2ox+nneQSF6Y
      PQXQ3Fml1HW4/Mb5IIHvEU3PkBA2nqPT7bSIxNIIIXaD4cICeJztg5ub/Ml7d4a2b335JMnY
      Xie4SiQHz54C6La66IbKlR+8w8/+rW8NDhhWNRTPJj8zRbdnk0kl8H3/icFwD2+cpanao+k0
      DU2TAReSo2FPAcyeucDsmQshWySWYHk5AUDCTBx8ziSSQ0AO80vGGikAyVgjBSAZa6QAJGON
      FIBkrJECkIw1UgCSseb/A61k+QoxpIISAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='工作表 27' width='192'>
      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
      hgEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='德国' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5 (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
