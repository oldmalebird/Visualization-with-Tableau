<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='FAO' inline='true' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FAO' name='textscan.0cbagav12h7cdy1d4j6ey1bx4577'>
            <connection class='textscan' directory='D:/Github/Visualization_with_Tableau/VizChallenge5' filename='FAO.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Area&amp;Continent' name='excel-direct.17ypuc609xqdst1amx3001vp16xe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Github/Visualization_with_Tableau/VizChallenge5/Area&amp;Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FAO.csv].[Area]' />
              <expression op='[FAO Area].[Area]' />
            </expression>
          </clause>
          <relation name='数据透视表' type='pivot'>
            <columns>
              <column datatype='string' name='数据透视表字段名称' />
              <column datatype='integer' name='数据透视表字段值' />
            </columns>
            <tag name='数据透视表字段名称'>
              <value name='[Y1961]' />
              <value name='[Y1962]' />
              <value name='[Y1963]' />
              <value name='[Y1964]' />
              <value name='[Y1965]' />
              <value name='[Y1966]' />
              <value name='[Y1967]' />
              <value name='[Y1968]' />
              <value name='[Y1969]' />
              <value name='[Y1970]' />
              <value name='[Y1971]' />
              <value name='[Y1972]' />
              <value name='[Y1973]' />
              <value name='[Y1974]' />
              <value name='[Y1975]' />
              <value name='[Y1976]' />
              <value name='[Y1977]' />
              <value name='[Y1978]' />
              <value name='[Y1979]' />
              <value name='[Y1980]' />
              <value name='[Y1981]' />
              <value name='[Y1982]' />
              <value name='[Y1983]' />
              <value name='[Y1984]' />
              <value name='[Y1985]' />
              <value name='[Y1986]' />
              <value name='[Y1987]' />
              <value name='[Y1988]' />
              <value name='[Y1989]' />
              <value name='[Y1990]' />
              <value name='[Y1991]' />
              <value name='[Y1992]' />
              <value name='[Y1993]' />
              <value name='[Y1994]' />
              <value name='[Y1995]' />
              <value name='[Y1996]' />
              <value name='[Y1997]' />
              <value name='[Y1998]' />
              <value name='[Y1999]' />
              <value name='[Y2000]' />
              <value name='[Y2001]' />
              <value name='[Y2002]' />
              <value name='[Y2003]' />
              <value name='[Y2004]' />
              <value name='[Y2005]' />
              <value name='[Y2006]' />
              <value name='[Y2007]' />
              <value name='[Y2008]' />
              <value name='[Y2009]' />
              <value name='[Y2010]' />
              <value name='[Y2011]' />
              <value name='[Y2012]' />
              <value name='[Y2013]' />
            </tag>
            <groups>
              <group name='数据透视表字段值'>
                <field name='[FAO.csv].[Y1961]' />
                <field name='[FAO.csv].[Y1962]' />
                <field name='[FAO.csv].[Y1963]' />
                <field name='[FAO.csv].[Y1964]' />
                <field name='[FAO.csv].[Y1965]' />
                <field name='[FAO.csv].[Y1966]' />
                <field name='[FAO.csv].[Y1967]' />
                <field name='[FAO.csv].[Y1968]' />
                <field name='[FAO.csv].[Y1969]' />
                <field name='[FAO.csv].[Y1970]' />
                <field name='[FAO.csv].[Y1971]' />
                <field name='[FAO.csv].[Y1972]' />
                <field name='[FAO.csv].[Y1973]' />
                <field name='[FAO.csv].[Y1974]' />
                <field name='[FAO.csv].[Y1975]' />
                <field name='[FAO.csv].[Y1976]' />
                <field name='[FAO.csv].[Y1977]' />
                <field name='[FAO.csv].[Y1978]' />
                <field name='[FAO.csv].[Y1979]' />
                <field name='[FAO.csv].[Y1980]' />
                <field name='[FAO.csv].[Y1981]' />
                <field name='[FAO.csv].[Y1982]' />
                <field name='[FAO.csv].[Y1983]' />
                <field name='[FAO.csv].[Y1984]' />
                <field name='[FAO.csv].[Y1985]' />
                <field name='[FAO.csv].[Y1986]' />
                <field name='[FAO.csv].[Y1987]' />
                <field name='[FAO.csv].[Y1988]' />
                <field name='[FAO.csv].[Y1989]' />
                <field name='[FAO.csv].[Y1990]' />
                <field name='[FAO.csv].[Y1991]' />
                <field name='[FAO.csv].[Y1992]' />
                <field name='[FAO.csv].[Y1993]' />
                <field name='[FAO.csv].[Y1994]' />
                <field name='[FAO.csv].[Y1995]' />
                <field name='[FAO.csv].[Y1996]' />
                <field name='[FAO.csv].[Y1997]' />
                <field name='[FAO.csv].[Y1998]' />
                <field name='[FAO.csv].[Y1999]' />
                <field name='[FAO.csv].[Y2000]' />
                <field name='[FAO.csv].[Y2001]' />
                <field name='[FAO.csv].[Y2002]' />
                <field name='[FAO.csv].[Y2003]' />
                <field name='[FAO.csv].[Y2004]' />
                <field name='[FAO.csv].[Y2005]' />
                <field name='[FAO.csv].[Y2006]' />
                <field name='[FAO.csv].[Y2007]' />
                <field name='[FAO.csv].[Y2008]' />
                <field name='[FAO.csv].[Y2009]' />
                <field name='[FAO.csv].[Y2010]' />
                <field name='[FAO.csv].[Y2011]' />
                <field name='[FAO.csv].[Y2012]' />
                <field name='[FAO.csv].[Y2013]' />
              </group>
            </groups>
            <relation connection='textscan.0cbagav12h7cdy1d4j6ey1bx4577' name='FAO.csv' table='[FAO#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                <column datatype='string' name='Area Abbreviation' ordinal='0' />
                <column datatype='integer' name='Area Code' ordinal='1' />
                <column datatype='string' name='Area' ordinal='2' />
                <column datatype='integer' name='Item Code' ordinal='3' />
                <column datatype='string' name='Item' ordinal='4' />
                <column datatype='integer' name='Element Code' ordinal='5' />
                <column datatype='string' name='Element' ordinal='6' />
                <column datatype='string' name='Unit' ordinal='7' />
                <column datatype='real' name='latitude' ordinal='8' />
                <column datatype='real' name='longitude' ordinal='9' />
                <column datatype='integer' name='Y1961' ordinal='10' />
                <column datatype='integer' name='Y1962' ordinal='11' />
                <column datatype='integer' name='Y1963' ordinal='12' />
                <column datatype='integer' name='Y1964' ordinal='13' />
                <column datatype='integer' name='Y1965' ordinal='14' />
                <column datatype='integer' name='Y1966' ordinal='15' />
                <column datatype='integer' name='Y1967' ordinal='16' />
                <column datatype='integer' name='Y1968' ordinal='17' />
                <column datatype='integer' name='Y1969' ordinal='18' />
                <column datatype='integer' name='Y1970' ordinal='19' />
                <column datatype='integer' name='Y1971' ordinal='20' />
                <column datatype='integer' name='Y1972' ordinal='21' />
                <column datatype='integer' name='Y1973' ordinal='22' />
                <column datatype='integer' name='Y1974' ordinal='23' />
                <column datatype='integer' name='Y1975' ordinal='24' />
                <column datatype='integer' name='Y1976' ordinal='25' />
                <column datatype='integer' name='Y1977' ordinal='26' />
                <column datatype='integer' name='Y1978' ordinal='27' />
                <column datatype='integer' name='Y1979' ordinal='28' />
                <column datatype='integer' name='Y1980' ordinal='29' />
                <column datatype='integer' name='Y1981' ordinal='30' />
                <column datatype='integer' name='Y1982' ordinal='31' />
                <column datatype='integer' name='Y1983' ordinal='32' />
                <column datatype='integer' name='Y1984' ordinal='33' />
                <column datatype='integer' name='Y1985' ordinal='34' />
                <column datatype='integer' name='Y1986' ordinal='35' />
                <column datatype='integer' name='Y1987' ordinal='36' />
                <column datatype='integer' name='Y1988' ordinal='37' />
                <column datatype='integer' name='Y1989' ordinal='38' />
                <column datatype='integer' name='Y1990' ordinal='39' />
                <column datatype='integer' name='Y1991' ordinal='40' />
                <column datatype='integer' name='Y1992' ordinal='41' />
                <column datatype='integer' name='Y1993' ordinal='42' />
                <column datatype='integer' name='Y1994' ordinal='43' />
                <column datatype='integer' name='Y1995' ordinal='44' />
                <column datatype='integer' name='Y1996' ordinal='45' />
                <column datatype='integer' name='Y1997' ordinal='46' />
                <column datatype='integer' name='Y1998' ordinal='47' />
                <column datatype='integer' name='Y1999' ordinal='48' />
                <column datatype='integer' name='Y2000' ordinal='49' />
                <column datatype='integer' name='Y2001' ordinal='50' />
                <column datatype='integer' name='Y2002' ordinal='51' />
                <column datatype='integer' name='Y2003' ordinal='52' />
                <column datatype='integer' name='Y2004' ordinal='53' />
                <column datatype='integer' name='Y2005' ordinal='54' />
                <column datatype='integer' name='Y2006' ordinal='55' />
                <column datatype='integer' name='Y2007' ordinal='56' />
                <column datatype='integer' name='Y2008' ordinal='57' />
                <column datatype='integer' name='Y2009' ordinal='58' />
                <column datatype='integer' name='Y2010' ordinal='59' />
                <column datatype='integer' name='Y2011' ordinal='60' />
                <column datatype='integer' name='Y2012' ordinal='61' />
                <column datatype='integer' name='Y2013' ordinal='62' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.17ypuc609xqdst1amx3001vp16xe' name='FAO Area' table='[&apos;FAO Area$&apos;]' type='table'>
            <columns gridOrigin='A1:B175:no:A1:B175:0' header='yes' outcome='6'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Area (FAO Area)]' value='[FAO Area].[Area]' />
          <map key='[Area Abbreviation]' value='[FAO.csv].[Area Abbreviation]' />
          <map key='[Area Code]' value='[FAO.csv].[Area Code]' />
          <map key='[Area]' value='[FAO.csv].[Area]' />
          <map key='[Continent]' value='[FAO Area].[Continent]' />
          <map key='[Element Code]' value='[FAO.csv].[Element Code]' />
          <map key='[Element]' value='[FAO.csv].[Element]' />
          <map key='[Item Code]' value='[FAO.csv].[Item Code]' />
          <map key='[Item]' value='[FAO.csv].[Item]' />
          <map key='[Unit]' value='[FAO.csv].[Unit]' />
          <map key='[latitude]' value='[FAO.csv].[latitude]' />
          <map key='[longitude]' value='[FAO.csv].[longitude]' />
          <map key='[数据透视表字段值]' value='[数据透视表].[数据透视表字段值]' />
          <map key='[数据透视表字段名称]' value='[数据透视表].[数据透视表字段名称]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Abbreviation]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Abbreviation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Element Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Element]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段名称</remote-name>
            <remote-type>129</remote-type>
            <local-name>[数据透视表字段名称]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段名称</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段值</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数据透视表字段值]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段值</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (FAO Area)]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B175:no:A1:B175:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[Area (FAO Area)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Element Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Item]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Alcoholic Beverages&quot;</value>
            <value>&quot;Beer&quot;</value>
            <value>&quot;Beverages, Alcoholic&quot;</value>
            <value>&quot;Beverages, Fermented&quot;</value>
            <value>&quot;Coffee and products&quot;</value>
            <value>&quot;Stimulants&quot;</value>
            <value>&quot;Tea (including mate)&quot;</value>
            <value>&quot;Wine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats and oil&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Butter, Ghee&quot;</value>
            <value>&quot;Coconut Oil&quot;</value>
            <value>&quot;Cottonseed Oil&quot;</value>
            <value>&quot;Cream&quot;</value>
            <value>&quot;Fats, Animals, Raw&quot;</value>
            <value>&quot;Fish, Body Oil&quot;</value>
            <value>&quot;Fish, Liver Oil&quot;</value>
            <value>&quot;Groundnut Oil&quot;</value>
            <value>&quot;Maize Germ Oil&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Oilcrops Oil, Other&quot;</value>
            <value>&quot;Oilcrops, Other&quot;</value>
            <value>&quot;Olive Oil&quot;</value>
            <value>&quot;Palm Oil&quot;</value>
            <value>&quot;Palmkernel Oil&quot;</value>
            <value>&quot;Rape and Mustard Oil&quot;</value>
            <value>&quot;Ricebran Oil&quot;</value>
            <value>&quot;Sesameseed Oil&quot;</value>
            <value>&quot;Soyabean Oil&quot;</value>
            <value>&quot;Sunflowerseed Oil&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
            <value>&quot;Aquatic Animals, Others&quot;</value>
            <value>&quot;Aquatic Products, Other&quot;</value>
            <value>&quot;Cephalopods&quot;</value>
            <value>&quot;Crustaceans&quot;</value>
            <value>&quot;Demersal Fish&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Freshwater Fish&quot;</value>
            <value>&quot;Marine Fish, Other&quot;</value>
            <value>&quot;Molluscs, Other&quot;</value>
            <value>&quot;Pelagic Fish&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruits&quot;'>
            <value>&quot;Apples and products&quot;</value>
            <value>&quot;Bananas&quot;</value>
            <value>&quot;Citrus, Other&quot;</value>
            <value>&quot;Coconuts - Incl Copra&quot;</value>
            <value>&quot;Dates&quot;</value>
            <value>&quot;Fruits - Excluding Wine&quot;</value>
            <value>&quot;Fruits, Other&quot;</value>
            <value>&quot;Grapefruit and products&quot;</value>
            <value>&quot;Grapes and products (excl wine)&quot;</value>
            <value>&quot;Lemons, Limes and products&quot;</value>
            <value>&quot;Olives (including preserved)&quot;</value>
            <value>&quot;Oranges, Mandarines&quot;</value>
            <value>&quot;Pineapples and products&quot;</value>
            <value>&quot;Plantains&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains, Roots&quot;'>
            <value>&quot;Barley and products&quot;</value>
            <value>&quot;Cassava and products&quot;</value>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Cereals, Other&quot;</value>
            <value>&quot;Maize and products&quot;</value>
            <value>&quot;Millet and products&quot;</value>
            <value>&quot;Oats&quot;</value>
            <value>&quot;Potatoes and products&quot;</value>
            <value>&quot;Rice (Milled Equivalent)&quot;</value>
            <value>&quot;Roots, Other&quot;</value>
            <value>&quot;Rye and products&quot;</value>
            <value>&quot;Sorghum and products&quot;</value>
            <value>&quot;Soyabeans&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sweet potatoes&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
            <value>&quot;Yams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bovine Meat&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Meat, Aquatic Mammals&quot;</value>
            <value>&quot;Meat, Other&quot;</value>
            <value>&quot;Mutton &amp; Goat Meat&quot;</value>
            <value>&quot;Pigmeat&quot;</value>
            <value>&quot;Poultry Meat&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Infant food&quot;</value>
            <value>&quot;Miscellaneous&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Offals, Edible&quot;</value>
            <value>&quot;Pulses&quot;</value>
            <value>&quot;Pulses, Other and products&quot;</value>
            <value>&quot;Spices&quot;</value>
            <value>&quot;Spices, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seed, nuts&quot;'>
            <value>&quot;Cloves&quot;</value>
            <value>&quot;Cocoa Beans and products&quot;</value>
            <value>&quot;Cottonseed&quot;</value>
            <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Palm kernels&quot;</value>
            <value>&quot;Rape and Mustardseed&quot;</value>
            <value>&quot;Sesame seed&quot;</value>
            <value>&quot;Sunflower seed&quot;</value>
            <value>&quot;Treenuts&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Suger&quot;'>
            <value>&quot;Sugar (Raw Equivalent)&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar beet&quot;</value>
            <value>&quot;Sugar cane&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
            <value>&quot;Sugar non-centrifugal&quot;</value>
            <value>&quot;Sweeteners, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vegetables&quot;'>
            <value>&quot;Aquatic Plants&quot;</value>
            <value>&quot;Beans&quot;</value>
            <value>&quot;Honey&quot;</value>
            <value>&quot;Onions&quot;</value>
            <value>&quot;Peas&quot;</value>
            <value>&quot;Pepper&quot;</value>
            <value>&quot;Pimento&quot;</value>
            <value>&quot;Tomatoes and products&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Vegetables, Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Unit]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
        <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
      </column>
      <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
      <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <group caption='工具提示(Area)' hidden='true' name='[Tooltip (Area)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area, Area Code'>
          <field>[Area]</field>
          <field>[Area Code]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.535565' measure-ordering='alphabetic' measure-percentage='0.319386' parameter-percentage='0.145049' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bovine Meat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spices, Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vegetables, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groundnut Oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Offals, Edible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops Oil, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages, Alcoholic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poultry Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rape and Mustard Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rye and products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweeteners, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treenuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aquatic Plants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocoa Beans and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pimento&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter, Ghee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Potatoes and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apples and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barley and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottonseed Oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Infant food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mutton &amp; Goat Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pulses, Other and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sesameseed Oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demersal Fish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapes and products (excl wine)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelagic Fish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquatic Animals, Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts - Incl Copra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemons, Limes and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maize and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olives (including preserved)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pigmeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Fermented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fats, Animals, Raw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassava and products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges, Mandarines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rape and Mustardseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aquatic Products, Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rice (Milled Equivalent)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflowerseed Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Groundnuts (Shelled Eq)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize Germ Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat, Aquatic Mammals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tomatoes and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cereals, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapefruit and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Fish, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmkernel Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sugar (Raw Equivalent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fruits, Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soyabeans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coffee and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fish, Liver Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar non-centrifugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshwater Fish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soyabean Oil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tea (including mate)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cephalopods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ricebran Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roots, Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Citrus, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crustaceans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oilcrops, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sorghum and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coconut Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fish, Body Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pineapples and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molluscs, Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Oil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Item (组)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fats and oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains, Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fish, Aquatic Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seed, nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C�te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1961'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='1992list'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='1991' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Romania&quot;</value>
                <value>0.20231213872832371</value>
                <value>0.83622475641739269</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;Iceland&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='100000' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Country1992'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area)]'>
            <groupfilter function='level-members' level='[Area]' user:ui-action-filter='[Action - Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1985' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1986' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1987' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1988' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1989' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1990' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1991' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1993' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1994' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='GroupTop5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='ItemTop5 '>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rank各国各item'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:7]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Beer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='5' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='6' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='7' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='8' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='9' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='feed 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed总量'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food-area,item group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='level-members' level='[none:数据透视表字段名称 - 拆分 1:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='food-item,area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='foodfeed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1992' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='food肉蛋'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='gif area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='33' lines='true' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='gif continent  food'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif continent feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-transparency' value='173' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <geometry column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Latitude (generated)]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='map点'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Area:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='level-members' level='[none:数据透视表字段名称 - 拆分 1:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]' field-type='quantitative' max='20839916.792512849' min='-16930134.084558219' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]' field-type='quantitative' max='13219745.985721063' min='-8241024.1087532481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='milk'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Milk - Excluding Butter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcdf:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;China, mainland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='德国'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='仪表板 1'>
      <style />
      <size maxheight='1027' maxwidth='1569' minheight='1027' minwidth='1569' preset-index='15' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Item]' new-bin='true'>
            <bin default-name='false' value='&quot;Beverages&quot;'>
              <value>&quot;Alcoholic Beverages&quot;</value>
              <value>&quot;Beer&quot;</value>
              <value>&quot;Beverages, Alcoholic&quot;</value>
              <value>&quot;Beverages, Fermented&quot;</value>
              <value>&quot;Coffee and products&quot;</value>
              <value>&quot;Stimulants&quot;</value>
              <value>&quot;Tea (including mate)&quot;</value>
              <value>&quot;Wine&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fats and oil&quot;'>
              <value>&quot;Animal fats&quot;</value>
              <value>&quot;Butter, Ghee&quot;</value>
              <value>&quot;Coconut Oil&quot;</value>
              <value>&quot;Cottonseed Oil&quot;</value>
              <value>&quot;Cream&quot;</value>
              <value>&quot;Fats, Animals, Raw&quot;</value>
              <value>&quot;Fish, Body Oil&quot;</value>
              <value>&quot;Fish, Liver Oil&quot;</value>
              <value>&quot;Groundnut Oil&quot;</value>
              <value>&quot;Maize Germ Oil&quot;</value>
              <value>&quot;Oilcrops&quot;</value>
              <value>&quot;Oilcrops Oil, Other&quot;</value>
              <value>&quot;Oilcrops, Other&quot;</value>
              <value>&quot;Olive Oil&quot;</value>
              <value>&quot;Palm Oil&quot;</value>
              <value>&quot;Palmkernel Oil&quot;</value>
              <value>&quot;Rape and Mustard Oil&quot;</value>
              <value>&quot;Ricebran Oil&quot;</value>
              <value>&quot;Sesameseed Oil&quot;</value>
              <value>&quot;Soyabean Oil&quot;</value>
              <value>&quot;Sunflowerseed Oil&quot;</value>
              <value>&quot;Vegetable Oils&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
              <value>&quot;Aquatic Animals, Others&quot;</value>
              <value>&quot;Aquatic Products, Other&quot;</value>
              <value>&quot;Cephalopods&quot;</value>
              <value>&quot;Crustaceans&quot;</value>
              <value>&quot;Demersal Fish&quot;</value>
              <value>&quot;Fish, Seafood&quot;</value>
              <value>&quot;Freshwater Fish&quot;</value>
              <value>&quot;Marine Fish, Other&quot;</value>
              <value>&quot;Molluscs, Other&quot;</value>
              <value>&quot;Pelagic Fish&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fruits&quot;'>
              <value>&quot;Apples and products&quot;</value>
              <value>&quot;Bananas&quot;</value>
              <value>&quot;Citrus, Other&quot;</value>
              <value>&quot;Coconuts - Incl Copra&quot;</value>
              <value>&quot;Dates&quot;</value>
              <value>&quot;Fruits - Excluding Wine&quot;</value>
              <value>&quot;Fruits, Other&quot;</value>
              <value>&quot;Grapefruit and products&quot;</value>
              <value>&quot;Grapes and products (excl wine)&quot;</value>
              <value>&quot;Lemons, Limes and products&quot;</value>
              <value>&quot;Olives (including preserved)&quot;</value>
              <value>&quot;Oranges, Mandarines&quot;</value>
              <value>&quot;Pineapples and products&quot;</value>
              <value>&quot;Plantains&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Grains, Roots&quot;'>
              <value>&quot;Barley and products&quot;</value>
              <value>&quot;Cassava and products&quot;</value>
              <value>&quot;Cereals - Excluding Beer&quot;</value>
              <value>&quot;Cereals, Other&quot;</value>
              <value>&quot;Maize and products&quot;</value>
              <value>&quot;Millet and products&quot;</value>
              <value>&quot;Oats&quot;</value>
              <value>&quot;Potatoes and products&quot;</value>
              <value>&quot;Rice (Milled Equivalent)&quot;</value>
              <value>&quot;Roots, Other&quot;</value>
              <value>&quot;Rye and products&quot;</value>
              <value>&quot;Sorghum and products&quot;</value>
              <value>&quot;Soyabeans&quot;</value>
              <value>&quot;Starchy Roots&quot;</value>
              <value>&quot;Sweet potatoes&quot;</value>
              <value>&quot;Wheat and products&quot;</value>
              <value>&quot;Yams&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Meat&quot;'>
              <value>&quot;Bovine Meat&quot;</value>
              <value>&quot;Meat&quot;</value>
              <value>&quot;Meat, Aquatic Mammals&quot;</value>
              <value>&quot;Meat, Other&quot;</value>
              <value>&quot;Mutton &amp; Goat Meat&quot;</value>
              <value>&quot;Pigmeat&quot;</value>
              <value>&quot;Poultry Meat&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;Infant food&quot;</value>
              <value>&quot;Miscellaneous&quot;</value>
              <value>&quot;Offals&quot;</value>
              <value>&quot;Offals, Edible&quot;</value>
              <value>&quot;Pulses&quot;</value>
              <value>&quot;Pulses, Other and products&quot;</value>
              <value>&quot;Spices&quot;</value>
              <value>&quot;Spices, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Seed, nuts&quot;'>
              <value>&quot;Cloves&quot;</value>
              <value>&quot;Cocoa Beans and products&quot;</value>
              <value>&quot;Cottonseed&quot;</value>
              <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
              <value>&quot;Nuts and products&quot;</value>
              <value>&quot;Palm kernels&quot;</value>
              <value>&quot;Rape and Mustardseed&quot;</value>
              <value>&quot;Sesame seed&quot;</value>
              <value>&quot;Sunflower seed&quot;</value>
              <value>&quot;Treenuts&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Suger&quot;'>
              <value>&quot;Sugar (Raw Equivalent)&quot;</value>
              <value>&quot;Sugar &amp; Sweeteners&quot;</value>
              <value>&quot;Sugar beet&quot;</value>
              <value>&quot;Sugar cane&quot;</value>
              <value>&quot;Sugar Crops&quot;</value>
              <value>&quot;Sugar non-centrifugal&quot;</value>
              <value>&quot;Sweeteners, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vegetables&quot;'>
              <value>&quot;Aquatic Plants&quot;</value>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Honey&quot;</value>
              <value>&quot;Onions&quot;</value>
              <value>&quot;Peas&quot;</value>
              <value>&quot;Pepper&quot;</value>
              <value>&quot;Pimento&quot;</value>
              <value>&quot;Tomatoes and products&quot;</value>
              <value>&quot;Vegetables&quot;</value>
              <value>&quot;Vegetables, Other&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98442' id='5' param='horz' type='layout-flow' w='98980' x='510' y='779'>
            <zone h='98442' id='3' type='layout-basic' w='88782' x='510' y='779'>
              <zone h='49221' id='7' name='feed总量' w='88782' x='510' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49221' id='9' name='food肉蛋' w='88782' x='510' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98442' id='4' is-fixed='true' param='vert' type='layout-flow' w='10198' x='89292' y='779'>
              <zone h='8666' id='8' name='feed总量' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27167' id='10' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' w='10198' x='89292' y='9445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8666' id='11' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='36612'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='1961'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='foodfeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='food-item,area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-area,item group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Country1992'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1992list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent  food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1994</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='milk'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GroupTop5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ItemTop5 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]' show-morefewerbutton='false' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='德国'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rank各国各item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:11]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food肉蛋'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed总量'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='仪表板 1'>
      <viewpoints>
        <viewpoint name='feed总量'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='food肉蛋'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1961' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaeUlEQVR4nO2debBk133XP3ftfXv7Mm+ZGc1obEdOZBTJkmOpILaUgOIQqAAJxWbApFJF
      kYIiwVCmXKTKUCaV/BOqjI3/gAJMoDAxyGUcbOMlFootyRp5NItmefP2pd/rfb3LOfzx5o3m
      TY80/V7fVndPn0/V/DH9+v7ur++533vOPed8z9GklBKFYkjRgwwWhJY6jSGlfKBidMqDEqNb
      ZRKoAIQQHcfwfb+j46vVKuvr6x3n0elvEUJ0XGCdXosHLUYQZXI3gQpAoRg0lAAUQ40SgGKo
      UQJQDDVKAIqhRglAMdSY7XxJSokQAl3X8X0fXdeQUkNKgWEYAGia1tVEFYpu0JYAhOfw5vUV
      RpNhdvYK6LYNUlDJFxiZnGF+fg5rXwc9HzQ5GOzoh4GXgzi9Pt73BeL2dQEhJUJIXN+n6Xg4
      ro8nBK7n3/4nJTRdDyElTcfF0HWcW58f4PmipW9dSnA8ryWPgweokOB6xxgTuJW/ph+/0SKF
      4NnHH2Y0Fbv9WVsC0A2LWMTG8QSpRJSioxGxNEbmZtjOlVheWeX04lwgA2FCiI5qk4MBqE5y
      Obj5O4lx8Ds6/S13Hi8B39+/UUvVBvly/da/GsVKg0KlTrHaoFp3qNSb1JsujrdfY+uajqaB
      oevouoah61imgW0ZWKaBZRhY5v5nlmmgaxq2ZaDrOoYG+q3v35mPaegY+uHfp2katmm0/hZN
      Q9d1NE0jEQkd42rcEoDWgQDkfnneWa7t1QC+g5CSkbEJ6vUG41GLpm8QCZlkRkdxpYWu60gp
      bzeJjp9kZzEM41ahdRDj4Obv9Ldotwq9XYSQuJ5PsdpgO1dmZTvHTqHK1l6ZXKlGoVxHApZp
      kIqFySQi+/+SUSZGEpydnyAVDxML28QjISJhC0MD02yrmN8Wz/N6HiOIMtlvvuuHRdzOgYYV
      ZnFxEYB4LApA+PZfbY6j52FFSonrC8rVBjc2cyxv5ljeyrOZ27/JTUMnGQszM5pkaiTOyakR
      nnzfIqOpKJlEFNM42hPQu0dzRPEWncla8Y4IKanWmixt7nFtbY+ra1nWd4qU601SsQiL0xlO
      z47y3BMPMzWaZCQZRb/j6RTEk1fxzqirGyCO57O2U+BHb67z+rUNNnZLhGyTkzOjnDkxxi98
      6H2cGE+RjIXvH0zxrqAE0AGeL1jeyvHihWVev7ZBodJgejTBo2dn+es//xjzk2ks9QTva1Tp
      HJGm63HhxhbffPkqb65mmRlL8uRPLPIP/8ozTI4kbjdhfN9XYyMDgBJAGwgpubmZ42svXebl
      S6s8NDfGsz/9ML/xlz6MbalLOMio0nsHqg2H752/wVdfvEQkZPH8U+/h7/zCE4TUTf/AoEry
      LqSU7OQr/Lf/e57Xrm7wofef5FN/8yNMZBK9Tk3RBZQAbiGl5NraLv/lm6+xsVvkLzz9CH/v
      F5/EuseopuLBYegFIKXkysoOX3zhB7iez8f/3OP8xKmpQEa1Ff3P0Arg4In/xRd+QMNx+dvP
      P8Ejp6dv/02tFjMcDKUAsoUKn//KS2QLFf7Wn32c9z80rbosh5ShEkCt6fAH33iN756/wSc+
      9kGeeN/CoakHiuHjSAIQvke96RKydDyhIX0POxRC0/W+vpGklLx8eY3P/eGLPPv4w/zb3/zl
      e07ZVQwfRxLA5uoyO7kCdiyJqfkU9wqkxyaYW5gnbBkdz6EHAp/LX6w2+Ddf/j5Nx+O3/+7P
      MTWy3515v3MEkUc75+lmDg9SjCA8GgfHH3k69AGj4+NsZffQNQ1Ntzh1co7N3Txra+ucXpw7
      dmJBcqcj7IeXVvnC//oT/uqzH+CZnzrVdjtfvQQPD9pRFsf1nCa1pkfE1nGFjm0ZSOHhS4Nw
      yML3/Y67DjudAlypVNjZ3eOrL6+yli3wm7/6pw9Z4NohKPPFUQ0xd9MPRpR+idFTQ8ztL9sh
      kva+/cW6I4T1dgf0gHKpzG9/8Wt89OnH+fVfegrjiAYSxXDxQN0duWuX+NZn/gkff+5RfvWj
      H1A3v+K+PDDdoOs//GPe+IMv8mf+wSfxI/Fep6MYEAZeAFJKlr71Aje++QJPf+p38QyLQqHQ
      67QUA8JAtxGklFz/+v9g+Ttf55lP/R7hVKbXKSkGjIEWwOr3v8HaS9/mZz75WaxItNfpKAaQ
      gRXAxisvcvkrX+Kpf/wZdfMrjs1ACmDvzQtc+M+f58P/9F9jx9QLr+L4DJwAKtsb/OD3P8OT
      /+hfEMmM9jodxYAzUALwGjX+3+/+cx77td8iMTPf63QUDwADIwApBC9/7rOc+tnnGX/vT/Y6
      HcUDQuDjANevXweg0WgwNjZGPB7nypUrTExMUCgUME2TeDzOxMQEtm23HffNr/5XDDvEqY/+
      YtApK4aYwGuAer1OuVwmmUxSq9UoFArMz8+zvb1NMpkEYH19nbW1tbZjZi+dZ/k7X+fRj/+G
      cm4pAuVohhjPIVeskojaOEJHuE1i8Ri6bqLfWic+Go0ipaRSqTA6OoplWaysrDA7O0uhUGBu
      bo50Ok2j0WjrnI1ijpc/91me/me/gxmOHP0XKhTvwJGmQ2+v3WR9J080mcLEJb+bJ5EZ5cT8
      AtGQSbFYJJ/Pd5TQwU4isN/uf/ULv8PMYz/D9J96qq3ja7UapVKJqampwPI4DgeXtdMNMjrJ
      QcW4//FHqwGEBOnjuS4YBmceOsna9i6bm5s8dHKeWCxGNNrZoNSdnoIr//NLLJx+iJ/82C+3
      fXy1WiUajTI7O9tRHkFc7E53iAnCX/EgxehGmRxJAFMn5kmPT2NbBr7UMA2d96RHEewHNQwj
      MENMceUGmy99m4/8y89jHOFl2XVdbNsmFDr+th3KENN/MfrCEKPpBpHIfgK309B1graXC9/n
      5c99lp/+9U8e6eZXKI5KX44DLH/3f5NaOM3I6Yd7nYriAafvBOA16lz68n/kkV/5RK9TUQwB
      fSeAS//9P3Dm5/8ioWSq16kohoC+EkA1u8XO+T/h9HN/vtepKIaEvhGAlJLz//73ed+vfALd
      GHinpmJA6BsB5G9coVkuMvXoB3udimKI6AsBSCm58KUv8FN/4+/3OhXFkNEXAqhsruLWKmRO
      ne11Koohoy8EcPkP/xPnfumv9ToNxRDScwH4TpOdN15j5rEP9ToVxRDScwEsf/frLHz4o2qe
      v6In9FwAN775Aid/9vlep6EYUo7U4V4u5NjeKzA5PoIrTYRTI5lKY5gWhn70J3htbwdN04mN
      dzZ3X6E4LkcSQDyVoVgqk80VQDjs7eSIJdPMzi8Qj9gIIY60scT1P/oKc08/i+d5tz8TQhz6
      /1HxfR/f9zuKcZBHJ5tkSCnRNK2jHU06vRYPWoxONy651/FHtEQ20awIVHLUfYNz586wurHN
      zs4OyZP7y5QcZf776ovf4iP/6gstc7w7mfN94Eno1JfQ6Vz+IAwx0Nm1eNBi9NwRppshZqbG
      gfHbn70nNQK8Zf1rt8BLa8skZxeworGWY4J4Ie4kRhB2xiDy6Jcc+iFGt8rkaIaYAHtqlr71
      AgvPPKd6fxQ9pSe9QFII1n/wPdX3r+g5PRHA3tWLpBZOY1jK7qjoLT0RwM1vf42Fp5/rxakV
      ikO0CMD3PIo7G3z/pVfprNPq3kgp2bnwKtOPPtGF6ArF0WgRgFMv8aMLF6k7bleqh9LqEskT
      ixj28ZctUSiCouUer+WybBVcHjl3im7slZ69dJ7RM+/tQmSF4ui0dIOOLpzlY+NzHa/w9nbk
      r19h4Zmf60psheKotNQAe9sbnD9/nh9fuEC14QZ+wsLNq2ROnQk8rkJxHFoEEIommZmaQNMt
      omEr0JNJIfAdBzOkVnlW9ActTaBYPI5l2yRrNYIeo61srxObmELrcJVghSIoWgRQyufIbm5S
      N00coTE5mg7sZPnrV0gvPhRYPIWiU1oexboGumlhh8KE7GCbQPmlNxl5SPUAKfqHFgHEUxnM
      kIXueERjh3uChO+yvLxKuZQjmyuytblBo9HAE+11mOauXSJzSi14q+gfWppA+d1tmp5PLBam
      3vCwo2/VAhvLS9R8C5Evo0mXXDbPXq7IzNw8yVj4viaSZqmAGU++ozHiQTLEHMTpJId+MKL0
      U4xOyuRex7cIwDAtark9mrEE0YmZQ3+LxuLsbm7jO2F0y+bs2dOsb2XJ5XJkknP7x7+N6cGp
      VjDDEaxQ6B2nQHe6kcKBGabTzRgONvw4LmqDjGBjBFUm990gI5kZZXbRx5MQves+HZmcYWTy
      sCgevmWIuR/ljRUSM/Nq/r+ir2h5PHmVIvlaA88H2wxu75fC0puqB0jRd7QIoFqrU87tUK43
      O2pv3U1+6SqZk2rpQ0V/0VoDaDoIgYGP5wcngMLSVVILpwOLp1AEQetkuPFxwpEouUKeoJrr
      Ukq8Rg0rEgsmoEIREC01QG5nm921NYrNJjt7uUBO0izmsWIJ9A57EhSKoGkRQDQWx4rFCKGR
      SgWzT1d5Y4XkiYVAYikUQdLySI7EE8zGE/svwAG1gYorN0jNnQwklkIRJC01QL1S5o0L57l8
      6Q0KlWD8AMWVG6QWVBeoov9oEUCzWaderWOF4oTCwYwDFFeXVA2g6EtaDTGhCIloBKdZx+9g
      HsudOJUSViwRSCyFIkju+Q4wNj1LMpXCtDrvtXGqZcxwVPUAKfqSe87U2tlY5oevvI4fwAlK
      azdJzqo5QIr+5J6PZdfxKOXLBNEAKq4skVTtf0Wf0iIAKQXpTJqCY7T8sV7MsrRdIRMzafjg
      1atkxiZIZzKYb7NDTHHlOtMfeLIbuSsUHdMqAOGymy1A08MF7ly/zXE8pHCoexaW7uEKn42N
      DRxPMDmWuafhoLh6kzPP/+W2zRDKEHM4h34xovRLjK4bYkBy48YSo7ML3N0JaoZCGICtC1xs
      Zk9kKFcqCN4ywtxtWHArRSLpkbbNEMoQ8xb9YETplxjvmiFGN8KcOXcGt+Hj3/WFWHKEc8nD
      BphY4u2nS/hOE9DUOqCKvuWej6dMPMTqbqGlBjgq1ewWkZFx1QOk6FvuKYBQNE7E1DvuBaps
      rZOYmeswikLRPVodYYUsr75+ESMAO2RpdYnE7HzHcRSKbtEigFh6nIdPzSPu9ccjsj8NWo0B
      KPqXe97jpVIZ6XkdN4HKm2uqCaToa+7ZLxWJhhmbSdLpwohevYoVVTZIRf/SUgNIKdjb2aHR
      cDqaC+Q1G2i6gW4Gu76oQhEkLQJYv/g6ddMkkRrvqBu0WcwTSqZVF6iir2kRQHp6hlQshVfL
      d1QDNEsFQslgPMUKRbdoeQcwo0nOnT1HPBHvKHA9t0s4M9ZRDIWi27TUAI1Gg1Ixx8bN6+Rq
      x/cE13a3iY1PdZScQtFtWl+CvSbZ7C4lRxI1jz8SUM/vqRpA0fe03OHJZIaF0w8xPhKn2Wge
      O3A9t0MkM9pRcgpFt2n1A1Sr7NYrVHfzjIxqpJJv7RIjpeDipSuMJKPUPIlbq5EZm2B0bLTF
      ENPI54iMjHf/FygUHdAiAGEbyLwLvsvI2OEmzNbKDXb2CkRiMWwDpA7b21t4QjI1PnLIcODU
      Kmh26MgmCGWIOZxDvxhR+iVG1w0xVjTBqYUYiBNI43ALaXxmHuw4Oh4NYTI9m6FWr+FrRosh
      xm82scMRjCOaIJQh5i36wYjSLzHeNUPM7ZPc40SmZTM9fbhnJ5ZItnxPeC6arqFbahRY0d90
      Zcdqt17DikTVKLCi7+mKALxGHTMcvf8XFYoe0x0B1GuY4Ug3QisUgdIVATjVMna89d1Aoeg3
      uiOAcgkr1tlcIoXi3aArAmiWi4TeYbkUhaJf6E4NUCmpqdCKgaBrArCiaj8ARf/TnSZQqahq
      AMVA0L0mUCLdjdAKRaB0qReoiBVXvUCK/qcrAhC+h2HZ3QitUARKVwTgO45aDkUxEBxpfmq1
      lOfmygbRWBRPvmWIGZ8YP2SIkb6vBKAYCI4kgHA0ivQ9fN0krAt02yC7s40nJDOTYwghEL6P
      ED4CEMcwQChDzOEc+sWI0i8x3oUdYt6eWqWMHYmRCBk4MsT0zAj1Rh0P67ZRQboOZih8bPOD
      MsS8RT8YUfolxrtmiHknEukxEunDNslo/PCAl+80MWz1AqwYDAJ/CfZdR/UAKQaG4AXgOOiW
      2hNMMRgELgDhOhjKC6wYELpQAzQxQuGgwyoUXSFwARwY4hWKQSBwAXiNuqoBFAND8AJo1pUh
      XjEwBC8A1QRSDBBdaQKpGkAxKHSlBlCLYikGhS7UAA1VAygGhuC7QRtVjLDqBVIMBl15B7Ai
      anNsxWBwtOnQ5QJLN1cJRaP4UuJUq4yMTzI5NXnbEOM3GphqHEAxIBxJAKZpkhqbQHgOSEGI
      MLu7WTwhOTE9gRACp1ZFs+xjmx+UIeZwDv1iROmXGL01xFRr1CoVMqkYrrTIjI6RbtZx7zDE
      IHyscEQZYpQhJtAYfWGISY9NkB6bOPRZJHa4vS98H00/fpIKxbtJ4C/B0vfQTSUAxWAQvB/A
      99H0zqpLheLdIvgaQPjoRleWG1IoAqcLTSAfzVA1gGIwCFwAj/3ab6ndIRUDQ+ACGDv3SNAh
      FYquoRrriqFGCUAx1CgBKIYaJQDFUKMEoBhqlAAUQ40SgGKoOdKQbaNaZiNbwJQNaq6kUS4z
      MjnNzMz0oR1iFIpB4Wg7xMQSRMoVXCdERBdEzST53B6+kMzPTnVsWABliLk7h34xovRLjN4a
      YsoFCoUSE2MZPCxSsRAZp4Ej7dtGhU4MC6AMMXfSD0aUfonRF4aYaCLNe84d3gA7rFaBUwww
      6iVYMdQoASiGGiUAxVCjBKAYapQAFEONEoBiqFECUAw1SgCKoUYJQDHUKAEohppjTc5o1is0
      fR3hNojFE+iGidFHs0GllFy7do10Os3Ozg5nz56lUqmQz+cJ39q8o1QqMT09TSKRUMu4DDHH
      EsDmVhZPOOSzeeLpEU7ML5CIhoLOrSPS6TSbm5tMTU2xu7tLvV5H0zSq1SpCiNufLS4ukk6n
      7x9Q8UByrCaQFC6ub3D2zCmE77K1tRV0Xh0hpeTq1askk0lu3ryJaZrouk6pVMLzPDRN4+zZ
      s0SjUarVaq/TVfQQTR5jgrXwPYTU0HUNpECgYxo6vu/3fDp0pVKhUChw4sSJY8eQUiKEUNOh
      +yhGUGVy93ToYwng7YILIToqcKDjGEFcqKDyADp6v+iH69lPMQ48AUEeH9gqtoZhdPzEAwKJ
      EcTN22keQQigX65nP8SQUiKl7CiGEAJN07pTAygUg0iw65gLlws/vojUJI60ODE9yeTE2H0P
      y+2uU3cjFHdX0KSk4NucmhlncnLivscesLG6RLFSx3EcNKkhLZvpiUkmxkfaOl5KyfK1y9Rd
      n3pzv60YClmMT84wlkm2nceV117BzIxQ3CthhwxMw2T6xAKpeHubh/tukR+dX2Z8PEkuV8a2
      fEw7zomFRWKh9oprffk6nhGjWc7i+5JC3WP+xCwzU5O0VyFJNleX2dgtEjYkmoSytFicmWBy
      YrytHADeeP1VTDtMo+EAGrptMzkxycRYe2UifIcfn/8x8USMYqWJYejYtsXE1Cyj6UQ7EXjz
      4mXGpydYXlohkkhSqzewaWCERlg4uYDx6U9/+tNt/6L7ns+h5hpYho6pa+S2lrHSU0Ttd26P
      hyMhapUmumVgmBYhQ5LfzaKFEsTb7F6tVauMZlIQimLqGroGWysrpCanCLW1ZZOkVq3h1Suk
      puYwNRDCZ31plamFE7QToVktcPXGKq6QTI+PEYpGaFaqbGZzTE9P0s69JxyHvcIe5bpkOhMj
      nEpRzRfYLVeZGh9tIwJsbaxTLFWJJpPYlkXUMigWc7jSIpVox8KqYWo+keQIuq5jWCa2Lsll
      dzAjKWIRu40Ykt2dLNL3SE/MYGigabC5tExmZga7nU1UNB2nUWJvN8/E3AKmriF8j/Xldabm
      Z9soEw1NeLhCkIxEyJYdxtMxErEExXKJfLEScA1ghIlaguTUAgiPcjpJOmrd97Dd7Sw1RyMZ
      tohOzqBLn2qpQCLd/obbrtukpIexhcfUwiLCc0knk8Ssdn+ihhCC6dPvpbiXZXFxAddxSKeK
      bV+kUCzNB596Eh9JdmeP2Ylx3LEx8vlSWzc/gG5HSSUzzMxMkc2VmMqkGE1nKJUbbUaAxZMn
      yRbrxCyJHk5iG/tL2oQSRxjvsKKMJcLsOlVikzPo0qNSKpBKtl8mE+PjGNEUjXKeqZMn8V2H
      dDJJ5Ah7yOlmhPc/doadzU0WFuZwXZd0us0ykT6FcplEZpymU+P9Z+fZzVcYGUkyMjpKseqo
      dwDFcKPmAimGGrWZVxdpNBqYho7jCqLR8Nt+TwqB5/sgBY4riMX2X5ilFDiOhxAe4XCYer0B
      aESjEZr1BmgS0w5j6Bqu6+J5HpFIhEq5RDiWwNQ1XKeJkBLNsLB1aDoumDb4LroUYIex+mge
      17tNsC/BQ46Uko31dQxNUq412d5YJxyJ4EuJ3szy7770R5w9NUu5XGZtbRMDl518lVQyTmHn
      Ktc3BdMTGteu5qnVdymWmjhOk/W1FaKRCN/5xv8h69jMTo6ytnSVla1dhBCkkgmWby5RKlVJ
      JqK8fvEK1ew6bjhNeW+bm0tLND2JjkcuX6LZrOM2G5TWN6mEw5C9wZe/8zo2HmNj7b1oPyio
      JlDA1KslLl9+E19Imq5HJZ8jHI1z+Y2rWFT53vdfJLt8jVdev8ArF67xxy++hPRdmrpJFI+t
      bJ6d7SyNRg0d2N3LY9o2IdsmMzbB7KiGZWj4roNl2dSaDTynie808YVPqVKlWq7QbDYRSFzP
      J2Sa1Jp1mrUqjoBGrU6lmMMVGrFYjOTMaRYyFjeuvMalG3u9voTvKuolOECE12Q7myOf2yM5
      OkUiYlEpl5ianaNSKhILm+wUakyNZbh48RJjYyPUPZ3FE1NAg2JJI5mQlMs6tlGjKSOEbY1q
      pUwqkSCX36PmWszOjFHe3UELhWg0XDKJCFs7WQQ6cyfmqJRLJJMJdF2nWCwgpaRWbxC3NLZK
      VVKJMTKpMG61hplOE9Z1KpUK5fweozPz2MbwNIn+PzpJqiQBSiT+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1992list' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2013' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country1992' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GroupTop5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ItemTop5 ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rank各国各item' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='feed 2013' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='feed总量' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='food-area,item group' width='192'>
      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
      HImS0BTi8b6XzrWxXW/wWSSVfEJBjfa9xJ6L7bhYdt8Op4LMZDaBrA5WIpbtYFmDO6FOFfIH
      dW1bB3SYy+fR9q1cW9ZBuUQmP/Ai9dI7qOtkKkMkMvhy2rYFruO3FACJZAKkKKmoPJDe3nPv
      oUVjKIpKsq9isS0bz3VwBtJLIkgayb70bMvaTS+Qi8biyIpKqu9bAte28VwX2x4su2M2AI/r
      N1fotAddIHp75O/71G/lFtX6oNenPWQv/eLGChvlfXK2vTs7EVDZ3qBUrdG13D45BzyXPt1Q
      LpVoN8tU28HL5Ng2It5A4dXrNZqNCuVGsNbhOjYeYPcZiqk32K7UqVSDuX/Pc3G9fXv92x1u
      btepV4OVUDwPx/Vw+goF1+LG6jatRpAeeDjOwU8rl27eot3ar2v3gK7XV1co1xr75A7qury1
      wnrpoK491x34Gq+8s0W1VqVjOgNyeO5AZVMuldGbJcqtQV2DN2AArUaNer1Cud4akl5f/ko7
      tJtlKn1lZzs2Ah52n2CjVqVZr1Cq95Wd6/TKru+ZTb1xvK4Q7Y7OM5cfJ54Opjnb7TaSJBLr
      +zKs3W5z/sLjSGrigFyir1lut9tML14g6ykDcbIkEY1F/Cauq3fIzZ7mYsYhvvtFkmnovU8t
      ZQ1NFtGN3gAuU5jEEONMpXo1p2d3ESWJjqswq8lYOuCYRBNpJufOMV/YrbEdC9sTsF16NZVj
      gOvgSFHOLswxN7u7Suy56KaL6NkDX8O1LYknz84wMRMsarW7FhIOiX65rs3Tl86Szgerzu2O
      jiQKxPfp8OnLTxBNZgfiJEkkGksOxJ0+fwmU2D45iWRfK9NutynMXyDuSOytKHU6HWRJQtVi
      fhfI6Orkpk5B3PRbC8vQESUJR1TRIhKGBa7VJZMv0PEizGZ2a2LbAFHEcGUSmoJjWOBYRGIp
      ZubPMD/ZW9k3bRdRkvAkDVUR6ZrgmF0y+Um6Qoxpv+wMRFFCd2VmNRlbN8Ax0RJppubPcWpi
      d9ratbFccFyPREzrrW67Do4YO94W4NatZTaLpYHaYnXlJpV6E61P2Wurt1jd2KK/b7i+vspO
      pYamBXKbG2vcWFkf6Otvb22wVaqgqpq/8FcpbXF9eQXX8/yP81vVHda2inhSBGH3PmarzNWl
      ZXTbxd2tgTy9zvLaJl1XRtzLj9nkyrUlGrqNs1dT2TpLN1fRLRd57wMax+TatWtUm53go3TP
      5frSMu2ugdrX7Vi6fpVStT7Qct24sUSzow/sMLG8vMR2qYLXt0X8rZvL1JotNDVo0lduLbOx
      vTOo69VblGsN1D4drq+tsLK+6esAYGNjjWK5OqDrrc11lm6t7eq6J1subrK5U0aJBLquV7a5
      tnwL2wu+0dYbZVY3i7hixNeh3aly5foN2qYX6NBocGN1A90RgzGF1ebKtevUO6Yv1+6aftnt
      pWe2K72ys/rS69b8svNHVmaLK9eXqOtWIGfp3Li1SsfyUKTdsnMtrl27huB5h3llj47jOHS7
      3cF+8CE0Go2RNpV9VOSazSaJROLIDbcMo7eiqaq3/wbW8zxarda+Afbd5XGc5f5/IKiPI/9K
      DygAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='food-item,area' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='foodfeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='food肉蛋' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='gif area' width='192'>
      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
      IfrBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='gif continent  food' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATG0lEQVR4nO3d6W8j933H8feQnOEhUjx039fq4h7ew9Y6tpPaaR7Ecd1HRZ80D4oC/R/6
      Z7QoUBRtgwBN0zZJkTotGsNI48Rre71arVZanavVenUflMRTFO+Z6YONN14UAWVnRMma7wsQ
      QEqE8CU1H/1+v5n5ziimaZoIYUOKoiiO0y5CiNMkARC2JgEQtiYBELYmARC2JgE4oyqFFP/+
      vb/nhz98h9188Xe8KsfC3ApQZjf7u17zvLUnS2TyZcvq/KpTZDfo2fT445/w0PMKb11vxygd
      8oufv4sR7uPVoXp+Pb1KsWhwecDDP/zjL/mTv/wuA0O9rNz9gMR+muaLr9Klxbk18Ygrr77O
      0eo023spQl1RJt/7Pmr36/zFd7+D12Hv/3+yG/QMq5TLaG4NRVHYvP8uXPgWgeQT5hZnSXr7
      adJS0NjD5Usv8+qVLhKlIrOLy7z2By/zcP4O7/zoPznKpRifnGZ5eZWv/eHXWZ5bZOTKdd76
      zjdtv/F/Rj6FM6r7yiusf/wO//1fv6AU6mRl4j0eHuSJ1LnR3G6cTifgpZR+xNSjLQCcqobm
      dOFwqHR0teAPtxK90IPT5cLlUnE6IOx28sGtOxQNGfhBpkBnl2lSLOQolE38fh+Foyw4Nbya
      g7LpxGFWUFwalUIWw6GhaSqVUgm3plIq67gcJtlcAc3jw4GOqmmUimVUl8JRroQ/UIdDUU77
      XZ4qRVEUCYCwrTO3BjAMA8MwTrsMYSNnKgAyGIlaO1MBEKLWJADC1iwJgFEpsjQ7xeONPfRy
      jrnp+8RSOUxT5/H8NCvbCUxMNpbnWFrdwaREKpVHL+WJpw6tKEGIL8VlxS9ZX5jGiPTTFqzj
      yfwsdS09rDycR2lyk/G0wOYSPj3MZt5PfXaN3aBCYkvHbcbwd0etKEGIL8WSAOymMpQTs+Rb
      +lAUD9faWiknd9mJGwyOtZF2ZjhYy9AzdgFv3EG6kGVlfpbw0EUuBD0YhoGu65imiWmaKDbf
      Py1qx5IABP0hWkdf4NGDSVQUUvkCR7kyDT4ne4k85cMs9Y0aB7EswXwKVyRCb/RFjOI2yVyZ
      sE/F4XCg6zqKouCQw/SiRizZ0voH+1mcuI0n0kk0OsDs+Cf4W/voHBkhvjBOQW2kfTAK27PE
      8hotkTCRhnpGosOkk0lk56c4LWfqSLCMAKKWztyRYCFqTQIgbM2SRfB5Zpoma7tpPniwBsA3
      XuimpzVk+zMpzwsJQBW7iSx//ZM7rOymALj/aIe/+rNXaWsInHJlwgoyBapidTfN5kHm2fOt
      gwwrO6lTrEhYSQJQRb1Pw6P+dqB0qy7qfe5TrEhYSQJQxWBnA2+/OozP7cLrdvH2K0MMdkVO
      uyxhEVkDVKEoMNrTyPhCANOEaG+TLIDPERkBqkgfFdlLHqEoCooCsWSW9DGvwSPOPglAFYZh
      YnzuYLlpgi5tm+eGTIGqCNa5iQS8PJ31KEQCXoJ+z2mXJSwiAahCU51c7Gsi5PdgmiYX+5pw
      q87TLktYRAJQhaIoeN0qHrcL0wCvWz3tkoSFZA1QhWmaZPMl8oUKuWKZbK4kV684RyQAVRRK
      Ok+2k+SKZfLFMk92khRKldMuS1jEkilQen2OWwu7tLT3EG2s8MsHW7S0dnB9uIWPPp5EC7Vx
      82ofdz/6hJIW5OWbw+xulGiqLxLLuxnobLSijBORL5af2+ALpQr5YkWmQueEJQE4zJQYe+Ob
      NGsKuwtTvPTGN2l1K+zMTTHy2hvk1xfYmH9I0+VXCBxtcJBIkT00SO4fEL1+/bkpxWd9wWeF
      6nLg/FyDjtOh4HI6zlSN4suzJADugJfZj3/FnCfMla4As7d/xYIaoLNOo83tQtc0DuMF6v0q
      7qKbol5mfWmOYN8QmtOBaZ7dpnjNCc0hD06HgmlCc8iL5oJyWW4ycR5YEoCirtDa2spBOk++
      bNLa2koidURTk5epiSlclQIXhzqYvjeNWykydGWI3uhLhD1JPt2Kc6GzAfUMN8V3NmsE6zwY
      pklnc+hMBVT8fiwJQEt7F45Emq6+QbzOCvsHKTp7LhDwqVxx7+HwBgkGPFx3eKg4fUQCXvwD
      Bm61mVzxbC8oTdOkrBtUDOPp44qB6nJICM4JSwKgeupob6/7zTONtnbfs59FmlufPQ42ND97
      7PE8PZhU5zvbhyIqukkskaVYqmCYJrFkltaIH9UlB8POg7M11ziDiuUKxbL+uef6c8/FV5sE
      oAqHQ0Hht9MdBUVOhz5Hzvb84wzwqC7q69xPF+dAfZ2GR5OP7byQv2QVDodCY9CLz6NiGCaN
      QZ8sgM8RmQIdw2fNMA5FkY3/nJEAVGGaoOsGhmGiGwa6biAHgc8PCUAVhmmQzZeoVAwq+tPH
      hikdYeeFBKCKiv50w/9dz8VXmwSgCkVR4PPTfgVZB5wjEoAqVKcDt+p6uuHz9MJYqlM+tvNC
      doMeg8/tQnU6MR0mPrd8ZOeJ/DWPQVEUmsO+M3eqtvj9yR1iqvjs4yn95vwf7TdXhJAgfPUp
      iqLICFCFoiiYpvlsw//se+J8kAAcg2zw55c1TfEb89ya36GlvYfRNjfj0w9p7B7lco+fDz+6
      hxZu56Urfdz7+BNKWoibY0PsbpZorC+yl9fo7zi7TfHifLNkDbA5N4V76BpNGsxM3mPwylU+
      nZ/Gg4Jn8AqFjQWcpQrFthHqjzYwfD5SMZNyfo+R6zfwup7O+c/iGkCcX5atAbQ6Nw9u/QLF
      10jIq+JRnaiqk9yRQrNPxXS7OUwUCQY0PGUPGb3M6sIMoYFR3E6H3ClenBpLRoCtlUcclU1i
      8UM6ApA03RRyOhc7vczslHAVs4wOtvHgcQKvkqP/0hB76xWC7gRFXwf97WEUZAQQtaUoimJJ
      AEr5Q2L7SeobWgh4FHZ3YgQaWvB7XBzsbuOoixCp95La36Hs9NMU8VHIG3g0hWyhgr/OKwEQ
      NWdZAKwiARC1JHeKF7YnARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2
      JgEQtiYBELYmARC2ZlkAyoWjpxeOLReIxWIcJDMYpkkqsU/mqICJyWEqTjJzhIlOsVjB0CsU
      iiWrShDiC7OkJdI0Kjy692t26qLcqI8zF3fT3RTBXYgxtZLCqZe5MtrF/fktVEeJ6LVRdtfK
      hNwJiv5O+ls1K8oQ4guzJACZvXXUSA9+xUUqcUSpUET1dnIQ2+f6yy+RWVtk+9EOQ2M38CW2
      yBxmWH+4SKZ/kJsDIQzDePYlPcGiliwJwN3xO+DysnHkY/Str/OGw2Rm+gFBTSNX0imXK7i9
      DvJ5HZdewuly094/QjF/QFE38DgVnE7nsw1fOsJErVjXEpk7YC6m08ABi0928EY6uTHcxIcf
      TeIOtXHzaj93PryN7g4ydnOE3Y0SrZEy60kY7muTnmBRc9ITLGxNeoKF7UkAhK1JAIStSQCE
      rUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStWRaASilPrlDG
      NCqkkgkKpQqmaXKYTpLNFzExyR2myGTzmOiUShVMo0KxVLaqBCG+MMua4pfuvs+2L0q0LsVK
      soip+LjaW8fdR/s4TYNrl3q492AVl0Pn0o2nTfFhT5K8r52BtrAVZQjxhVnSEZaJrbBzkCXp
      COEpxrly9QWW56Yo5RS6XrzG4eoi2dgh/qvX8CU2OXQYLI0/Itjdx9i1ETB/2xQPSFO8qAlN
      06y5U/ydT26D6mPzyEe0N0LFMNENE81pUiwbVHQd1a1QLBhoegWnS6O5s59SIUnJMHE7pCle
      nA5Lm+Jndiv0+o745MFjGjqHudrn51e3JvGEW7l5bYA7H9ym4gny8ssjbK+VaGsos55UGOmX
      pnhRe9IUL2xNmuKF7UkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1J
      AIStSQCErUkAhK1JAIStWdIRFt9cZubRBm0Dl+gLFPn15BLBxg5uXO5j5u5dXI19XL7QxsOp
      cY7UZq5d6iC+XyHsN9g/Mulolp5gcTosaYjJZbOoqsK9yXl6Qi6M3ut0+mB/6T7JhmEqWwvU
      e90caJ2ECuuojU0kdw2UUoz20auEvU9zKA0xopYURbGmJ9jlLHHnw0l8bRfAmWb+9v+y0dBB
      Ay7ahutIZ+tJb2ZoHqvHG4+QLudZnZ8lNBjloteFYRjouo5pmnKneFFTlowAifgBvjof9yen
      6enpJdwQYm56mvaQl4S/BzP2iObGABuFMKHyJv6OLpLbBqqxQ6D7Iq0hr/QEi5qzbAQwckkm
      FhbpHLxEg6/M/cn7tF+4REdLgMPpe7haL9Da2UBh4T5H3g7aIhE8VAgFIsRSecBrRRlCfGHS
      FC9sS5rihe1JAIStSQCErUkAhK1JAIStSQCErR3zOIBJuVTGRMHlcuFwyJFacT4cKwArt9/j
      3aUYAZePr7/5bXobAyddlxA1cawAODEYHXudkYiHUL0ctRXnx7HWAHWd/Rw+usf4xAOSudJJ
      1yREzRxrBHAZOXbjWRzOPIYp62Zxfhxra16be8zNP/5TXhtuYWsvddI1CVEzVQNQKZcYfOVr
      3P/ZP3N3I8dIT1Mt6hKiJqoGILm5xtziMqbDRTmb5eDwqBZ1CVETxzod+vDgADXSALkMZYeX
      gE87kWLkdGhRS8dqiMkmtvjp9/6VuhdvwM4mfS9/mxsXmp97TXzrMTNLG3QMXqKvUWViYpq2
      oav0NvmYnriDq3GAi/2tLE3f5Uhr5trFduL7FUJ+g4OsQbs0xYtTUjUATtVDMFiH5g/TerGB
      vrbQ/3uNp76F115r4969OQq7JkM3xlibn0NNuvD1X6eyvcDOp3HyoSEaimvsxr0k9wwOtnZp
      G756Im9MiOOoGgBvoIH+ziYcg1Hcj2+zvJlgbLj1udeorjJ3bk3iaxvE0DM01vlI+DXih9A/
      6iedC5LazNA6FsQbbyRdzj1rio/6pClenJ5jrQGKiTX+7Z33Uf0R3nr7jwh5nc/9PJVM4A/U
      cXf8Hn5VoWXkMmsLi3SFXSQCFzB2FmgI+9mqNBMureFt6yS5o+Oq7BDuu0Jz0C1N8aLmjt0U
      n4oncHvclI6yxLM5Qt7nzwUqZfb5cHqG7uEr9DZqTE5M0TF6ndawh/jkHbTmIdq6G8nPTnDk
      bqO/IYwHnXAgwm4yC0H3ibxBIar5Qk3xjyc/IN9wmcu9kRMpRkYAUUvHHgFiy1O8P7FIWXfy
      +psvnnRdQtRMlQCUGX/v58ys7oLLBbpKydBrU5kQNXCsKdDsz3+G9vU3cS3fIRuM8sJA44kU
      I1MgUUvHvi5Q3wsX+PBH/8Ivp1YJh3wnXZcQNXOsAPgiLfiUIp5QCw31npOuSYiaOVYA5t9/
      n+jbf85LbQrzT/ZOuiYhauZYe4G6Rvv58bvv4KHC6yPBk65JiJo5VgDS8QLf+Pab9Ib9eDRL
      LigtxJlwrCmQ01PhB3/7N/zwBz/myf7hSdckRM1U2Q1qsrcyx/t3ZumI3uS1FwY4ydPUZDeo
      qKVj7AYtMfHxHC+98S22735MpjZ1CVEzVQJgkN7b5H9++h/MzE/zT3/3fZZj6dpUJkQNVJ0C
      GcbTc/Q/43A4Tux8fZkCiVo6xslwilwHVJxrlvyrLefTTE9OsB5LUckeMD4+zszDFSqGzuP5
      KZ5sJzAx2Vie5eHKDiYlUqkceilPPCUrC3F6LNmpnzhI0tE3wOqny2gBB/U9UbqDKtnVeTKe
      VthcYq8SZrNQT31ljd2kQmJLx23G8HdHrShBiC/FkgA0d3Sxu7lCsLGDYmaNlfkJyt2D+I5g
      8GobaWeGg/UMPWMX8MYV0oUsK/OzhIcuciHokZ5gcWosuU3q3uoSOV8LPc0hDlMpfH4fUxMT
      NNZ50DujVLYWqFNdJH09BAvrOCMRUjsmRnGbruh1wj4VkEWwqC3LbpOaSsZ5PHOPW3dnqBRS
      fHTrI7zNvXSPjpJYGKegNtI+GIXdWWJ5Ny2RCA2N9YxEh0knk5yZGxUL25EbZQvbkhtlC9uT
      AAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAI
      W7OoKT7D3IMpNvcz6OU8i7MP2E/nMU2dJw9nWdtNYmKy9ekiy+sxTEqk03n0Up5EWi61KE6P
      NU3x+3Ea2ztZX1ki6zJQmzt5vDgPzW4SjjCsPcRbibB2qBHQnxCr7yO+peMxY3g7R60oQYgv
      xZqm+M5uYlurBBvbyWfjXO3swMjss32gMzzWSXr1iP3VDL1j1/DGVdL5LCtzT5viXw15pSle
      nBpLAnCw8Sl5dxNDXWEWJrdIFwrk8mXCXif7yTyl7BGBBpX43hHBfBpXKExv9AZ6YYdUrkzI
      p+JwOKQlUtScJVtaIr7P47lJbt2doXeghwef3MbX3EvXyDB7c3fIO8J0DEXRNx+wk3XRHAkT
      jtQzGh0imZCmeHF6pCle2JY0xQvbkwAIW5MACFuTAAhb+z+ZK+wzm2LMfgAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='gif continent feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      cQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map点' width='192'>
      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
      BKUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='milk' width='192'>
      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
      BsZLDk2LAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='rank' width='192'>
      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
      cOri8/mE/wW9pMjeKfejTQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='仪表板 1' width='192'>
      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
      gwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='德国' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eZhdV3Xm/TvnnunOU81SaZ5lybIMDpMNHiGADRjS8CVMTdJAIB9Nkg7p
      bmiSfjJ05+FLSAKEDJ1OAgESzBwS54Em6UACARwwlmRZki2XpJrn4c73DN8fe9e5Q92SbklV
      qpLqvP/o3ldr773Orb3O2cN71lY8z/MIEGCTQl1vBwIEWE8EARBgU0NbbwcC3DzITw2xQIRq
      xaG/t2O93WkLSjAHCLBa8Lwqn/nEpzh2+63803dP82OHe5kavoi54/ncdXzfervXEkEABFhV
      nDz1JHHDYzTnYecmiJVHyNz+OvrTxnq71hJBAATY1Fi1SbDjOKtVVYAA1w3BKlCATY0gAAJs
      agQBEGBTIwiAAJsaQQAE2NQIAiDApkYQAAE2NdrSApXz85x/doBYupOK7WB4ZcqeTipmUXWg
      t6drrf0MsAHwmW+c9D93paLcc3wHf/UPp3yuOx3lnuM718O1q0ZbAaAbBpFEhnJ+jmLZJZSO
      Y3oeA2dPs/PW5+O6Lq7rEmwq3zw49ewEHuLvGbUMdvam+Ku6ADi8s5O7bu1v4I7s6uKuo/3X
      3ddrQVsBkJufp1gq0N3Rxfj0HFFNpYLO/qO3U63kUWNpPM8jFAqttb8BrhN+9c+/iStvaId3
      dPKbb7+34f8VFLSmv7eiKGjajSUwbsvbRLaLRFYMc9KZzJo6FCDA9cSNFa4BAPjc/32SquMC
      kIlbvPSOPevs0Y2LIABuQHz+n05TKFcB2N2XXlEAvO6Dn6Vqi+A5sC3Lb73z/lX1zXFdHv7A
      Z/3vb7z/CD9x9+FVbWM1cdMGwN9+5yzzhQoAYUPj1XceuKb6zlycpCI7jqGH2N+f5cv//BSF
      sg1APGzwyhes/ksfv/aJb1KSbfRmY/zcw3e0tHv9r36OUkXY7dmS4bff/cCq+3Iz4iYOgHMM
      TS4AkImHefWdB/jqt8+yUBRBETE1XvWi9oPiQ5/5NhNzBQB6MjH+6D+9ki//8xmm5ouA6Jxr
      EQCnBybIl8TdPl+qrHr91wPnBqf580cf978/8NxdvPjYjvVzqA43bQC0wle/c5aRqRwA2USY
      V73oAH/z7bPkZFBELZ2HXri/8W6vqezfdmO833q1OPnsOIsr2FFLZ1dfelXrzxUrnHx23P9+
      296eVa3/WrCpAqAVvvrts4xOi6DoTEV46IX7+f/++juMz+QB6EpH+ZNfenA9Xbxq/Oqf/V9/
      vN/fleCdr3pOS7sP/uk/4rgiAg5u7+B/vuO+Nfft7KUp/uLvf+R/f+kdu7nr1u1r3m4zbooA
      +N1H/pWJWTE8iYUN/ssbX7Ruvrz1f3yJmYUSAFs64vzBL7yCt/zml5jNCa6/K8FH3/vylmXf
      +Gtf8IdoO3pS/N57XnZNvpwamKBSFW/qVeyN9cZe81Ph9v296+LHDRcA5wanKFXEH1MLKRzc
      3sm5wWkGJ+YBSMWs9XSvbfzmJ7/lj+2701He87ofW2ePNiduuAD4/c9/j4tjcwAkoyafeP9r
      1tmjq8Ppi5PM58sAzBeS6+zN5kXbYrgzp59i6/5DnD51hp50mDI6cUPBMxNs6wvEcAFuTLQV
      AJ4H2W27mB25hFspgZEljMvU5Di9u7quqxiuvg0PsG1bfqqxtm03MYKjyT3bthvr82R99dfh
      Xaa+JizP1bfRwpdWbXgt2pD+efX1tfRlKdeqXf96r9BuSw4PuykTiOd5OE1zDdf1cN0mznNx
      mjnXbfn7rTXaCwA8crPTbN+5n75tFZxKkQoGfX1bcRwbVVXXRAz36HfPMZsTwwRTD/HwXQdR
      FMX/fwWk+EqpKyUEWY2MFGnVk7JsQ32KrK+OQ7lMfU1Ynqtvo4UvrdpoJSyT/in19bX0ZSnX
      ql3/eq/QbktuGTFcSGvkVFVBVZs4RSXUzKnqugjp2moxHEuyf58cp+oWWBZR/3/XLuPXo999
      mgujYrwfjxg8fNfBNWsrwObEhpkEf/QL3/M3qcKmxgfefNc6exRgM2DDBMDTQ9M8OzILiN3I
      AAGuB9YlAD72xe8zLHU6phHig2958Xq4EWCD4bEzw/zaX3zT//7WHz/Ga65RxHglrEsAPDM0
      zTPDMwBEzOBuH2D9sOYB8PTQNEUp51VVhcM7Ote6yQAB2saaB8DHv/QYTw9NA2AZGn/9q69b
      6yYDBGgbQV6gAJsaQQAE2NQIAiDApsaKxHCZ/p0MDw2TjeqBGC7ATYEVieFiOuzasYP8/Ayq
      154YzmtSoDUL0HzxWguhWpMCbal4jUAMdzOJ4VyZ6qWeW2uB3IrEcHoyyezCAn1dKaptiuGU
      JgVaswDNF6+1EKo1KdCWitcIxHA3kxhODalLuLUWyK1YDNfV3fy/G/P4ywAB2kEwCQ6wqbGq
      z5evff8ZP0+OpiobOiNYgACwygHw9e+f5+zgFCBeYAkCIMC14qkLk3zya0/433/8eXvY0ZPi
      W09c9Lnje3uuOnfThpFDBwjQCguFckP6lDsO9qGH1IZzCaKWHgRAgADtYC5X4uL4vP89CIAA
      Ny3m8iUujtU6e182xumLk3zoM9/2uSAAAtwUGByf51snavOC2/f1MjlX4Lc+/S8+9/YHbycZ
      MxvKBQEQ4KbA4MR8w7wgHjbIJMJXLBfsAwTY1FiRGE5PdVDIF0hZaiCGC3BToK0nwKIYLqqH
      yCSiqGaEsBFianIS07RqYrhWwrdADEcghrt6MZzjNnMebhPnucvU12znLeVWJIbbunUL87kS
      CUttmRmupfAtEMMRiOGuXgwXUps5BbWJU9Rl6mu2U5ZyKxbDRSMiJ9z1yAwXIMBaI5gEB9jU
      CAIgwKZGEAABNjWCAAiwqREEQIBNjSAAAmxqBAEQYFMjCIAAmxpt5gVymZtbIGppjM8WSEU0
      yuhETQPXdQiHr6y6CxBgI6KtALDLZeZyeXKzRUZnC9ipOK7ncnFygr49hzDNQAvk+9ySC7RA
      DdwG0gK1NQRynSrDgxfIFSs4lSqVcoFixSWTzVDIF3zdRaAFCrRAN6UWyIwmeP7znt+OaYAA
      NxSCSXCATY0gAAJsagQBEGBTIwiAAJsaQQAE2NQIAiDApkYQAAE2NYIACLCpEQRAgE2NFYnh
      EvEwgyOTZBPhQAwX4KbAisRwU6OX8MJpJqfnAjFcIIbbfGI4RQ8zMzZGMRDDBWK4zSqG27W7
      nRIBAtwYCCbBATY1gvMBAlwTDuoX/M/blp6TvuERBECAa4DH+1Of9L+FYj8G/Lv1c+cqEARA
      gFWFisf7k7Wg2Gq9mTFe3FbZPdpQQ9l+U2eQ5626j/VoGQBTo5c4NzDO7c+7HX1Nmw9wI6F+
      uLNd85a3M2p2hjpHVBtuCoq3ENF2N3V2jZja1VDWVOcZXC3nl0HLADh39hwYyTVuOsBGxic6
      fwM8sWYeSt0O3Ns03Hku8Pq26oqqpaagmCekFpcEClz/k4ZaBkD/tm08PTjFDTinCXAF/HLy
      03h2FYBY7ABw//o6tM5oGQC5hQXKuTw2wfEX6419+iVKThmAXq14zfUd0C+CWgFA1VIA/EXn
      /wBX7PSGUrcB911zOzcKlgSA55WpVhXC0UjzxulNiQfC3yMXmQQgGs4AD7W0+7nEF6gwAYCZ
      6AFeeU3t7tMukddFh+7WOpa1+8XkX4O1AIAaPwD8ex6M/AvVUAmATLgfeCm/lPwMbkVw0fhe
      4AEO6BepIjp2v1a5Jn83Evbpgw3zh21mmAFuv6q6WjwBFJ48dYpIIoMD6ECllGd8Js+Wnk4u
      XLhI1NIoezrJWJiqbZNJp6/uSq4zfjb+Zcr2MABGvAN4FS8Nfw+vIqZaSrh32bJ79CE8Y0TY
      aWJs/PvZ38czxwSX2s5KguLnk4/gGTMAqPE9wE/zC8nPYhuis4fjO4CXtSz7YOTboOVEWesQ
      APv1S0BBcFocgPclPwO2CAo1dhR4c9v+bRTE1GLD5Duj7iauFpZMlgeusv4lAaAoBrsPHCAT
      jfq6KcOKElLmmZkYIV+00TQVzytx5onT7Dr2gg15SuT94e8zHxkHIBxOYtuvYLc2hGeI08QV
      vbSsQK6VGK5VG625FvW1EMM1XRq2bbNXvwTOnPAvZFxGlNZCXNdo2CbXSgzXvkDOaSWGc5rt
      XNwldkuFb57r4SwRw3nsUi82TL51vQvH7W+yW+VTItMRj3947CRvOXQAEOcEDw+P0NXZSX5h
      loiVwlV0duw7SHF+mky0e8OdEvlA+DHc6IBgIp3LiuFacR/OfgxPHxJlE1vQtIdattGKe3n4
      uxRlJ06Eu9G0V/AfE5/DDs0CYCX60bRXoFDrxrXrqKvtsqK0FuK6RsM2uVbttu9LqJUYLtRs
      p6IusVsqfFNUhdASMZzSUiDXLGhTV1sMF0t30REfxZEGZjTB7cePA9Df39+qSACJl0f+Fc8T
      cwU1vAMQY1bPmBKcFqytbSQsCYDC3BQnTp8jnkzeMEq5+8OPMRcZBcCKJIBXr69DAW4YLAmA
      SDLL1u4s5wfGcVuV2IC4P/wYbvQ8AEo4u87eBNgoeK75FH/Z+ev+dzP8foZD+3g48k2fW1YL
      pIZCG3IZ9H+m/wjXfRoAJZwGXrO+DgW4obBFm+Th6BUCQFEgnIgHO8EBbhj0hiYb7uy79e62
      yrUMAKdcAkXHhXUNgvusHzATEasxZjgKPLyO3gTYyOhrurOb2gtpR1u0JAAmnz3D+ckp9u1/
      /rorQe8N/xtu9Kz4YqXW15kANyWWBIBmRYhYEQbOnmLH9juvWxDs1EawdLlxpZvXqdUAmx1L
      AiDV28/dvdd/rf9n4n+LW3pKfDETwHuvuw8BNh/W5Y2wX0v/KW71SfHFiAGvXQ83AgRoLwAq
      pTyDY9N0JCwGRqZJR4QYLhWzqDrQ23P9X2QIEGA10FYAGFaUsDmPYVpk0ilwKpiex8DZ0+y8
      9fmXFcPt0IbRdaGYNHS9hRiulUDucqK5pWK4Bu3aZbjWwrcWXNvCtytlpGNFXD0un6Ft84jh
      vBbZ4rwl2eJclJbcUoFcs11bAVDOzzM5OUWlXKFcdUnFDKro7D96O9VKHjWWXlYM97b4o7ip
      U4LQI2jaL6AoSkMHWBS5XZ5TlnCKb7dUWNaKa1cM167wbbmMdEt8aZOrRyCGW5kYTmnJLRXI
      Ndu1nRnuyC23tGMaIMANhVWdBO/QRwjp4qURXQ8yrgTY+FjVXvrW2KO4qROyZgv4xdWsPkCA
      VceNongOEGBNEARAgE2NIAACbGoEARBgUyMIgACbGkEABNjUCAIgwKbGisRwCVNlZKZAKqwG
      YrgAgMLfhDP+t24zzj3r6M3VYEViuJLtkI5ZuAotxXDtis0CMdzNIYazHZuvRmoBcMiIc5fj
      NATFkZDJ/hZiuAUPntFq50v3KSGybYrhHg+F+d3sHp/7KTPBfddDDNfT3cVcvkzSUqm0EMO1
      EpaVlzmaNBDD3fhiOG2J8E1BDYUagiJiRIiYET6Z2OJz91oJEkaE30nWuP/HSvDj7Yrh2hbI
      rYEYrrOznRIBNip+L9GH7YjzAfqjnfz0dWgzr4Q4q9fu9repOokWdif0KB+qu7P/ZDjNi5QQ
      T9c9KfrV1dWYBYq1TYZzWpiq7ESetvy712f1sK+7j2sm+4F31HXOg4ktfGBNPRU4r1kNT4o3
      mrFVPUcmCIAALfHhxBZceUTSgUgHH1xnf9YKQQC0iW9YKfK2OKklZiV5CPjjeA/z8m6aiXXz
      nmts4w/ivRSNGADdsS5+FvhYvI+SKc4C6Il18U7go/FeylVxFkBvtJN3AI+G09iaBUDWSvDS
      RU76nDUF1wrvyu7204vvT27lV67xOm4kBAHQJv5POMmUK8bOXVaKhxCP52k5tu25zHDiD+O9
      5GTn7Ix1825EZy/oEVFfrJt3Ac/oYXLyqKKStH9atyh4onOWQ6bkwhTlFLoq7R4NpylLX3bJ
      zv534TQVR5wMs8daPgBuVpzTLD5bN/l+uRHltiabTR8AfxrrYUaumSZjXfw88L9i3czK/0/F
      uleUoOXrVoqivJsmrBSvBJ7RLOZk58zLQHlGs1jQRecsXCZ4ArSHx40YH66bo7zFSpJWGyff
      L1A1zuphHqkLik0fAM9qFuPyR8rKu+mzmsWE5Dp1a0X1fT2cYlbenXut5DWeJBZgtbHQtCJ1
      0wbAs5pFSS6fGZrFUWCgBRdgc+OmDYA/i3UzIsfT6XCGjwH/O9bNqFzZyESyfHQd/QuwMRCI
      4QJsaqzoCXDh/DnGZwtkojpldOKGgmcm2Na3vmK4Ac2iKIc2uhbm1nX1JsCNhBUFQEhVUTxQ
      zQhhz2VqcpzeXV3rLob7s2gXw3K5L2ml+EjTUadeC6Ga71892+oIU6/VdSzvSyNaidda2C2K
      zerr87kr1NfieNbLCdqudG0thW+trk2K4ZrbaM4W53oubpMozWtxhKnoQ1c+6tR1l2aVW87O
      adnGVYjhFtHV3Y1nxMjEDCoY9PVtxXFsVFVddzFccxv1pFInVFtiV88qS+18cVhD4ZovNWap
      iKyVaK6V2MwXqiktRG4t2m2oj1ZCteUFbctem9fUbkOry/jcQgzXnC1OVVTUJlGasox4rdlu
      OZFb+0enXtluRQFghGP0h8VOZbTGrqSKa8Z/T21jUH5OmAn+8Lq2HuBmQzAJDrCpsaGXQf/J
      SjIrX64wrURwikCAVceGCYALmklBruRousUx4J/MBJfkyxUxMx4EwAbEBzp3+Z+jqV4U4KBZ
      GyB3aNd3iLxSrEsAfMtKMC3v7LoR5SeAT0a7uFDJAxA1ovzJejgWYEVQgENWrEboFigK/61r
      d42LpDivhpqC4tpOnuvTTF6bqB2DuseI+NqtlWJdAuCbZoIBeWcP6xF+Yj2cCHDdsMsILwkK
      rDif7q8To8Q7OdcUKNlQ60Dp0y1em6w7B9iI8P3mNe42seYB8KloF8MJEZ+GHua/rnWDAdYM
      DR02tWPV699rRpYEytlQY1BklgmKq8WaB8BFzeS8VN9Z2sqUlRsJe40oXXYRgLQZWWdvrh5/
      sfUWkO8XkFj+NNC/3HoEf3MguX3tHVsG+4zo0qfHKmLDTILXCy+LZ8mr4g8dlsOyPWaEDlvc
      dVKG6OzvyW6DWFIUstIAfLTvIJTnBRfOXrMvD8Y7qcjgSkaFL/9ry2GwS8Ig1gPAQ4lO7Krg
      UjFh96pEF458+ysdyxCgPaxqAHw62smQfNlA10zev5qVrxC/3bsfkrJTGnEAdhsR0vJxmpAd
      +2WxDtDkDqQpOvj/m90GUZm3YIUn1O8zoyy4QpaRlW38fMd27LJczo2JsesrE51UyuLJmIgJ
      Px+Md4ItJ5XR5QPqVfEucMrSTtT76kQXSDnIYtk/33oE5FtsJLYuW98ntx4BqZIlua3dS91Q
      aJ4Y7zYj7AknG4dtsSzzIbNh5WpFATByaYCCq0FpvqUY7qJm8Ywc7hihjfeW07uz/RCR40mz
      VWKOa8d7s9uhIu/AkQ4A9hkRUORwQgbFg/FOsKQvl+nsAdrDFt1cMjFuhURIa1i5WlEAFAsF
      JmeLZLuzy4jh2hO5tRTIcQVhmbe0vkW7+6JZcp6405lmAtu2CXmer3vx8HBsm1CdXMnzEBx1
      HKzQrkUb1HGe16JsC66lXYt22/a5TV/a5Vr6DI7jNHQg4Usj53ounuNSr/JxXQ/PbeI8r4Wd
      i+c6SzmnBddcX5vcigJgx+7dGGMzpOPmMmK4pcekKi24VqI5pUHg1Up8tbS+RbuXxjsgtHiH
      jcEyYrgm3dvyoq+27VqJ0i6fta21eK09AVr7PrfpS7vccoK75uNPAU1bKoajRcY3moVqitLC
      ToUWAjmaBXequrS+NrkVBYCqmWzdIiZi6yWGuz+WZd4V41/TjF3BOkCAy+OGWwW6P5YFRS7j
      6dHLGwdYU3jAYF0PMjVWNWvb9cCGDoD7YlnmXbHcZxhBZ9+I+Gyy9nlbFF4LfLhuTv/CMDzv
      unvVPtYlAH4ms5WSHMapcnPs3liGOUdkO9Nlwihxt5eT4boEqQHWB9+u+xMkTTh0DXUVVZis
      633JEC0T5rYsqzSWTakQv0o/1jwAfjq9haIq1phVmQBqlx6GxaUouVx6XywLyDXrG3jH+GbB
      JR1/tW5xaPOdupXF/hUEwIAOn697KrwoDF0afKHu6XGnAXe0KDsdgqfqAm+HBgUNvlxX9iUG
      3N6mL81Y8wDYadR39o0tjb0c/iYOBbm1ETPhFWvQxvfCsLj6G7HgGDCkweJbrLoGPSuo7/MJ
      sGXhbBTuAz6XAEd27I4o3Ivs7NLODInO/kiitlq9NQqvv/rLahvndfhiXaDcFYZMqDHwDA3a
      3ZqcCsGZuuDZqcG8AV+ta2NVA+DuaIZjFbEZEbpBOvsPwlCSq4WmKe4kwxo48pcJadAHjGiw
      sCiNkf/3mAUVuapmWXB8sazsTJoGvSvw5fthKMn5fYcMgC8moCy5TgveDHwkAxXZRlcY3gT8
      fgaqkusOwxsRE1Rb+mzLIeegXgsAV17H5+K1INsSgTeswOeNgnMGfKWuY99tQUxrDJ6wBs3b
      Y6saAPfEMuCKcTzq6qr2VooRDewWnbiZ+4EFc7ITx3URAH8bg3l5t0/o8B+WaePfwpCT9aUM
      EQBfiUNe3sXTJrwN+HgGCpLLmPDvgS/FoSy5ZBhetkrXHWBl2NCrQO2ivmOrGmwBHo3BjIzB
      qAbvBP4uBrPywRTT4R3r4azEsCYmcwDF0OVtA6wdbooA+PsYTMvOHtHgZ9fXnQA3EFYUAHYp
      x3cfP0NPOrxumeH+PAlTcpEoHIJ3XbeWA9yMWFEAXLx4CbdSAiNLmKViOLVBHNZCpMXyYq6T
      JhTkZE/T4Lht86mkx6Ts7FYI3rHccaUtMsi15GigLnNM6hU4v+wVjk69bHa3K3Dt+ne5THMt
      j3atN2uVBa5NOymG090+n1Pd7JLMcJ63NBub53pLsrt5rtfCzsVtrq9FBrnWbSzNINcqI92K
      AmDXvoP0bSvhVIotxXAtM6XVi7Qk97UYzMiJpx6ChzWNJyyYkHZmCO5oEpuxWF+r40qVNjka
      qMsck3oFTlkqhmt5dOpls7tdgWvXv8tlmmt5tGu92TWI9RQIhUIk7df4XMwxCIU0ktVX+5zl
      9aGqucayLY4/VVRlSdY2RVVRmwV3LTLIKcrSjG9KiwxyrTLSrXgOYFkWWFbbYri/TMKYNNFV
      eA8wpsG4HLMbN0hqLt3rQXej8vPavEuw0VHfsaPO8kJE3audwBIiCuSW2IS8JBHnuXVleqkt
      xtagelbDUybkxTC8HXRU3u1zYTcGXGjrGlTCDfWt6iT4UwkYlR1bU+A/rmbla4S4/QBU5eF3
      yvLBHLcfQJW7SvHQ2izbhJ3jqPKtrrCzNkGmu32o8p3gkLf8oc9J+1X+CC8q31Jr6Nhe+8vc
      htvf0GEjToyQpxFxanu/uhtDZWpJZ9e8noanjOG2DjzVCzeVjRLyMk1B1o3uNtZ3U6wCaV4X
      uiv+ILortjri9r24smNH0CV3P57kooouy3ajyw6heeJxlKm+CUPuNMUukz0yU3kLltx9iisi
      KMLOMTynJD+vTK4dcW4jJHepLLlLla38DBXJpWUy2rBzHE0e/mE5SXndvf7rj5rs2Nnq2/1N
      uZQuyibsh3Blx47Z4jeIuM/1j0Q1XZmvyd3izyC0FXT2a4HmdrfV2VuW9XqbysbRPLUhyDRv
      qWLohgsA0dmF27oq9rnj9r24tujEluywrTp2A+euzdgr7B7zt4ItVwRFpvI2IvLpkZTj10z1
      bZTlNm1qhU+UiHM7VbcxUBL2g9iSi9kr+7NGnOf4QWG567uBeb2xoQNAdHbROXRVLAfF7Xtw
      /M7enPA8QICVYV0CwHIOE3FElgLDEy6kqq/Hq4jHuhESHTtu3+Mvv5le0NkDrD7WPABi9kso
      yVPNNbkEZbmHicjTRfTgLn5DQ1/4kf9Z0zJcvTB5fbCqAZCyX4st7+KLS7Ca14nu2fLz9evs
      4fEv4+SnAbDMGMsJJCLjX8QriNSNkXCC5RRCiWd/Az0/CUA01g1HfnvVfb7x4JE+95/8b/G+
      O+DoHxMd+YTP6ck7IdJ8PvvGwYaeA7SL8MRXsHNTAJhmFHgXkYkv480NCC7SCfws2VNvJTx/
      EQAr2g23fp3w+BdhQZw5Y8V6gXeQePY30fJiWy4S64SjH0bPP4mTGwVAV8XwTc8/iV4Wq0q6
      HQFedE3XoedP4VYXV3JiwAuuqb7VRtcP7vc/p3ufC/uW5vBW8IiOfNL/rm9NQdfSAFDshYan
      h1rdC+G+JXatoNrzjWUr+8HovkyJ5bGiAKiWC4xOLZCJGZTRiZoGrusQDq/N64pa4Qx6Tmyi
      6LoOdKEVzqLnFzkD6CI88RXc2fMAGOEs16oQ0gunMXLD4rOyZVm75LO/jpkfAyCS2AbP+yod
      J95AuSCCJ5rcAbd8hcj4I4TKIvV7OJYF3oaeexK3Ktb8NTcGdJB85oNUy3MAxDP74LkvIPnM
      f6Mq08bH09vh8G+g50/6b87oJIAseu4EipQNLHLR0c/gOCKgwqle4I2knv7PuJKLd+yFg7+C
      vvAErlz019QUcAepc7+EJ5dGY10H4MAHrvr3DFVGiI484n/Xk3ehW3bD08NKvxcSP7WkrJ5/
      ktTZ2tPWiv0UumU1lu14H8Re154vpQtER77if19ZADge5WKeyUoR13O5ODlB355DmKbQWDRJ
      Y5bXvNQbSrv4hd/BmxW7eboRxT7yMeIDv40yc05wZhL7ef9IfOBDqLPPCM5KYz/vGzQLZpoT
      bS1yDZ5cRkPT4F4LPc9i2dZJv5Ym7oqMPYJWFE+ocGontv1mkud/hWppBoBYejf28Uca6lps
      V8+dRKksAKAZZWzbJvn0+3GqIihi2YPYxz5F6un/iiOT98Y6DmMfew6RkU/jyj0Jy74F234D
      Ru4ErtxsC0WEf6mnfxlP7ivEuo9hH/3f6Lkn/HSJWkxrqQ9aqvth6cmRrguFwXNgWYAAABRM
      SURBVIanQmhLCtfY32Dneh7a7Hfo+sF7fC4cei9eaidG7omaYek+XKMxqa/ruljT36LrB7/o
      c6bxPkKJPaTO1o5D12NvQg25Db6sKACmRi6SL2lEtBJVDDLZDIV8ATUdl1qgOmOpUcmc+TlC
      E6fEhesRtOP/SubMu9EmTwsH9Bja8W+jF89i5M4Izkgse/pj65MZWyTkasHV43KnNSoNcp7l
      k2q1TvrV3smRSguu0ZVW+qDLnPTY6iRKZWnZK7XRSgu0nH/NJ0KKZFlNdqpKqDnhVYuTI1VF
      aXmaZDsnPS7Hae5CQ/Bozgyqnm6wW1EA9O8+yPIJtSF95j2o4yeEA5oFx7+3kuoDBLjuuCkm
      weN0MuOJx38EsZX/de5m1BOrNikvzj3A17iHcU8MRdJekruBr3EvE55YLcp4Ke4G/t67jylP
      DE86vDQvAR73jjIntTAZr4sXX6+L29BQ+K5XW/bcyT6eAwx6tTehe7xYy5fY50g0lE3QQxfJ
      Bi5JD1sxG+rbSgwVq4HrJ8rV5hHZMAEwTidTnsi1b8osL9/wXsKgdwCAKBHuA05wiHEvKbk4
      9wJf9+7mEqLDpr0IPwWMeV0MSaVqUb4KPeZ1MYx42bcs9ayjdDEqf74KQnsyRhdjiIm9LX15
      nCNMSFVjr8xgM+J1k5cyi6TMifZD7ygLnlhW7aCXu4C/8x5g3lss28VdwA+4lbwnxvZdbOFO
      YIQeSp7wNYPQ84zQQ9kTfmUR2aYf4zbKMuB7vR28UHIVT4z3t3g7l10/GvJ6cTwxB6h6or7v
      e8dxpERkG3uXTWT1Ea+2RHyELdwBfI/n+FzZ24KHwhd5yOfi7MXzuhrKvpVj7CLRUPYwPRhN
      3BG6CZFuqK+DXfSSbOA62UUIuyF4MnQRJ9XAZelEpYsveA/63JoHwD96dzLgiXzspmfwAHDS
      O8iI/EObhLkf+AfvxZznMAAxz+TNwBidDEltT9wTnfSEd5gLMtdC0lvfZFl/z31MIiajfST5
      d8APOco0YuNvq7z3jdDNrAwa1RNj0B94tzKH6LDbPfHU+qr3UhYQy6o7vSyvBf7G+3Hyktvl
      dfAw8G/ebRQQnXiPDJTHvNsoybxKe2Uw/qH305TlHsx+r5sXAF/mFVQRnf0gPTwEfI/bcaQU
      OSd/2495b/dXhm6hb0NndwOYId0QPMfpokq0gbvd6yJFmCHWSA79iPcaznji3mN6Gi9F3NmH
      5BKKJVWZpzjE0/IPF1mj5Lq7YwUSrrjDJsKi/Zf1TDAfF0OgiCWeInujBTLyTpyKimDbE82T
      RXCZWPDG+s2MDTME2hUtYMnlvrAh7mT3d00yExabT6ZMl7g7WiBqC7uoJe5k79p1gWJBrMfr
      8jSYd++6gFsWZRVddPaXdU/glsclJ+6qP7d7AK8yITlxJ37PngG8iggUxRDDhI/eegqvOi25
      5XX0rfBg7zjFshgCpWLOFaxvLHzwwDn/cyIlFp5et2XE5w7Ec4S1LIfiCz7XYVToMSsNdvtj
      edJmtIHbF8tToHHVZrWx5gHwMzsukc+K3VdVpkG8t2uSY6a4UF2mQXz7zou4PZdEoZDMDdo1
      iZuQnTgkxuzv3HUBtyQ2qRRNHn0ULeBqOcldv1fM3rtngEpZjPetsAiKjx87iWeLzSzVFHnc
      XtkzjmeL+Y1qibXJPz5+Ek8GsmqJyfUv7TuPLXVTkagYWr1v3zP++n4kJv7vl/c/gyPPDYvG
      xP/95/3P4Mpjk6Jx8e+BeI6qLW4m2yLit3pN3yiuXPPvSosn8mv7RnHlHKA7vfwT+a/u+KH/
      OSR9OZSove0VihRRFI/XbRn1OTOeJxQp8MGDT9e47FFCVrzJLodqJRu5WB7Vmmto1+zZi2o0
      +mJ27+NsOdwQZBm92vIaErrdYLeqAfDrh87g7HhWfJFvV+2MFnAV+SOpwql7OydxY/JC1Rs3
      6e3eWB7PFNemrsLJkftjeTxHdHzVEh1sfzwPMmmwGpZcLAcya7YaFgFwIJ4DeW6CGhF2/2Xf
      M+AtbnqJDv5w3yjIeUEoKm4qD28Z9U+ODEXFhPvTz/0hi7t/IRmMGxkH4rmGILMyz0XRGwPF
      6j6IosUb7K4qACZGhyh7OslYmKptk0mv7WPqRoc95OLJ/IZq3IWDl7GryI6YEHbOoINXlVzS
      hQPgDLp4diNnD7qwyKVc2A/2oANyt9ZLS+6SC4tZFTIu7AP7olM7OlVypX+x/Z1gvc8mug9y
      nyn7O93G7gqRPZD7dMn339hTJbILZn+r4HPJ11cxdjuN3BuqGDsaudRP2hh73Yb61FfahGIO
      sx+qs3uTjbHDabR7yEHv8yj9c+2ur93lokbdRu7FLqGsvN5FrvWf4nLwKNsunlfizBOn2XWs
      tuBW/pGNPbaY4VkhcQwqj9vY44JTdBVuhcqP6jhDE9zjNvaE5MwqHIXCoxXsEXGhSlQjfhQK
      f1fBHpV3v5hB/IjkxiQXN4kfgfk/KWKPiB8ulDaJfxzm/7iEPSq5jEX8D2Dhj4rY45LrCBP/
      KMz/YQlnQnKdReIfgfmPF3GmpKy7u0j892D+D4o405LrKRH7XZj/WBFnVnJ9RWK/A/kvlnHn
      xN1Z21IhdQ/MfaSAOy/TwfcXiX0I8p8v4+akuG5bheTdkPt8GS8vuR0Vki+B3OfKeEXJ7RRc
      /pESXklwxu4KyRdD/rNlvIp4Ahh7qiTvgtxnyyAFd8beCok7IffXZT9QzP1VEndC6dtVkClE
      vAM2vLax44Ti4v+G7Np8KOEkySgKTxyvncy4v6eLVCLewB3o6SLRxB3s7iTrGQ31qW4EJZlo
      sDvU1UHaMxvsQm4YI69z4XzteNhtxyx0jEbuNotY3hGBLHEVAaDg2RUq6OzYd5Di/DREhRJv
      dDhJ/oJoUDUMuoAnyzuZLYpxvuYYvAwYGUxSGBR2Icuic5Ebklw4TCfwVHoP87ZYPjTCYXqB
      0+m9LDhiedGIROgBnkzvIeeKp5AZjdIDnD28n1yv+JGsWIwtwJnD+8nLJF5WPM4W4KlbDlCY
      FWP1cCIh7G45QGFOLAdGkkm2AJPdnVQM8XOZ2Sx9wOkjByktyAl5OiO4o4coSQFfLJP1uXJ+
      UbvTQR/w5NHDVAoiAOIdnfQCT956mEpRDGkSnV2Su4VqSQR3oqubXuDUsVuwpQo12d0juSPY
      srOnenrpAU7edgRHdvZUX5/PuVLXk96yRXDHj/r5dzJbt9INfOPl9/nLoD3dPbwC+NR/eJPf
      C7alMvwk8H9e+YDPbU9n2asonLj9Vp9L93ShxeMNXKanC7WJ6+jpwovGGuq7Z9d2MpFYg11X
      dyd2ONJgd9/O7SQsq4G7f0c/MbORe2B7PxHD4Et113FVQ6D+Hbsbvi8mxiq95E4KC8JZVQ3h
      OA7hI4dxdoqzZ9WQ4Ir33EVBdpJQSJPciylIlaemCW7Xgf1Ut4o1W1XXcRyH3Qf3U82JSaNq
      GDiOw56DB6jKDhYyTGl3ELsgOVNwew4dxJadLmRZOI7D3kOHsIuLXFhwhw9hy46ohQWXvvsu
      HNkRtXAEx3HYd/gwTllyEcndchhHdk4tEsVxHPbfcgtORd6xozHBHbkFV3ZYPVbHyQ6rx+I4
      jsOBo0d8zojXOE92YiOekNxRPClEMxJJHMfh4K1H8WTHNpKCO3TrUSFQA8xkStgdu9W/25sp
      wb2kp9cf7pipNI7j8AZPrXGeguu6vMGtCY4sFzzHaeCSLphNdikXDNdr4jwStsP7ipVax6o6
      YNuNXMUGrdmuFeeAai+1U0INnOI1SxqvEo7jEAqFfIWkoigBt4m4RWFgM+d5IuPbanKe5zUk
      Y7sWbtXWDBfVeIqi4FYKzBeroiHXZnh4FKdaJF+2fW50dIzRkWFsF8k55HI5hoaHcVzhpFMp
      USpXGLw0iOMJO8euUCwWuXjhIra0q5ZyjE3N+n8EVVVxnSojwyMMDQ35ZT3XYejSBQZHJ/DA
      92VkeIjh0XE8r/E6ysUcpaoj2q2WGR2boFwqULFdnxsbG2dkZBRXlnXtqryOEVz5Y5dLRSrl
      EoNDNbtquUSpmOfipWHfrpCbY3ou13AdTqXIyMgog8MjflnPqXDxwgVGJ6b863DtCkNDQ4yO
      Ty65joWFef83rZYKjE3OkM/n/HarpTzjExMNv4FdrfjXsdhp8vk8drnA4OiE71+pUKBUyHFh
      aNTn5menmc8VGvrG/Ow0o6OjTEzN+lx+YY4LF55lLlf0udz8DMPDw8zO55f0q9m5Of/z3PQk
      uUKJBTkEVRSF2elJJicnmJ6d97lSscDM5ChTcwWfy+fzzM1MMjOXW70AUBQFp5zjiZOnGRw4
      x1SugqIo2IVZClWXp0+fZHJBcJXcFDMz8+Rz80xIzrXLDAwMMHBp2K+vUpjl5MknmF9YYDpf
      RVEUqsUFTj7xOEOj4yyUHBRFobgwQ75U4eKlQSq2K7j5KS4MXGB4dJS5oi0ufHac4dEJiguz
      zOQlNzfJ9EKZuclhcmVZ3/wkT555mmeePkdecrnZSSqOy5OnTpEribJzU+PMzi2wkJsjVxZc
      tVJkYGCASyOjtQ44O8mPTpxiITdHsSrqyy/M8MPHf8TYxAQVW9yNpqenqVZKXBwcwnElNznO
      wIUBRsbGqTri2iZGhhidnmV+dtq/3qmxEYpVl9GRIWxZdm58iDPnL/LU2XN+fVPjo3i4PH7i
      SVzJjQ6PMLeQYz43hyvvjJVijoGBAYbGJ/3rmJwY49+eOE0+N1vX6SZ47AdPMDldsxuZmAK7
      yMWhERRFQVEUhoeHuXDxEmPjoz53aXCIfLHC6PAlnxscHJL/N+hzT599iuHhYc4PXPS50clp
      ivPTnDk/4HPjk9MsLOSZnBjzuZnJMZ595mnmS9VauxcHeHZwjInxkdULAHH1sKW3m3xVpzMh
      Jr6qbpGJW7ihKNm42AgLGVG6u7OUilXiYSE1cF2Hvr4+ooZGSebL0cwou3buAg+ihrBTNYNd
      e/aSjEcx5aaXEYmTsELkFnL+6SeaGWHv/r1ErAhhXfXr27atH8dxicicjIqqoWsquw4cIW6J
      NhzXQ9cN9h46RjYm9jNCmkG1XOGWY7eTjsokXKaFZhhs376LuCWmU+VSiUgsyZFDB8Xhz4Bu
      mGQ7u9mzZ69/HSgq3b1bue3Wo1jSv7Blki+U6OvtJaSKspph0dO7lWNHbvGvVzPDZJJJdu/Z
      63PReBy3XMSMxJBF0cwwqlMmnkyjLWbaSCZZmJkh29EhDqwG0pk0iuvgOPhlXdfFsixMvZYn
      KJNMkE2nqD9rPRqN0tXVQSRc2wfpSsUZn5ylUKwtVaZTKTLpFLFoLTlVKhFFVRTCkRrXkc0y
      PT1JR7bD55LJJHNzM/T21jQ8mWScqdlZtvTUuHQyTrmUJxKrHSCm6RZGJOa/lw6QSacxNYgn
      s6sbAIqiMjo0QLFS91aVojIydIFSxaFGKYwMXhDH/Hi1ssODF0DRauNMVWF48AIV2/Hf8FIU
      hZHBS1Sqrl9fKBRiZPAilWqtXUVRGB4Uw6RFTlVgbHSYcrXmi12t0NnTy8ykuMMKrkpHVzdT
      46PYkqtWq3R0dzM1PoYjs0hVqhU6u7uZmZrEkXaVapWu7m7mZ2f8RFWVSpXu7i4mG8pW6ent
      ZWJ81Odsx6W3p5uxsRpXrlTo7e1mYnwc1+eq9PdvYWxkxOcqlQrlakW+DSdQrVQolkpUq1X/
      N6hUKpTKzVyZYqmE69beo6uUKxRL5YYXTRbt6t8Oq5TLlCtV7GqNcxzHb3cRpXKZSrWKbde4
      csXGcWwq1dqyZC6fxwjH/Z1ugHw+j2ZEcKpNnBltsMvlc2hWzM+Qt8hZsTQ4jWV1K45TLa5u
      AHiug2M7OIrq/5Cea+PaDo6i+J3dcx1cR3ANdpJbhOtIO+rL2riug1hA8Gp2rivsfM4WXN0U
      33UdkSK7zmfDtLhw9iQjEzP+gXKmaTFw5gSjk7M1zjJ59qkTjE7N+uduWabFM6dPMDY167cT
      Nk3OnT7J+NSs3znDlsnZJ08yPj3nd+ywafLUqRNMTM/5y40Ry+T0qRNMTs/5mdoilsmTJ08w
      NTvfwJ08ITl5HYqiUKlUUKh7EayOq0GhXKmioPgvrymK4NSmN8jKlUoDp6BQqlRokAcqgmuw
      a1VWUSmXiyhK6LKcqqoszE1RrroN3PzcFJWq18jNTFKx6zgltJTz7Wjixqk6qyyFUEI6VjhG
      f3cHVdsFQqiagRWJ0d/VIe+wIWEXibO1M4ttu2AKu3AkTn9nBlv2JsEl6O9MN3LRBNmOGhfS
      DCLRONlsHacbRKIJstkUjusCqrSTnOOBDppuEI0lyWSSfucM6QbReJJMusZpdZxbx8XiKdLp
      eI0zDKKJJJlU3M/Lqes1brET64ZBLJEinYyJFciQsFvkxFNQQTdMYsk06URUBoqCYRjEk2lS
      iahvZxim4OJR/84u7DKk4rXhiWmaJFJpUrEwsiimYZJIZUjGrCa7pVwylSEZbeLSWZIRs7Fs
      E2dZJl09W9HrbrmWZdLdsxXtCpxpmnT39KOpXiPX14+meA1le/r6CV2BM02Tnr7thBR39Z8A
      aCbzE0PMy7VWz3EgZDI7PsRCserbKZohuJLkHBtFM5kZH67ZOTaKbjA9NkSuzk7VBJcvibB2
      HRtVM5kaGyJfruN0g8nRIQpN3MToEAV5S3Bsm5BuMD4ySLFSswvpBmMjg5SkDGHRbnRkkJKU
      K7i2jWYYjA4PNdjpusHI0BAVe5GrohsGw0ODNa5qY0jOH3rZVQzDYKiOc6pVDEPn0uCgP6Sy
      7SqmYXDp0qAIZMSwzTQNLg5ekgG/yOlcuHSpNsyqVrEMnYGLg/5Qs1qtYpmLnPhb2hXBPXth
      sDakqlYJWzrnLw76f3O7UiVsNnLVSmUpV60SwmVobKLOroraDletouIw3Mx5DsNykr7IKc1c
      pQVXraJ4NiPjk/z/EjAlO8NMZBoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='洲Top5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5 (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
