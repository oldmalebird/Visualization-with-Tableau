<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='FAO' inline='true' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FAO' name='textscan.0cbagav12h7cdy1d4j6ey1bx4577'>
            <connection class='textscan' directory='D:/GitHub/Visualization with Tableau/VizChallenge5' filename='FAO.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Area&amp;Continent' name='excel-direct.17ypuc609xqdst1amx3001vp16xe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/GitHub/Visualization with Tableau/VizChallenge5/Area&amp;Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FAO.csv].[Area]' />
              <expression op='[FAO Area].[Area]' />
            </expression>
          </clause>
          <relation name='数据透视表' type='pivot'>
            <columns>
              <column datatype='string' name='数据透视表字段名称' />
              <column datatype='integer' name='数据透视表字段值' />
            </columns>
            <tag name='数据透视表字段名称'>
              <value name='[Y1961]' />
              <value name='[Y1962]' />
              <value name='[Y1963]' />
              <value name='[Y1964]' />
              <value name='[Y1965]' />
              <value name='[Y1966]' />
              <value name='[Y1967]' />
              <value name='[Y1968]' />
              <value name='[Y1969]' />
              <value name='[Y1970]' />
              <value name='[Y1971]' />
              <value name='[Y1972]' />
              <value name='[Y1973]' />
              <value name='[Y1974]' />
              <value name='[Y1975]' />
              <value name='[Y1976]' />
              <value name='[Y1977]' />
              <value name='[Y1978]' />
              <value name='[Y1979]' />
              <value name='[Y1980]' />
              <value name='[Y1981]' />
              <value name='[Y1982]' />
              <value name='[Y1983]' />
              <value name='[Y1984]' />
              <value name='[Y1985]' />
              <value name='[Y1986]' />
              <value name='[Y1987]' />
              <value name='[Y1988]' />
              <value name='[Y1989]' />
              <value name='[Y1990]' />
              <value name='[Y1991]' />
              <value name='[Y1992]' />
              <value name='[Y1993]' />
              <value name='[Y1994]' />
              <value name='[Y1995]' />
              <value name='[Y1996]' />
              <value name='[Y1997]' />
              <value name='[Y1998]' />
              <value name='[Y1999]' />
              <value name='[Y2000]' />
              <value name='[Y2001]' />
              <value name='[Y2002]' />
              <value name='[Y2003]' />
              <value name='[Y2004]' />
              <value name='[Y2005]' />
              <value name='[Y2006]' />
              <value name='[Y2007]' />
              <value name='[Y2008]' />
              <value name='[Y2009]' />
              <value name='[Y2010]' />
              <value name='[Y2011]' />
              <value name='[Y2012]' />
              <value name='[Y2013]' />
            </tag>
            <groups>
              <group name='数据透视表字段值'>
                <field name='[FAO.csv].[Y1961]' />
                <field name='[FAO.csv].[Y1962]' />
                <field name='[FAO.csv].[Y1963]' />
                <field name='[FAO.csv].[Y1964]' />
                <field name='[FAO.csv].[Y1965]' />
                <field name='[FAO.csv].[Y1966]' />
                <field name='[FAO.csv].[Y1967]' />
                <field name='[FAO.csv].[Y1968]' />
                <field name='[FAO.csv].[Y1969]' />
                <field name='[FAO.csv].[Y1970]' />
                <field name='[FAO.csv].[Y1971]' />
                <field name='[FAO.csv].[Y1972]' />
                <field name='[FAO.csv].[Y1973]' />
                <field name='[FAO.csv].[Y1974]' />
                <field name='[FAO.csv].[Y1975]' />
                <field name='[FAO.csv].[Y1976]' />
                <field name='[FAO.csv].[Y1977]' />
                <field name='[FAO.csv].[Y1978]' />
                <field name='[FAO.csv].[Y1979]' />
                <field name='[FAO.csv].[Y1980]' />
                <field name='[FAO.csv].[Y1981]' />
                <field name='[FAO.csv].[Y1982]' />
                <field name='[FAO.csv].[Y1983]' />
                <field name='[FAO.csv].[Y1984]' />
                <field name='[FAO.csv].[Y1985]' />
                <field name='[FAO.csv].[Y1986]' />
                <field name='[FAO.csv].[Y1987]' />
                <field name='[FAO.csv].[Y1988]' />
                <field name='[FAO.csv].[Y1989]' />
                <field name='[FAO.csv].[Y1990]' />
                <field name='[FAO.csv].[Y1991]' />
                <field name='[FAO.csv].[Y1992]' />
                <field name='[FAO.csv].[Y1993]' />
                <field name='[FAO.csv].[Y1994]' />
                <field name='[FAO.csv].[Y1995]' />
                <field name='[FAO.csv].[Y1996]' />
                <field name='[FAO.csv].[Y1997]' />
                <field name='[FAO.csv].[Y1998]' />
                <field name='[FAO.csv].[Y1999]' />
                <field name='[FAO.csv].[Y2000]' />
                <field name='[FAO.csv].[Y2001]' />
                <field name='[FAO.csv].[Y2002]' />
                <field name='[FAO.csv].[Y2003]' />
                <field name='[FAO.csv].[Y2004]' />
                <field name='[FAO.csv].[Y2005]' />
                <field name='[FAO.csv].[Y2006]' />
                <field name='[FAO.csv].[Y2007]' />
                <field name='[FAO.csv].[Y2008]' />
                <field name='[FAO.csv].[Y2009]' />
                <field name='[FAO.csv].[Y2010]' />
                <field name='[FAO.csv].[Y2011]' />
                <field name='[FAO.csv].[Y2012]' />
                <field name='[FAO.csv].[Y2013]' />
              </group>
            </groups>
            <relation connection='textscan.0cbagav12h7cdy1d4j6ey1bx4577' name='FAO.csv' table='[FAO#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                <column datatype='string' name='Area Abbreviation' ordinal='0' />
                <column datatype='integer' name='Area Code' ordinal='1' />
                <column datatype='string' name='Area' ordinal='2' />
                <column datatype='integer' name='Item Code' ordinal='3' />
                <column datatype='string' name='Item' ordinal='4' />
                <column datatype='integer' name='Element Code' ordinal='5' />
                <column datatype='string' name='Element' ordinal='6' />
                <column datatype='string' name='Unit' ordinal='7' />
                <column datatype='real' name='latitude' ordinal='8' />
                <column datatype='real' name='longitude' ordinal='9' />
                <column datatype='integer' name='Y1961' ordinal='10' />
                <column datatype='integer' name='Y1962' ordinal='11' />
                <column datatype='integer' name='Y1963' ordinal='12' />
                <column datatype='integer' name='Y1964' ordinal='13' />
                <column datatype='integer' name='Y1965' ordinal='14' />
                <column datatype='integer' name='Y1966' ordinal='15' />
                <column datatype='integer' name='Y1967' ordinal='16' />
                <column datatype='integer' name='Y1968' ordinal='17' />
                <column datatype='integer' name='Y1969' ordinal='18' />
                <column datatype='integer' name='Y1970' ordinal='19' />
                <column datatype='integer' name='Y1971' ordinal='20' />
                <column datatype='integer' name='Y1972' ordinal='21' />
                <column datatype='integer' name='Y1973' ordinal='22' />
                <column datatype='integer' name='Y1974' ordinal='23' />
                <column datatype='integer' name='Y1975' ordinal='24' />
                <column datatype='integer' name='Y1976' ordinal='25' />
                <column datatype='integer' name='Y1977' ordinal='26' />
                <column datatype='integer' name='Y1978' ordinal='27' />
                <column datatype='integer' name='Y1979' ordinal='28' />
                <column datatype='integer' name='Y1980' ordinal='29' />
                <column datatype='integer' name='Y1981' ordinal='30' />
                <column datatype='integer' name='Y1982' ordinal='31' />
                <column datatype='integer' name='Y1983' ordinal='32' />
                <column datatype='integer' name='Y1984' ordinal='33' />
                <column datatype='integer' name='Y1985' ordinal='34' />
                <column datatype='integer' name='Y1986' ordinal='35' />
                <column datatype='integer' name='Y1987' ordinal='36' />
                <column datatype='integer' name='Y1988' ordinal='37' />
                <column datatype='integer' name='Y1989' ordinal='38' />
                <column datatype='integer' name='Y1990' ordinal='39' />
                <column datatype='integer' name='Y1991' ordinal='40' />
                <column datatype='integer' name='Y1992' ordinal='41' />
                <column datatype='integer' name='Y1993' ordinal='42' />
                <column datatype='integer' name='Y1994' ordinal='43' />
                <column datatype='integer' name='Y1995' ordinal='44' />
                <column datatype='integer' name='Y1996' ordinal='45' />
                <column datatype='integer' name='Y1997' ordinal='46' />
                <column datatype='integer' name='Y1998' ordinal='47' />
                <column datatype='integer' name='Y1999' ordinal='48' />
                <column datatype='integer' name='Y2000' ordinal='49' />
                <column datatype='integer' name='Y2001' ordinal='50' />
                <column datatype='integer' name='Y2002' ordinal='51' />
                <column datatype='integer' name='Y2003' ordinal='52' />
                <column datatype='integer' name='Y2004' ordinal='53' />
                <column datatype='integer' name='Y2005' ordinal='54' />
                <column datatype='integer' name='Y2006' ordinal='55' />
                <column datatype='integer' name='Y2007' ordinal='56' />
                <column datatype='integer' name='Y2008' ordinal='57' />
                <column datatype='integer' name='Y2009' ordinal='58' />
                <column datatype='integer' name='Y2010' ordinal='59' />
                <column datatype='integer' name='Y2011' ordinal='60' />
                <column datatype='integer' name='Y2012' ordinal='61' />
                <column datatype='integer' name='Y2013' ordinal='62' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.17ypuc609xqdst1amx3001vp16xe' name='FAO Area' table='[&apos;FAO Area$&apos;]' type='table'>
            <columns gridOrigin='A1:B175:no:A1:B175:0' header='yes' outcome='6'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Area (FAO Area)]' value='[FAO Area].[Area]' />
          <map key='[Area Abbreviation]' value='[FAO.csv].[Area Abbreviation]' />
          <map key='[Area Code]' value='[FAO.csv].[Area Code]' />
          <map key='[Area]' value='[FAO.csv].[Area]' />
          <map key='[Continent]' value='[FAO Area].[Continent]' />
          <map key='[Element Code]' value='[FAO.csv].[Element Code]' />
          <map key='[Element]' value='[FAO.csv].[Element]' />
          <map key='[Item Code]' value='[FAO.csv].[Item Code]' />
          <map key='[Item]' value='[FAO.csv].[Item]' />
          <map key='[Unit]' value='[FAO.csv].[Unit]' />
          <map key='[latitude]' value='[FAO.csv].[latitude]' />
          <map key='[longitude]' value='[FAO.csv].[longitude]' />
          <map key='[数据透视表字段值]' value='[数据透视表].[数据透视表字段值]' />
          <map key='[数据透视表字段名称]' value='[数据透视表].[数据透视表字段名称]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Abbreviation]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Abbreviation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Element Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Element]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段名称</remote-name>
            <remote-type>129</remote-type>
            <local-name>[数据透视表字段名称]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段名称</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段值</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数据透视表字段值]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段值</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (FAO Area)]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B175:no:A1:B175:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[Area (FAO Area)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Element Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Item]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Alcoholic Beverages&quot;</value>
            <value>&quot;Beer&quot;</value>
            <value>&quot;Beverages, Alcoholic&quot;</value>
            <value>&quot;Beverages, Fermented&quot;</value>
            <value>&quot;Coffee and products&quot;</value>
            <value>&quot;Stimulants&quot;</value>
            <value>&quot;Tea (including mate)&quot;</value>
            <value>&quot;Wine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats and oil&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Butter, Ghee&quot;</value>
            <value>&quot;Coconut Oil&quot;</value>
            <value>&quot;Cottonseed Oil&quot;</value>
            <value>&quot;Cream&quot;</value>
            <value>&quot;Fats, Animals, Raw&quot;</value>
            <value>&quot;Fish, Body Oil&quot;</value>
            <value>&quot;Fish, Liver Oil&quot;</value>
            <value>&quot;Groundnut Oil&quot;</value>
            <value>&quot;Maize Germ Oil&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Oilcrops Oil, Other&quot;</value>
            <value>&quot;Oilcrops, Other&quot;</value>
            <value>&quot;Olive Oil&quot;</value>
            <value>&quot;Palm Oil&quot;</value>
            <value>&quot;Palmkernel Oil&quot;</value>
            <value>&quot;Rape and Mustard Oil&quot;</value>
            <value>&quot;Ricebran Oil&quot;</value>
            <value>&quot;Sesameseed Oil&quot;</value>
            <value>&quot;Soyabean Oil&quot;</value>
            <value>&quot;Sunflowerseed Oil&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
            <value>&quot;Aquatic Animals, Others&quot;</value>
            <value>&quot;Aquatic Products, Other&quot;</value>
            <value>&quot;Cephalopods&quot;</value>
            <value>&quot;Crustaceans&quot;</value>
            <value>&quot;Demersal Fish&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Freshwater Fish&quot;</value>
            <value>&quot;Marine Fish, Other&quot;</value>
            <value>&quot;Molluscs, Other&quot;</value>
            <value>&quot;Pelagic Fish&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruits&quot;'>
            <value>&quot;Apples and products&quot;</value>
            <value>&quot;Bananas&quot;</value>
            <value>&quot;Citrus, Other&quot;</value>
            <value>&quot;Coconuts - Incl Copra&quot;</value>
            <value>&quot;Dates&quot;</value>
            <value>&quot;Fruits - Excluding Wine&quot;</value>
            <value>&quot;Fruits, Other&quot;</value>
            <value>&quot;Grapefruit and products&quot;</value>
            <value>&quot;Grapes and products (excl wine)&quot;</value>
            <value>&quot;Lemons, Limes and products&quot;</value>
            <value>&quot;Olives (including preserved)&quot;</value>
            <value>&quot;Oranges, Mandarines&quot;</value>
            <value>&quot;Pineapples and products&quot;</value>
            <value>&quot;Plantains&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains, Roots&quot;'>
            <value>&quot;Barley and products&quot;</value>
            <value>&quot;Cassava and products&quot;</value>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Cereals, Other&quot;</value>
            <value>&quot;Maize and products&quot;</value>
            <value>&quot;Millet and products&quot;</value>
            <value>&quot;Oats&quot;</value>
            <value>&quot;Potatoes and products&quot;</value>
            <value>&quot;Rice (Milled Equivalent)&quot;</value>
            <value>&quot;Roots, Other&quot;</value>
            <value>&quot;Rye and products&quot;</value>
            <value>&quot;Sorghum and products&quot;</value>
            <value>&quot;Soyabeans&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sweet potatoes&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
            <value>&quot;Yams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bovine Meat&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Meat, Aquatic Mammals&quot;</value>
            <value>&quot;Meat, Other&quot;</value>
            <value>&quot;Mutton &amp; Goat Meat&quot;</value>
            <value>&quot;Pigmeat&quot;</value>
            <value>&quot;Poultry Meat&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Infant food&quot;</value>
            <value>&quot;Miscellaneous&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Offals, Edible&quot;</value>
            <value>&quot;Pulses&quot;</value>
            <value>&quot;Pulses, Other and products&quot;</value>
            <value>&quot;Spices&quot;</value>
            <value>&quot;Spices, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seed, nuts&quot;'>
            <value>&quot;Cloves&quot;</value>
            <value>&quot;Cocoa Beans and products&quot;</value>
            <value>&quot;Cottonseed&quot;</value>
            <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Palm kernels&quot;</value>
            <value>&quot;Rape and Mustardseed&quot;</value>
            <value>&quot;Sesame seed&quot;</value>
            <value>&quot;Sunflower seed&quot;</value>
            <value>&quot;Treenuts&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Suger&quot;'>
            <value>&quot;Sugar (Raw Equivalent)&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar beet&quot;</value>
            <value>&quot;Sugar cane&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
            <value>&quot;Sugar non-centrifugal&quot;</value>
            <value>&quot;Sweeteners, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vegetables&quot;'>
            <value>&quot;Aquatic Plants&quot;</value>
            <value>&quot;Beans&quot;</value>
            <value>&quot;Honey&quot;</value>
            <value>&quot;Onions&quot;</value>
            <value>&quot;Peas&quot;</value>
            <value>&quot;Pepper&quot;</value>
            <value>&quot;Pimento&quot;</value>
            <value>&quot;Tomatoes and products&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Vegetables, Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Unit]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
        <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
      </column>
      <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
      <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <group caption='工具提示(Area)' hidden='true' name='[Tooltip (Area)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area, Area Code'>
          <field>[Area]</field>
          <field>[Area Code]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.496732' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.169935' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bovine Meat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spices, Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vegetables, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groundnut Oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Offals, Edible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops Oil, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages, Alcoholic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poultry Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rape and Mustard Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rye and products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweeteners, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treenuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aquatic Plants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocoa Beans and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pimento&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter, Ghee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Potatoes and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apples and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barley and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottonseed Oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Infant food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mutton &amp; Goat Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pulses, Other and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sesameseed Oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demersal Fish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapes and products (excl wine)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelagic Fish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquatic Animals, Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts - Incl Copra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemons, Limes and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maize and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olives (including preserved)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pigmeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Fermented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fats, Animals, Raw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassava and products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges, Mandarines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rape and Mustardseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aquatic Products, Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rice (Milled Equivalent)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflowerseed Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Groundnuts (Shelled Eq)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize Germ Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat, Aquatic Mammals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tomatoes and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cereals, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapefruit and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Fish, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmkernel Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sugar (Raw Equivalent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fruits, Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soyabeans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coffee and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fish, Liver Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar non-centrifugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshwater Fish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soyabean Oil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tea (including mate)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cephalopods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ricebran Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roots, Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Citrus, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crustaceans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oilcrops, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sorghum and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coconut Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fish, Body Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pineapples and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molluscs, Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Oil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Item (组)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fats and oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains, Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fish, Aquatic Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seed, nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C�te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1961'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='1992list'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='1991' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;Iceland&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='100000' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Country1992'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area)]'>
            <groupfilter function='level-members' level='[Area]' user:ui-action-filter='[Action - Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1985' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1986' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1987' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1988' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1989' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1990' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1991' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1993' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1994' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='GroupTop5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='ItemTop5 '>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rank各国各item'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:7]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Beer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='5' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='6' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='7' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='8' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='9' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='feed 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed总量'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food-area,item group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='level-members' level='[none:数据透视表字段名称 - 拆分 1:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='food-item,area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='foodfeed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;United Republic of Tanzania&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1992' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='food肉蛋'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='gif area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='33' lines='true' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='gif continent  food'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif continent feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-transparency' value='173' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <geometry column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Latitude (generated)]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='map点'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Area:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='level-members' level='[none:数据透视表字段名称 - 拆分 1:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]' field-type='quantitative' max='20839916.792512849' min='-16930134.084558219' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]' field-type='quantitative' max='13219745.985721063' min='-8241024.1087532481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='milk'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Milk - Excluding Butter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcdf:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;China, mainland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='德国'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='仪表板 1'>
      <style />
      <size maxheight='1027' maxwidth='1569' minheight='1027' minwidth='1569' preset-index='15' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Item]' new-bin='true'>
            <bin default-name='false' value='&quot;Beverages&quot;'>
              <value>&quot;Alcoholic Beverages&quot;</value>
              <value>&quot;Beer&quot;</value>
              <value>&quot;Beverages, Alcoholic&quot;</value>
              <value>&quot;Beverages, Fermented&quot;</value>
              <value>&quot;Coffee and products&quot;</value>
              <value>&quot;Stimulants&quot;</value>
              <value>&quot;Tea (including mate)&quot;</value>
              <value>&quot;Wine&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fats and oil&quot;'>
              <value>&quot;Animal fats&quot;</value>
              <value>&quot;Butter, Ghee&quot;</value>
              <value>&quot;Coconut Oil&quot;</value>
              <value>&quot;Cottonseed Oil&quot;</value>
              <value>&quot;Cream&quot;</value>
              <value>&quot;Fats, Animals, Raw&quot;</value>
              <value>&quot;Fish, Body Oil&quot;</value>
              <value>&quot;Fish, Liver Oil&quot;</value>
              <value>&quot;Groundnut Oil&quot;</value>
              <value>&quot;Maize Germ Oil&quot;</value>
              <value>&quot;Oilcrops&quot;</value>
              <value>&quot;Oilcrops Oil, Other&quot;</value>
              <value>&quot;Oilcrops, Other&quot;</value>
              <value>&quot;Olive Oil&quot;</value>
              <value>&quot;Palm Oil&quot;</value>
              <value>&quot;Palmkernel Oil&quot;</value>
              <value>&quot;Rape and Mustard Oil&quot;</value>
              <value>&quot;Ricebran Oil&quot;</value>
              <value>&quot;Sesameseed Oil&quot;</value>
              <value>&quot;Soyabean Oil&quot;</value>
              <value>&quot;Sunflowerseed Oil&quot;</value>
              <value>&quot;Vegetable Oils&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
              <value>&quot;Aquatic Animals, Others&quot;</value>
              <value>&quot;Aquatic Products, Other&quot;</value>
              <value>&quot;Cephalopods&quot;</value>
              <value>&quot;Crustaceans&quot;</value>
              <value>&quot;Demersal Fish&quot;</value>
              <value>&quot;Fish, Seafood&quot;</value>
              <value>&quot;Freshwater Fish&quot;</value>
              <value>&quot;Marine Fish, Other&quot;</value>
              <value>&quot;Molluscs, Other&quot;</value>
              <value>&quot;Pelagic Fish&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fruits&quot;'>
              <value>&quot;Apples and products&quot;</value>
              <value>&quot;Bananas&quot;</value>
              <value>&quot;Citrus, Other&quot;</value>
              <value>&quot;Coconuts - Incl Copra&quot;</value>
              <value>&quot;Dates&quot;</value>
              <value>&quot;Fruits - Excluding Wine&quot;</value>
              <value>&quot;Fruits, Other&quot;</value>
              <value>&quot;Grapefruit and products&quot;</value>
              <value>&quot;Grapes and products (excl wine)&quot;</value>
              <value>&quot;Lemons, Limes and products&quot;</value>
              <value>&quot;Olives (including preserved)&quot;</value>
              <value>&quot;Oranges, Mandarines&quot;</value>
              <value>&quot;Pineapples and products&quot;</value>
              <value>&quot;Plantains&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Grains, Roots&quot;'>
              <value>&quot;Barley and products&quot;</value>
              <value>&quot;Cassava and products&quot;</value>
              <value>&quot;Cereals - Excluding Beer&quot;</value>
              <value>&quot;Cereals, Other&quot;</value>
              <value>&quot;Maize and products&quot;</value>
              <value>&quot;Millet and products&quot;</value>
              <value>&quot;Oats&quot;</value>
              <value>&quot;Potatoes and products&quot;</value>
              <value>&quot;Rice (Milled Equivalent)&quot;</value>
              <value>&quot;Roots, Other&quot;</value>
              <value>&quot;Rye and products&quot;</value>
              <value>&quot;Sorghum and products&quot;</value>
              <value>&quot;Soyabeans&quot;</value>
              <value>&quot;Starchy Roots&quot;</value>
              <value>&quot;Sweet potatoes&quot;</value>
              <value>&quot;Wheat and products&quot;</value>
              <value>&quot;Yams&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Meat&quot;'>
              <value>&quot;Bovine Meat&quot;</value>
              <value>&quot;Meat&quot;</value>
              <value>&quot;Meat, Aquatic Mammals&quot;</value>
              <value>&quot;Meat, Other&quot;</value>
              <value>&quot;Mutton &amp; Goat Meat&quot;</value>
              <value>&quot;Pigmeat&quot;</value>
              <value>&quot;Poultry Meat&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;Infant food&quot;</value>
              <value>&quot;Miscellaneous&quot;</value>
              <value>&quot;Offals&quot;</value>
              <value>&quot;Offals, Edible&quot;</value>
              <value>&quot;Pulses&quot;</value>
              <value>&quot;Pulses, Other and products&quot;</value>
              <value>&quot;Spices&quot;</value>
              <value>&quot;Spices, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Seed, nuts&quot;'>
              <value>&quot;Cloves&quot;</value>
              <value>&quot;Cocoa Beans and products&quot;</value>
              <value>&quot;Cottonseed&quot;</value>
              <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
              <value>&quot;Nuts and products&quot;</value>
              <value>&quot;Palm kernels&quot;</value>
              <value>&quot;Rape and Mustardseed&quot;</value>
              <value>&quot;Sesame seed&quot;</value>
              <value>&quot;Sunflower seed&quot;</value>
              <value>&quot;Treenuts&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Suger&quot;'>
              <value>&quot;Sugar (Raw Equivalent)&quot;</value>
              <value>&quot;Sugar &amp; Sweeteners&quot;</value>
              <value>&quot;Sugar beet&quot;</value>
              <value>&quot;Sugar cane&quot;</value>
              <value>&quot;Sugar Crops&quot;</value>
              <value>&quot;Sugar non-centrifugal&quot;</value>
              <value>&quot;Sweeteners, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vegetables&quot;'>
              <value>&quot;Aquatic Plants&quot;</value>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Honey&quot;</value>
              <value>&quot;Onions&quot;</value>
              <value>&quot;Peas&quot;</value>
              <value>&quot;Pepper&quot;</value>
              <value>&quot;Pimento&quot;</value>
              <value>&quot;Tomatoes and products&quot;</value>
              <value>&quot;Vegetables&quot;</value>
              <value>&quot;Vegetables, Other&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98442' id='5' param='horz' type='layout-flow' w='98980' x='510' y='779'>
            <zone h='98442' id='3' type='layout-basic' w='88782' x='510' y='779'>
              <zone h='49221' id='7' name='feed总量' w='88782' x='510' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49221' id='9' name='food肉蛋' w='88782' x='510' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98442' id='4' is-fixed='true' param='vert' type='layout-flow' w='10198' x='89292' y='779'>
              <zone h='8666' id='8' name='feed总量' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27167' id='10' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' w='10198' x='89292' y='9445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8666' id='11' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='36612'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='1961'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='foodfeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-item,area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-area,item group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Country1992'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1992list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='gif area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent  food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='milk'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GroupTop5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ItemTop5 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]' show-morefewerbutton='false' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='德国'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rank各国各item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:11]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food肉蛋'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed总量'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='仪表板 1'>
      <viewpoints>
        <viewpoint name='feed总量'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='food肉蛋'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1961' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1992list' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2013' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country1992' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GroupTop5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ItemTop5 ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rank各国各item' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5wdV33w/8/M3N7L9t60q20qlrQqVrElucgNuWOwTYwhxoEQSPIQkt8T
      fqRCSICEAMbYuADGNu5FkmWr9y5v0/bV9n539/Y+8/whYYxB4JVla607b//h12s1d+45c+c7
      Z86c7zkjKIqioFKlKPFiF0ClupjUAFClNDUAVClNDQBVSlMDQJXS1ABQpTQ1AFQpTQ0AVUpT
      A0CV0tQAUKU0NQBUKU0NAFVKUwNAldLUAFClNDUAVClNDQBVSlMDQJXS1ABQpTQ1AFQpTQ0A
      VUpTA0CV0tQAUKU0NQBUKU0NAFVKUwNAldLUAFClNDUAVClNDQBVSlMDQJXS1ABQpTQ1AFQp
      TQ0AVUpTA0CV0tQAUKU0NQBUKU0NAFVK05zrH8LhMMlk8qMsi0r1kTtnAAQCASKRyEdZFpXq
      Iyeor0lVpTK1D6BKaWoAqFLaOfsAv08hMNHF3i3b6A2CIGhwl9SwYulicmwz2M05REZbeasj
      wroltZj00gfen+rCmeo6wqHWEeJJEA12ymoWUpFtRRCEi120D2xGLUBosov6pi7shfOpqSxk
      /NDrvL6/jdB5f/0Ar33nX3mrG6KjbWw+0EAopj55mm2mT48g5uRRWlpCnj3K4QNNhORLo+s4
      40u3yZlN7aLlVDm8JHsaedvjJ06UyWEfGquecCCG1WUjPj2OL5JAEXTY09OxSgmmJicIRJKA
      gN5sx+VyU3fr3ehygbYLXznVhWIir2IuVUYDiYgLz0g3UcCUjBMK+AlGE2j0ZqxWE1pBIeyf
      xh9JIGqN2G1mJBRisSiKnCAUVrCm2dFd7CqdNeMACIz1cGDnZrokD+0jIotuKsdKG//xxZ9g
      vrmO2JSJ6+5cxukXfsGx0QgJXwDDys/w5TU29r7+HMd7pulrfBvHqr/g775Yziv/9FNK/vO7
      LPswaqe6QPx0njiGX6MlHpgimluFQ5Dxjp6m/tjb9HhC6Jx5LFiylBK9hyOHj3F6LIDO5Gbu
      8tVUGKI0HtvNlKRhesLFuk+tIeNiV+msGQdAMh4j5PcTNgjYHTZiPi8xBRKJIIJrHvfeMo80
      Q4Cp9Ewc4SkCgX6O7Gkkeus9bLz/a1x5ajPflzJYe/MqMg2jH0adVBdckmg4TEhKIhnM6GIR
      4okgPc0naO4P4nAa8Q920GRKQxGbON4fJ8tmIDbeyv6mUioWOwmGIljnreXKtdkYLnZ13mXG
      AWDPLWftTXdS7Q7x9ps/Z8eBRubXFqE3Z1G7aAEZZpF4x26eP+jj2k9dQ+6wlobdIjIQGzzC
      w08e47LP/AXLix1IqAHw8eCg+vIVVBuNJOJBGt7Yy1DcTVxjouyy+czJNAASZoeRvm0dzFu1
      mFKjHgCNNR2UEPbMIgpLcjBIs6vjPOPHoFG/h+72Jpoa6mlqGkLITMOgPfNUSKs5szslHiGk
      aDFoZbxTPuSkTHyyjV/85Jf4Si+jKDlO38AYEbW/+zERYbyvl9M9p+ltr6fVAwa9GadZj39k
      hFBCIRkOMe1NkFtpoKd5mIgMcjzAuCcICGgkDdIsO/kBpG9+85vffL8by8k4k4O9dHR10HV6
      EH3RMq67ZgVZJoVIQEP+/HKcOhCc2ZjG62nonMaRW0B6bilzcwxMeoYJTE7Q2Xma6YSZ/JIc
      pIhAdk0lbk2MqMZBVUkOOo06PDGbyPFRWhs76OsfZNQrULZ0CeUuGw6nnaS3n9b2bibCIum5
      +eQVl2KZ7qaprZsRb4K0vAIybHoQRaxOJ9qLXZn3UFMhVClNvdSqUpoaAKqUds6nQB6Ph2g0
      +lGWRaX6yJ0zAPR6PZKk5uSkEkVRiMViF7sYHym1E6x6hyzLKTcJSu0DqFKaGgCqlDbDVAiF
      8Ggzrz79DDuax8isXsdd96yg5/FXMd31edbkzpYcv/chNsXB17Yxmb+I9XUl6M9rJ5O8/r8/
      wrHxH1mZf4HLN4uMnHydVw50EUkIaCzpXLbmapaVui6J+QAzmhATmWjj2Ud+wXj5Rr795wuI
      ePpJJHyMdfVii8q/s3VguJWnX3+TBevvZUmx4wIX+09LRAK8+ov/RFz0BTZelv37G8hxpoaH
      GbWGOP9OUIyxng7k8Aco6MdA1Gth1Wfup8JoIDrdwaZtTfiKV2GfhakNM/X+A0CB0a4j9MaK
      uXN9HU6TBKZy4DQQZ7T9KG80TBCzF3P50mosFjfL6i4nM81MeKCevZ0RTMkJxrwyxXVXsDBP
      x3BrI/VtfQRlPXkV85lXkYfxvQ+ekhEG2k7RO+7F5/ciG9zkuo2M9fcTN+dRt2IJjmgfx080
      MTAVweQuZOHCGjLMWmoWX4km3wWedt5o9OKSPAxORHFWLOGKkt9WXU7E6H57Fw39fpKCkTlL
      1jAvV6DnxCkmSDI5MERIm8H8JQsodBnwDrZwor4DbyJCb1Am7YL8FLObKIqIggBosTvNiALI
      sQBDvd0MTAQxufIoKcnDookz2tVK93gQnT2b8tI8jEoCr9dDIhFiaFihdHE5totdobNm0AdQ
      CE94Eax5OOzvPUtjTE35AD8nN73Gvs5Jwp5+du7YTM9kDH/rNp587TCTcYFk7x4effltAnKU
      aa+fBBJKYIg3t26mfSTw+1+bCNKy903ePNRJREnSsP1pNh3rIynEOPbKo+zqDBLzeZmOJtBp
      4nQf3sb2w10EI2GOvPkr3h4Iw9BhHnlmO0MhkEfrefyZPXjfXTM5hnfSB5IOzXQ9v3p8F6P4
      aHzjVTYd7kYhRueBN9l+9DR+fw+bnnqaxpEYWgmSKfEMbZwDL7/A088+zxsHunGWFmIWkkyM
      DDA8FkSUJLzjvXT3eggOdtDmCSNJIrGRDpoGfMQCftoO7+JIex9RRWQ2tRsz6gOIGgE5ESGR
      UOB3mj8jpQtXc3V5gGjTo0xMR/idEBckbNlzufyq9Tgyh3nphUkisoA81cfet/Yw5PEyaixn
      9YYoYPkD32wku+Iy1l09F6HvEAOF87h6fRFy66v0TIVQ7GEGTu7lQOsw054ItTkrScg5v7MH
      vb2IpeuuJqM7zisPDfM7dy1KAt9IC9v2nMYXmCCAGS+LAC2ZZYu5al06pqkRGrwhAn3ttI2X
      cs9XbmWOfpzRnVtmcgg/phxUXT6HIp2eaGCIho4+Irla+psPsf3tcXQGiURMonixmWSingMN
      4+g0GuRoEH04m3lL05D1Nsprl1LmMjObRpfefwAIAs6SMgy7j3Gqw0NWpYtELIQsJAERrU6L
      KApnmsnfuyoKiBotGklEEs80OpG+kzy1f4Tr/vo7LBS6+eFz21HOeTcuImkkREFAEEUkjQZJ
      1CBJoDDJoVc2MZh3Gw/9nzIO/vIJ6vn9IgiSFq1GRBJEhPdcg4IDO9m838zn/uMhKqY383ff
      HD77eeFsvTjz3WeKArKMooCciJOQSQFaHOkZZJmMyHE7Uy27GVaK0ToLWHvrjVxW5kJMxonJ
      Ebq3D7DqkzexLM+JIMcJx0AI+rA7M8lIs8yqkx9m1AIIuPPquGJpL9s3/ZyeQ3b01nQWrSw7
      ry+WLA5yLRGObnqJIWuSEX8CAH/PEfZ16li6ZgGu95U7qyc9O53wqX0890IXE6fHiM+ZWVk0
      xiwc2n3sePV5Tmv7Cct/qBU6w5hdTZnjZzz/8BMU5ukZCsrknHPrS8U0jXt3MyBpIRFhmjTW
      6cyYnWaONu3lrR4Leo2R9KJS8mozaT64h21OC5IkYs6uYn76B1815MMyw5FghURoip7OToam
      IhidOZSVZ+Fv60FTVkmOOc5IWy9Rdz45phh9Q6O4ckoxBXtp9dmoKk1H6+3l2JCOeRVOJrs7
      6BryYnKmIWolcnPz6X3pH3lDdzdfvn0+VgmQY4z1DRAyuMnLMDPe20bEUkxxuonRzmMEHbXk
      SuOcaj9NWLRiN+nQ2zIpyLIx2tOMlFFNjjDCsQGJ2qoc9IERjp+OUF2Vjbd3gIglnRyXlsFT
      J+n3S7gzbMS9ekoX5xBo7yXqyqcwTYunrw+f6CI/28r0QCvtvZMIVidWorjnLCb73DHzsXGu
      keDQRC89oz6SMggaA86sXHIcRpREiLGhISb8USSdhfSsLFxWEU9fL2P+KGgMuLNySTNKBENB
      jE7nrJkM/xuzKxUi0sqTj3Sw/s+vI0cvzarOUipIxVSI2RUAqosqFQNATYVQpbRz9k76+/sJ
      BoMfZVlUs4Asp8RjrXec8xYo1Q6EKjWpfQBVSlP7AKqUNqNsUEWWSSQS/GZhYEHUoNWqjysv
      dXIyQfKd1aAFRElCFEi1dGgY79zG9/7//6Ffn4dZp6Vo/i3c/8V1ZH5YpVPNCr07f8lzDWOI
      soioN1Mwfz2fWFmG9uN//s98bdCc+eu5+7N/Tc1sWd5X9RHI4/ov3EG1yUjMf5pNr/fgV0px
      XQJt/wdP0hhr5Kdbh1m1EPYcGmfFdWsJ7XmZTfU9JPVZXL7xNtZWODm+4xnaxiV8A134TOXc
      fM9d1KYr9B3axC9eO0TIWMr1n7qZedZRXnjsWVq8GopW3sLnNtSguQSa2kuBIicITUyQsNsw
      CgKJ0DhNh/dxomsSZ9FCVq1aQJo2Suverexvn8CcW8uVqxfikCMMDfcQjUxS36iw5u4rybrY
      lTlrRmuDBj1dbP3VL3nlzW28vukN2oPZLMic5OfPvU6fx8G6jRuocAkEEhbmLlxIvjTAC0dH
      WFaZR+POFxlyrOSOm9cTfvsZjsvVVPt38G9PdbPhgfu5urYEp1th709/RmDhzVy72E3Lc88y
      VX01FQ61r34xTXfv5vmX32L/gWN0+y0sXFxLtk2gr70VT9xN9bwKtJFhRjwSZk8zDUoOS+aV
      4wydpjlgp9CcpHHvm/Ro81ixbD6ZZv2sefoy4xYgd+E13PPuW6DT2yGZwYbP3sECp47EVBv1
      u1/n+KiX5PQondaVyLICBgtZ+UUU5OTTk2akMx6lv72ZjNV3sLrs7ITayHGO729nYPhpWrSA
      XkNN4sJVVnW+8vnEX95JtUFPcLKbHTtPku2ez0h3Awc6IliMEmCidFE2HR3ttA1H6RPPJD7b
      qysBC/rMEi5fWkfu7035u7guTJ6q1Y3beOY2JdR5mE1jOXzvX75O9Miz/NOucy20JOJwuxk/
      3MRgeC6ZxIgqVrLy0ym566t8amk2gn+UaWG2XCtUiCIGkwNLtBmvJGF05bJoTQ2XL8xHEw0R
      iEcZ8TooK13Ghnn5SIkAHr8IcgiL2YZxlp38cKEC4F2MRZXMTzzGP/99L6XpAkG56BxbimTX
      beSqzl/y73/zJQRjGZ/43J2su30xDz/xTY48acCQlscnH/waGTa1D3BxDbL5pz/mTUVC1BhJ
      n7OcpToraYU5nN6+iYf2RtFbc1hw+SrmLVlA60ub+PHOKJLJQXndVazMm21J0L81g5FgBVlO
      kkjISBod0m8uzHKCSFxGp9OenQ0mE4tGScggSSIyInqtRDIRB0mLVhJJxKMkBS16jUAyHica
      jwMSWr0OSZCJRWPIMiCKZ5ZoFNUAuJjkRIzYb6a+CQKSRotGFACFZDxOQlYQhN/M1BNIxmMk
      ZAXO/k0jgKwoiNLsGzNSUyFUKU29wValtHP2AdSGQZUKzhkAAwMDBAJ/YJ0e1SUt1dLg1T6A
      6h3qlEiVKsWoAaBKaTNeHj0Z8dHfc5ohTwBRbyOnsJgctxX11b6XrpCnn74xH0lZQNQacGfl
      kG7Vp958ADnipX7bS7x5ahK7w4pGkOmbirP28kWkmT6sIqoutvHGYzSEtdhFLXIyTHNPgBvW
      12L4+J//M5sR5hk4wrYDgyy48/OsrUlHjPmZCslYZtvrv1UXmJN5a+qYazKSjI2x540OQoqC
      YdaN687cDN4PoDDV3UHIUkH13AwS3iHG/Ql0ZgeSmGTgxOs89sRrdAck8pbdxtfuq+PUC09z
      IuLGOtHMWO46lukO88apCMnhXgYUJ4tr8phob6QvmcEtD3yVG2rivPit77O1Y4yE5GL53Q9y
      b62OZ371U4b8Rjz93fjN5dz7pXuRN32P3dkP8A+3lOE/8Rzf3G3g379yI6ZLoFmefeL4PB7G
      /Br8A61Mu3KwCRCZ6uf4vj2cPD2JvWAea65YTq7ex4kdWznU5cGUOZc161aSK4bpbKsnkAjQ
      2qrjms9fO2vWU53RnbsclxG1RrQage79T/M/3/kG3/rJC/RPDfDKwy+juex6bruxjsiOx9ja
      q5CM+Wg/3Ijzmgf5q7sWoY9FkDOW8Q//8W3uXZBG2FzLl7/939w7D5pb+okmtBQvu4qb77iN
      9VUSr20/iiwniUYhb8Wd/Ov3vs+63BEau2MsumIJYwd30Bvw0VjfT2VtBcYP6yilvCkadu/g
      zW27aJwQKUizghyip72FCbJYsnwpGZKHlqZuBuoP0i7msHT5MsoMoxxuHUGWE3iG+gnYq7jj
      z66eNSc/zLAPYHDbSPoGmfYlqbnxq3wl50Ve2OuH+CiDwyIOogSiZpbccgvVDphCInfJVayp
      yEBzdkV+q92JXisgSkacTjtGnRaL1YqiKIT73+a1nScoqCpASChnJt8rgN6Ey2FFL2kxGM68
      zctcsZ51rn9j14EmlIibhWWZcAk0ybNTBitvqWOu0UA0OMHxXU2MFcwnGPQTw0E0HMFozyE9
      z8xEfQiDxUwkHEFwFlKeaUEALJnFFMwtwaydXU9L3n9pBIGMwoWkxxt55a2jeGNJ5HiMhALo
      8snPi2LIvIybbr+NG9fMwyQAaDGb9IjvM5szNHCKdk0ZGzfeyOI5meikPzJGp3GzaG0V9U9t
      IpCeSUGmDfXu50MmCEhKhOnJEHGNFqPBjNWZz6LlK1m2YC5uswF3mkRUm8eSy1exoq6GDLMO
      ENHrDGh1s+vkhxm+H8CYVcv9X3mAl596mr9+4GG0jgLW3HgH6bYs7vjqZ3n0p9/jS8/EMRct
      4Atfvg9LWiYZ2jPvkwIRszuHbMGMIGiwpWeS7jAjImBxZ5MjmEiru4Frtv+Av//aSRbMdVOc
      n4Go1ZORmYPDpAVBxJmZT9J2phVwlawkz30EV1YVaYbZd3AvFTqbj80/e5gtCQGN0U31qvXk
      a63ItbVM7d7JYz/egtZRSN3qVcxbfjUVm17lZz/cAuYMFqxaR2amDqPFcuEnn1wAH9tUiFD/
      CV7beYihgIMbPnknc1yzb7bRx00qpkLMxqB8X0SNnrTcaubNvYwS9eRXnaePbQuguvDUFuBd
      gsEgiYS6JEMqURSFWOxcixhcms4ZAOFwmGg0+lGWRaX6yKm3QKqUpj47VKU0NQBUKe28HoMG
      uvby8kAGd6+puNDlUc1Cnvb97G0cJJYUkIwOKhbWUZ1ruyTmA5xXCxAeOMkbJ3ovdFlUs5Sv
      bwpbZTWXXbaAyjyRY/sbCcqXRtfxgw2EyXF8k+OMe3zE0WBLyyLDZUH2DtLrldHFQ0QUA5n5
      uTh0yru21WJLyyTDZSHpHWTAL6JPBAjEBNy5haSrEwxmGQOZRcWUGg0kwiaGB3qIA0oyhn96
      Em8wjtZkw+WyoRNkApPjTAVjSAYrbpcdLTKRSAhZjuPzgzvXjf5iV+msDxYACT+dJ/ew50QP
      /mgM0VXCHZ+6E92eH/O1PW6uK4zS3zeJ48o/40tXZdFxfDd73u4lEIkips3hzk/djrjzh3z9
      aB43FURoazqFeNXf8M8bqy5Q9VQXhpeWg/sZl7TI0RCJvGrsgsz0yGkaT55iyBdBY02nav4S
      SgwTHDvRxPBkCI3OQvHiVVSaYjQc3cmURk/Yl87q2y4n/WJX6awPFgCCBqPRgCgkiAYnGBgL
      0D+xkVJBwFW2gnsfWEys7SX+4YeHGLr6tne2jQQnGJyIMDBxEwWCiL1gIbd+ro6pHd/l71pH
      ATUAZhcBSatFp9EhGETi/iCxeJDTTcc42eHDZjcQGmslqXMji40c7QiRZtETG+lhyFBCZZ2T
      cCSOa/4aFhZlzJqrP8wgAH47XKDg8/qQRBHfUAdvHmggv+4m1pqm2Lx1yzvbiUYDOlFCY7ej
      D48yPtjGvkNNFC+7kbX6CTa/te2dfWtNFkxaDQGtVk1pnpVslC+uo9poJBkP0bBlN0OJDJJ6
      O7UrlzI3xwSKiN6ipfetThZddTlzrUZAQTQ6IRHAnlFEYVEmeml2/cAzagFG2o5yemyUw4em
      WLmhEpQhUGSiIR+TwWEmQ2c3VBT8fS0cPeKl+8AeTOtvohiFfYpMNOhn0vuubVUfAyGGOtsR
      tXrk8Bgt0xJr9SawGOjrO82oIQ9dIokUc5NTZeFkfTfumjy0cpiQRkOlW0SSJMRZdvLDjF6R
      pDDWvp8DTR6yFm/gphWl2GxWrGKM7s5eFNccKubkUFJUhti/i1cbg1iTAZSsOj5541IyHDas
      QpSuzl5IK2funFyKi0pxGEDrLmZuthVFTiLa86nOd36olVbNjCJP0dvRz+i4h+mIlrK6RZQ6
      rdidDoTQGD39Q/gTWtJz88gtLMYWHKKzd4ipsEBGXj7pNj2CRoPFbme2Pd74UFIhel/5v/zr
      5O08ct/8C71rleqC+lACIBHxE5ANZ2ZxqVSzmJoMp0ppH9sZYaoLT1EU4vH4xS7GR0oNANU7
      FEVJuUlQajaoKqWpAaBKaTNaHNc3corNz75EsOJGPrl2HmadQGKkkadfeQu/aw333r4Iy4dX
      VtVF4mnbx57GQWJJkIxOKhYupSYvBdOhI74B+pqP8cbhDrzhGCAz3NZEYKKLHcd7ed/rCcR9
      HHvlcR5/7Tj+1OpzfSwFhkNkLVrCqlUrWVxuoelIc+qmQxuK57Joapw2b4gcc5LWQQ2VJbns
      bjpzNUhGpug9PcB0RMaWnkd+lg3fQBcxRwk5pjA9vdO4C7MprbuaXK0Nk0Yh7B2hr2+EYEIi
      rbCcPKvM+GA/w5NBNNZ0CgpysOnVtX8uHh3OzCyyjQbiNsjuHSAhgJyI4vWMMxWIoTM7SU93
      oBeT+MZHmPBH0RgdZKQ70ZIkHA4iyzGmpxUyijIxXOwqnTXzp0BCGjWVURo6vKw0hhnXCsy3
      OM80JXEvTXu3sffUEIlElJCYyfqNVyEfe5l9vmVsmDvJa4di3HX/ero2vUhn+uV8ckMOu37x
      CCenjditRkpXudGIjTy/+RgRgxklFCZ7yUZuuaoKi9pjuUimad6/l0FJi5BMIuZVYUPGO9ZH
      W0sXE6EEgsFKydz5FOsnaDjVzXQgiijoyKxdSqUpTvOx3UzrzciRDCwf6wBAJK9mDocOdDGc
      Y8GoNeNyn3mdqjzVw7Y336TBbyTDmKTvdDfply3jrqvuoP+Rh3lsRxE33X4b+UaRrrN7Swwf
      Y29XGvf+42eptotEgn4OvNqEWHkdX7xxPp63X+DprTvpr6uiUk0Ruki0WJxO0jR6FDnEmMdL
      PG6ht+UYR5u9mK06IoF+IqIDWWjiaGsAu1FHwjfOaSmfuYtdRJOQXrqEmlwXuotdnXc5r3EA
      TX4tc4eeYvdwDXZjGS79GABKPEbYUsLGWz/BsiIXSlLA5HSgV3zYrQlGBsNoNNLvpDwr0TBJ
      vRuHRYsgCugkgVhSRm+xoBVFDFY7evpIsfGZWcZMYVUNc41GkokwzW/uYyiZCUY3l125kso8
      C8ig0UPPjl6WXLuGKqcZQZFRtGaEaAB7Wh75eW5073Ol8I/K+Q2EiQVcNn+MH+3qYePda9FH
      jgAgpeVTl5Vk+64jWJcVooQEsmrnQOPLNIhX86Vrhtm5eQ+lf7bytwUouIwq7UO8+IyJmlwD
      lrwa5hQV0HTwLTYrfYRaj6IUXkme+4LUV3VeQvS3thDX6lAik7QFdVyhMyFZDPT1tNGdzEAn
      C+jd6WRXWmk82YqpLBMNMeLGfCpdIqIgIsyykx9mlA4NIGKwppGXn0tmZhqCNp2F88qw6iQ0
      tizmlhVSVJyLITxO77CHhN5BUWEmcW+MitVrWViejTgdwlRUgNNoxJWTS05GHmVzsggM9zA8
      GcNdVEXN3BIcGj/9fcPoC5dx7VVLyFSXP//QnWskWBBCjA1P4PMHichGyhbOo8BmxuZwoEn6
      GJuYIioaSM/KJjOvAEd8iuHxKcJJHek52bgteiSdDovVOutSD9RkONU7UnFxXPWyqkppagCo
      Uto5b8lGR0dTrjlMdYqikEwmL3YxPlLn7ANEIpGUOxiq1KN2glUpTe0DqFKaGgCqlDaj+QCe
      03t5+Fs/pDlsRGuwMv/KT/LpW5aTbpDO+x3tiqIQCflBa8aom3nGp6d1Nw//5Eec8hiQRD1z
      VmzkvnuvJ9f4R75Tltn7zLfoyLuH+1cXnGfJQY4FCSR12IxnVr9Q4mH8EQGz1cCllLvav/8Z
      nj3QTTwhIpndLFhzHevm5SBdAvMBZjQwl4yHsZQs4+8/+9eUadt44r8f4dUDOfzZ2pLzHuFT
      EjH2vvwTYtWf4YYFmTP+fDIeRii5gm/+f/dTlv5+V51UCPs9eEMfLMFobMf3+VrPVfz8C0sB
      iHXu4KEdej7zxfVkfaA9zy6JcBobvngT1SYD0ekOXnq9BV9NNs5ZuNLbTJ33yLTBnEtloYuD
      E5NEMNH4Yj9zbllCGh6OvdhO3i1LMQ+2smffYQa8CjkVdaxaMZd4+142HWgnLjmoWrGaRaVp
      ZBXMQcywQXSE3Zt30D7qR7QXsHLdKkotcU6ePMS0P8n48AiKq4zVV64i3/bHrrEK4y272bKv
      jZg+iyVXrqE2z0ZwtIMDew/RM5VgpDuMtRAgTu+RrWx7exDJXszl61aQp5uk4UQHFqeVlkY/
      y29dxOTRnRxtGyOpszN/5QZKaGHLwRbGh6L85IlB6tasocqSTnmNCzsQ97SydeshBsMShfOW
      s3J+CYq3leN7uwlpQgyNBsibfxVr6vL5I43VrKLIMrFwHKPThlaAZGSa0y2NtA/6sGTPYf68
      OdilGH0NR2gc8GJIK2Hh/DlY5BgezwjxmJ+u0wrzr1qI62JX5qzz7gOEp3qo7x2qhNEAABuJ
      SURBVB4nOzsTA2MceeU4HgA8HH/lMKPRSY7t2U9fzElVVRkuXYKop53nnjuOZU41lSUZaJQk
      iUSc5v2v0DwSgWgQ7AVUzavC4jnCczubiIemObFvO80TIkVlRQyfeI09LWO/U5bppq38+//9
      a770pa/zk+eOMjlyhCe3dJNbVUOhfohnXt2DZ2qMXa88Q4PXwtyaCtzGM1UPtr7Jc8cDlFZX
      4Qo18cybJ/BN9rH76Ud4ancnltwsjEkFQW+ntKqWYqeHbU9tYUyXTXGOC2NmCfOr55BhN5Ac
      PM4r+7qIRPrZ8sSLtJJOZZ6R+tdeZmfHKL6JU+zcepSIJZ+ynDB7nt5Mb+AD/HofmUHeePRh
      fvDDh3l+Ty/51WWYhQSjg/1Mho0UFBWijQ7T0T6C/3QTHTELhcVFOKN91PdOEw8FaDu4g0Pd
      Eziy3bNmLgCcRwsweHIr//SXh4lGYfV9/5dbluUiMfUH9qzBqAnTdeQIGs0qFi+Zg80axp4c
      4fC+49QtqmOh48yV5Ddi0QCt+1/kaLcH/+QwwsqlKEoGGB2UVC1kaY2NsaY3GQ7+7utb7XOv
      4K6b76HErUejMzC1/4fs37uX+vrdCMkYYecqRqbd9A0nuPyzG1meB5GGF2kmTtfxvex7q5OG
      Q2aUeJRIVQHy8kxkay6r123gqkoHcW8vp0/uYcvRXnxhH1rnSpK2QuYWZmJRqli+pBaA8Nny
      xIc72RXN4ksb1lJsT6Ab/R67T42xsFrE6iqgdsky8pE59OIewh+LVUiyufLT11Oh1xOa6mbP
      0WZKM6roa9rPGycn0Osl5KSB8hVWkr6j7G+eQCtKKMkE1oV51LldCPYsFi9dRZFNN6uevMw4
      AHIXXsPdt91E08uPMxCcxh9JYtGCrESIRROEglNMx+OgmKhadxsPVg9z6shunvzxPm79wt+w
      /q++wvyOFva99Wt+2rmar9591Tv77t3zLCdsG/j+T1bS9dr3eOw3F3pBQBQFfvPfewkaPRaL
      FZvtTB8gYjLjrrmJb3zt0+SZIeQLE410IwhxQuEwclIiHE0AIkaTiYJV9/GNBzfg0sbx+uPg
      r8dis5HmdCKJMoN9R2joc/Pgt75O2tQmfvqDPgAkjQY5GCQsKxjeVSxRb8AS9TPuj1JojDLl
      ldG7NCAICKLwMZxMLqI3mjCbjBi1ReTGdzMuCOjdRay7dSPLqjMR41EiiQg9O7tZfsdGrijN
      RJIj+MMCRPzY7Wk47PpZdfLDefYBBFsZN3/mUzz75K/59WsKn95YjMPZwlPf/SHlJXo8kQTE
      g3Qe38mu+iFisRiOzBxsyRH2b91N96CfYMxERrod7btu5V1FFej37ObRn/Wh84wQcZxfpZxV
      a1i140l+9P3/Is1kwJi9gDtuqKG8xMrOn3+X+qwCImNRjBUSBUuvpeTYc3z/e4049QbM5au4
      bd67xwYFLNYczPIBnn/8cQqz/UTOrnFsK1tIxvOv8t0fDXPVhmuoPvsJKX0uG+fV8/KTD7FL
      kyQsFLJhXi5iqP38KnTRjXPwlRdpFDQIyCSNpVTqLNgynew7so1fN2nQ650U1cyjbFEJzW+9
      xXPHdWh0etLL6qjLnr1rxM5gJFghHvbimQpjS8/GqJEJTg7jCevIzHISGjnNiDeJ0WVDEwBX
      aQby5CjD49PEZQmLO5NstwHv6DDj0yEUjZG07GzSrAamR3rAXoBLG6KvZ5AQeiwGgYTeSaHL
      wITHg9aagcMoMj0+SMyYSebZq308NM24L4rLnY5B+5vri0zQM8zA6DRxRcToyKAw20HcP8HQ
      8ARRwYTZCDpbNtl2Dd6RAYYmA8iCFnNaNrl2gckJH+b0XCw6BTkeYXyoH08QLC4zYkTElZeN
      SQwz1N3DVEJPRk4OLtFLj1dPYa4DITJFf98IwYSI1Z1JdpodJTaFZyKJMycdHX5Gev3YC3Iw
      z7Yk+feIeEcZnQohKyCIWiyuNNwWPSSjTHk8+EIxRK0Ru8uF1SjiHxtlKhQDjR6b041dLxKJ
      RNCr8wFUqtlltt2SqVQfKTUAVCntnLdkfX19BIPBj7IsqossFe+G1T6A6h3qnGCVKsWoAaBK
      aTN6LKvIScIBL75A+Mwzc5sDq0nHLFzvSHUBxcN+/KEYCoCowWg6k7r+8RvR/n3vPwAUBf9I
      E6898zItEzHQmiiuXc0NN64i8/1mIRNjuPkE4/Za5uWZz6vAqo/e0OEtbO0LYEADoogtfwnX
      rSpH9/E//2c2IWa05RCdoUo+/4+3kq14GegZm+HInkzUP41fr062/3jJYPVtNzDXZCQRGmTb
      1tMElTnoznsa1Owxo/NXa9TiHWqjq3+K3DluSqpcwDBb/utXtOpleps7MVVv4IF7N5CZGGXL
      0z9ia4MHjaOYjZ//MuvnwEjrUcbr1hLqO84T249j94+wv3mE3KU3cd/tV5FjvZTmUl1alGQC
      39AAAasNkyCQCI5Rv38XRzomcJUs4corF5GhC9O8YxO728Yx5y3g6rVLcMphBge7iEQmOfm2
      zLrPXk32xa7MWTNaG9SWVUaeeZRXnnicX287ieIsoTA7zpGntqC57ot89dOriB5+jl3BYpaV
      2tCYc7hs+SpKxXZe2zpF7foi+l57ioGCG6nRdPDq3nYW33g/n1pbyvEj+zHn1FCUZvoQq6v6
      Y861Nqi3Zz+vbt7F4cNv0xexs6C2ggwr9LQ2MyFnsWhRLYbIIEPjAobxBhrFIlZeVkNapJt6
      n40Sm0LL4T2M2Cq4an0daRpx1rQd778FEAREnY2adffwr2tupePAszzy1GOk530KMOLOcGK0
      6plb7mDP+BjB0TF2b3qLUdGEMtVHXChFfu8+rWnkpdswJE3oDVoU1CGJ2SmX6z5/M3ONBsLe
      AQ7sbiA9rZbp0V46hgTGRzSAgbxKhYHuUSZCHo4NnGnJLVYFATBllTB3XhUOw+xq4WfQCZYZ
      P7WfNqmcxXPSSM/KQJtsJZ4AkEkmZeKBQVraAmRWupg4vY8xcR73/dUGgrsf4ZFdH1YVVB8Z
      QUCn1SGEggQlDQZrGqXV5SxfWIAmGiQQizE5Ycads5ANCwvRJHyM+UQgitFgRj/LTn6YUR9A
      QI5Ns/vZf+WxUS9acy6r7vxzluSK9ODhhW99hc2yTPbCa7lveSnOqWkMr/2Ub/79CRZW2DDr
      NQgISDoDWhEEQUKv0yIIIAgiOq0OSX2eOisJmhHeeOQhtsgSks5CwYLVZGstJEsKGdi5nZ/u
      96Oz5bNo5Upqlyzh9Ktv8PC+AKLZTeWy9SzP0SFK579yyIfpAqRCnObJBx/C9n/+mZtLZtNs
      T9VMpWIqxAWYn2Cn9por0TtmX/OmUv0pajKc6h1qC/Au8Xg8JdNjU5ksy8RT7G2E5wyA8fFx
      wuHwuf5ZpbokqLdAqpSmpkOrUpoaAKqUNoMAUAh7B2iqb2QyDCATmOimsakNX/RPffY8RMc5
      sfNtxuXf3qHFR0+x5+0BogCJcU7s3Eef/4PfwcmJGKdPHaVt+GOxUOdHzj94ikMH9rJ37z72
      HzlJ70TwknlAMqMWwD/azI4tbzHkB1CY7D3Otm37mQid4wOTnTz/xKs0+8L4h1t5Y/s2hr3v
      8ylDsIfXfraFXvm3GUSRzp08+UYLYRIMH3mJX+7oIK74adr6LK8eHOR8fxMlHub4rpfY3zF5
      fju4xE20tDAUjQEKcV8fe/efInxpnP8XbqGuZCKGrAgoioyCiFarRTRnUrfGiN2gIdjTy8n6
      JrLn1OE2S2glkJNJEkkZQZTQaCRE4ezfEkmUeAL5Dx5khaTnFM+/NsLqe/+CYpsR37zlOLVO
      QCYRT6AgoMgyiBIajQYRhWQiTkJWzsxiEiR0GhFFkUkkEsRjMZLvRM/ZbZMKgiAiaTRIAiST
      CWRFQZEVEMWzZZVB1KDVSFwCk6P+CDsVS5dTZTQix8fY9XorYUXBqJz5vWTl7LGSzmR5ynKS
      5Jll5N75m6LIoCgkZZC0mllz733BAmDTd+5ge/JKHFMtdI0kueuff8T1+gZ++LN6bv3cSk7+
      7FH2dARpbmih/BNf4auLE7z2/IvsaxtF6yjimk/ex/q5GvY+/RAvHBwEXYyh4XRufPeXKAqB
      8TZeeeoQU3NX8tkyFyITHHzqKfrm385dlRGe/Nl/MykVMj3QQ9RRxee+8ldUa1p48n8f5ehI
      DKNRZtR5Lb/6+loatj/Hr984ymRMIqxIXFELcW83T/3ghxwcCCIaM1h+65/x6VoNTz36KPWT
      MrJ3nJDioGJuJkNt9Uxq6vjbf/lLqmwX6kjORmFGurvQaDWERnvwZpXhEBSC46c5umcPDf1e
      LLlVrL5yJUX6aQ7ueIsTpycxuktYsX4tJdoIzfUH8MlRurss3PDgdeRc7CqddeGWahR1FC64
      gb+4+gGO/Ojz7O6c5Pqzq8UabKXc9sCD+N5q4MY7v0BlWpQDzz3CkX6RBXXLmGo/zr7thylP
      Bni6OZ2vf+fvKY4f45/+asd7vkTGN9xOU1RLxhWmPzgXWdE4WHzjA6wtlnnqv79Bz4gHqf5J
      2nLu4Dv/sJzk8Sf40m6ZwGgbe4/3s+bP/40rSwReevQ/CZGkf8cTNKTfwre/tox403N84/Ht
      rKu9BiQLles3csdldn79P/+IaclX+csHb+ahL/8LXaNc4gEQpK+lmWlRj8FuJ92iIZkM0d3S
      SH/YSnllFr7xYZobu0A6RXPIytyqTCIjnRw8NUTJfBv+yUmEqiu4+8pCZtOMjxkGgEhSSZKU
      k4BMLBpFThjQaECQNFjsdgwaAwb9n2jgEnF8vgjmrHzyCvIpKSjGmVuKZuA5ogULKXNoYFL6
      /exQQSJn3vV88bo4jzy+g5Mr5rPiPZcSyWjCYTGhkRIYdAARxkamKV5Ri1Mv4hFFBAGikSnQ
      2snLSEMjeNFoRCDJxOgYuRVVOPVaKCombXIPEwCSHovFgEaU0Br1WC1mtFoRi0k+777Hx0ca
      ddevoNpoIBae5sSbRxmpsBKJJ7Bm5pLh1pGRnosz241nv0xOUTbpeh2kpVOWng7EsWYVU1RR
      iEk7W25+zphRaayOAiziNMdOvs1A72kO729CLCjD8T7mt2t0BuSAn76hQSZjEtl5buRAnPSi
      SqorCrDpwZFbgrXjBAd6hhgcGGIqEvtDe8JdvY5P1sX5xZNvMBb7vWk272GhoCyHtkM76B4e
      YXB4nGhMxmjOQVQ8tLa1Mjzcz8hkGNBSUjOfzj2bae4b5MTeQ4xWFFE6k4N0SUoS8vnw+nwE
      JocY8EQRdHqsJhOCoiW7qITCLBcaRSSzUItnSktucSnF+WlISRkQ0Wn1aGbZyQ8zmhIpoDU5
      Kc6y0LrvdTbtPImp5gbuvGEZLp2Ab6wXff4SytL1hCb6iGcsojotyaBXoKKqhGyXHUNoiG1b
      ttCpqeH6ldXofa1sef0NDjYMoM8qZc78xZQmG3jhxe10TStYLbksXFOL62xLIAcnGJazWFRd
      QEF5IcG3D+JLqyRNjqDLLaXYrcUbCJFTXI3bJDDtGcFRtJja2jn4Tr7Bpp3H6R3oZ9RcxT3X
      LMati3DwjVc50ObHmZdNcVkNNYuXke3Zz69ffpOOeBH3fuYmCkwCk94Qjtxi8h16vFPjuIsW
      kusAz9AY7qpl5Fo/vB/pYov5O9i74yAn65to6fNTtPxyajJcuFxW/H317D1wjM7RMM7cIkor
      y5FOH2XHviO09E1jzy0ix6YjlkxiS0tDd7Er8x4pkQoR7NrPM9vqCccTBKZ8ZK+5i8+sVq/r
      qhQJgIR/mNbOQUJxBZ01nZLiPGyG2faqBtXFkBIBoFKdyzkvg16vN+Vyw1Wp55wBoCgKsvyn
      nrCoLiWKoqTcRU+9BVK9IxWnRM6+B7Mq1UdIDQBVSpvR6tDe4QYOHhmg+srrybfJTHQf4Uhb
      hMWrryDjQq92HujihSeaWPjgjZRIZ+I0GfWw59lfsLvDg+gq5pqbb2Np0cVNwon6Btn14lPs
      G8/j05/9BHPdvz0Q7Vt/yC+a9Fy/8XaWlZ7nW79ngfFTO9l+sp9YEiSji+q6y5lf4Lgk3g8w
      oxYg6h+hvaUNbwRAITTVT1tbN4E/lLEAMFrP//7LIxyaDDLZeZCfPvE4nePvc/ZMbJKmQ6eY
      fFeacuemH/Cqp4xPfe5z3Lkyk/qGXsDD7kce4ul9PX80J2dqcBeP/NtTdF3gOS+jb29h72A2
      t9x5NUX2dy0MJvdzcNPbRIJTnGjsIXQBe1rekd088u2HaR6/cPv8Y0JjSUqvWMf112/gykWZ
      tB49ReAP56p/7Fyw0aDRzmOMxa0kfB7CgpW582tx2fJZf4edLH2MzoYTtJzqwerej692IQvz
      9Az3dNE76kVrzaRkTgkuo0hgtIuWrlHioW48oXdHVpLJ4UH0aZ8gIzMXe2EhFXKCyYHjNLW0
      MhRxc9gwTUllLUZfL+19w4QTEo7sIkozRZqONdDSMYLlwF6i1QuozNQy2tdBz7AXwZRGeVUF
      Tk2E4e4OTo/6EIxOiktLyHAYz1wl5AijvV30DE0jmN0UlRRji/Zx+GgzI5EqJkbGCaXbMWjO
      LBAW7z3JSe3l3Lxay9H6DiaDtRh0Ufr7uvAFE4SDYbS2DGz6MOPjPgzuMqoqMpHCHjrbuhkP
      JnBkF1NakInG10vLhBa3zstEwkV59lzW3lREphOURIDuU6cY8cXRpRdRW5TOVF8jPWNhZEFH
      Tvk8itM+6Ip9GqxOJy6jgZg2TIZ1BFkAORFmcnSECV8EnTWN7Ow0jGKSqeF+RrwRtCYXOTlp
      6JUkwaCfZDKKZ1Ihpzx31mSEXrAAOPzrf2Of6Q4WOr2cOnKErs//gHvcLTz+i3ruePBaxgYH
      mfRMcrqzDV1WCdn+XrbtbyIsaon4DtIxegM3LZF44bGnGDLlkq4bxxd59yM5DXNW34Tp2Rd5
      +OHjFFcu4urVcwlOjjE2OcWE7jQd3TrcJRX4ets5daqfcMDLYKSZG266jP6eYSYDHnraW3Fn
      zyUj0sDWzScI6/UkfOM0Dt/OxuoxnnnpAEa7A1HvRmNPI81hRCTJRMdBnnvlMIrFTiI4zYmi
      lWyolOkZmcLn76e9a5CKiiJcRi0Qp+fECZSaG6jOnGanv57RySDpZg9vPP8Yo8Yq8vVTNDWM
      MmdlHfqpZo6depsvfftuood2cqhzApE404ebWX7DRqpHX+WbTwe5bnEalrJVZIhdvPhoLzd8
      8350R5/mZ/umyc9yoM3VMCfLTF/zSZomFBRfL1sO+/nqV9fh/kC/7hRv79xGt6hDEiTMhTVY
      hSTTo/10tffjiyeRpXEiyVqK9eM0dQ0SjsQREv1MK3VUWeKcOrqTKYMdrZxF2qUYAEh6CmpX
      c9uVmRz1H2D7SIDfHHWtMZOl69bTLDdw4533UekKs/OX29i8rRtHpoPwxDguuYR5Og+7EjX8
      1wO34gweZWDf9t/5Cnf1tXzh/hK6uzs5uOPn/Nj3Wf72tqUsq2mib/6t3L2+DEGI0i/FGe5u
      o3dsgj6/m8uuvZb1G1cx1NfLDZ/5PBUWmZNPv8IL2wfIznWRnBqG8XLWFBno6huhcvk8li6b
      R2muCwlADtB+rA3yL+eeW5eT6NzJjzY3ML38M2xceRjP+EruvWsF7+TDJUY5eSLAvJsKcGaY
      SI8dpH18mmozYHBQvWID11eFePQb36Nw0UauLp7D6H3PMTrQT/32LRwYEkkzK4wOKJirl1Fu
      VBAFM7Xrb+WyPCe+/u6z3zPArue7WPS3f88niq0kEwkkJYqS8NPd3IPPN8RIMAMPHzQADGTk
      55Cj1ZGMe+kbmSBWYqL31BEONExiMOuIhuL4FBtJoZFDTdNY9VoSgSkUJZfKOjcxRUNO+RKq
      spxoP1BZLqwZBYAk6UkmIwTCYWRZYNozSUJJR68HQRTRGfRoRQ0azR/oHAlnpikmZfnM/3Gw
      5BP388kbFmERZJB0RE78jITBilkLKO99W0CSkC+MNa+SusIKqkxjPPDEYYZu+wSCoJBIJAEF
      ZayFZ16sp/C2B/m808NjT+8+2zcQUJQkyaQMCiQFE7XX3seDd9RhFRUUNBgM8I2vFnL48D6e
      +u4Wym64n3uunYdZUUgmFHRWPRpRRNAaEAX5HAOFCuHTLRweG2DgB3/DHkkhODWOK+cKPlGQ
      B5IGnVaDKIhoNBJ6vR5Jp0PHmemFcescbn/wFq6qzkJJyEhGE8lju3Dkl1Oe70L77kOrJIjF
      tFgsekQEECVC/bt4fXucG7/+DSqCO/inb41dgLcuGMkpm8NcoxE5ESG5dQ9DyVwESxbLr1tP
      TYENQZFBStK9rZ/Lb76aeWlWBCVJEh1C2I/DnUtejhPtLOs4z2h5dFtaOSWZh9i35TlGM410
      N4+Su3otLuOf/rTR6sQSnWL3ts1ML11BaVU+B149wDZDgDSjhCW7jPklSyh/dQs/fyVBsTjI
      SODdHeYAJ19/lg5dOukmifHWPqqv2EgWJqYKTOw+uZO3TJNUlzix/r/2zqW3iTMKw894/I1n
      hm/s8fg2V9vxLY4TEaACehEIJHat1DU7fkV/DBskBCt2NFWEUBZVuyksUuhFaqRS2FQCHGKP
      b4nj2F1E6qJVWyqxQILnHxy95xwdHb3SK+HFL494YA55/mpMHUjpBXSxxddfbTD5+CJhZx39
      9jds3hvjWwLDrlL1J+z89Awl7dKo9RHTGYs5kJQ0TkV8t/ktX979ncPnO1j5dTxHMvhroYtD
      nv36G8aZq1y/9hkZI0H34W2+uPMze/Pg38VwAs5FKhv3t9D2KihTQXh6nYjjBfO33hFlLnxq
      cfPGLSYdD8WO+Mg3SakxOz88ZDR+ymj+GuL8J0OePP6eYVJjMe3zdN/ksmaipXW2dx7xeJBD
      W6jIkofXyfDjg22USh6hzFhYS6zmjhMl38av0f+KSFJTJwhDH3W/R28C9bNXuPRBA5lU0AyJ
      GzUpWoJkSpIPmwRZA9POs1R2sS2bom0yimMSTp1TnSa+I4h7MVPFwCsv4VfqtNwEu90hwvZp
      dzq02xFSUQBBJmsQd7vE4xnp+od8fuU0GaGTdYuY8wHxNInbOsmKrzPqDdCcCiurK7RqIUW7
      RD4vGMUj9FKN5XqDsKgx7A/YX6h41RZRQWfU7fKif4BdPckn59fIS4FCAqsQ4KUT7HZjdG+N
      y5fO49saSU3HccuUi9bxucQRh3NBpdYmKKZRFQUjnSWrpynWQ3KWTRhEZGUKQ+YIqlUyKRVd
      5ojaLVqNCCcx4WV/TFLmqFTLOJk0diGk5mdIAooqsLIuYTWg3OqQO9plt7+P5gQ0m8t49pR4
      BLmlFdaaDeqNEq8zBv8UkZQQMwZ7Qw6mMxaqRWO9Q2CZWBkbXTkgHoxBO0HBdSn4IY4ypjcY
      c6SalDyXrEwhDAMp5Ru8ud8M760Q7/mTd9EK8Qe/6ZHLwB2ZgQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='feed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5wd13Xn+a1c9XLunJAzAZJgEimSoihxSFOkJdmWLGlXyRo5h3Wa3dld
      22uPbY3tnXGYkWT7I4cZaccKljXrUbIcJFuJoihGkACRgW507n79cqX5owpVr7ofpAaJyK7f
      P417cFO9OufWuff+7rmC67ouMWJsUIhXuwMxYlxNxAYQY0MjNoAYlxauy7Fjxzl56uTV7sm6
      IF/tDsR4hUEQ6CxNMeek+MY//QnD2/bxwlPfYfOWMW44eDfZlH61exhBbAAxLjkmJsaQGgZu
      fY6cBiOjw5T6h6855QcQLvUqkOu6CIJwKauMEeOy4ZLPARzHudRVxohx2RBPgmNsaMQGEGND
      IzaAGBsasQHE2NCIDSDGhkZsADE2NNa1Eea6Lp1OB0VRMc0OiiJj2S6S4OIKIqK/7i+KsT3F
      uL6wTgOwOHvyOLVmB9lIkVSh2jAxJAdHkhFMm3S5n75iFtd1iRnWMa4XrI8K4ThYyOQzMrML
      c1hGAUOVEUUQcVlp1MmKUqD88WZYjOsF66JCOLbJ1OQ5ssUSzXqdfDbFStNCkxxcSUOVJRzH
      RtM0bNtGkqQr0fcYMV42LjkXKDaAGNcT4llrjA2N2ABibGjEBhBjQyM2gBgbGrEBxNjQiA0g
      xoZGbAAxNjRiA4ixoREbQIwNjXVxgRzb5Ojhw6SK/Zw+dYKRviJztQ5J2caRdRKygqAlGKgU
      Lnd/Y8S4pFiXAQiCiJHK0K7OsrxSJ58vkE3ouALIrsWZUyfZdsPN2LaN4zgxGzTGdYN1cYFs
      s8mRF0/SPzKGjI3oWszXOiQlG0cxSGgalmWRyaRjLlCM6woxGS7GhkY8CY6xoREbQIwNjdgA
      YmxoxAYQY0MjNoAYGxqxAcTY0IgNIMaGRmwAMTY0YgOIsaGxfjLcC4eRjBT15QX0TI5ms0NS
      sXFkDV2UkRPpmAwX47rD+iLDCQJ6KkMhn2EpkcBuN1GTuvf9cCzOTZ5l894DMRkuxnWHdYZG
      tGg06giiQKPZor9SotaySEg2jpKg0jeEbVsBByjmAsW4XhCT4WJsaMST4BgbGrEBxNjQiA0g
      xoZGbAAxNjRiA4ixoREbQIwNjdgAYmxoxAYQY0MjNoAYGxrrI8M5JkcPv4ii6azUW5QKaZbq
      HZKygyPrpDQNR5SolGIyXIzrC+uiQriuw7nJSWotk8GcwtF5l4IBriCAa3Lm+Gl2H7yDpCrg
      OA6Cf3F2jBhXGu/6rc/Q6tgAbB0p8Gvvupvf/OhXcRxPzcf6srz9/j1B/vV9AawW8wvLVCpF
      Ts3VGSmlWTgfG1RJsvuGA5jNFSQjD8RkuBhXBu/6zb9hpdkGYNNAng/86P10LIeO5RmAZTnI
      sswTh6ewfQPomDayHKr9ugxAUhLs2bsbgEqfJ8sXL9lzxIjxktCxbEzLu5TdtF/a5ezro0PH
      iPEKguu6PH9qDogNIMYGhAv88oe+BMTLoDE2OGIDiLGhERtAjA2N2ABibGjEBhBjQyM2gBgb
      GrEBxNjQWNc+gOtYHHnxBOV8iqmZeZKZDLVGh5RiY8s6KVXDlRT6yjEZLsb1hfVdkyrKpDNJ
      bMuk0+kgWZBNqLgCiK7FscOH2XXwtjgyXIyrB9fFsixcQt1z8WTRbC62zxWCi4gNujg3Tzaf
      x0imKGV0qg2TpGjjKGn2HDiA2aojGTkgJsPFuAoQBGRZRiBkIgsIEeKbl01AkkP9XJcBiJLC
      rj17IrJiTIaL8QpAPAmOsaERG0CMDY3YAGJsaMQGEGNDIzaAGBsasQHE2NCIDSDGhkZsADE2
      NGIDiLGhsW4y3ImTZxnqL3D8zBzlfIKFlfPXpBqkdB3LcSkWcpe7vzFiXFKsmwynGyrTU9M4
      jsXCiowug4UMZoPnDr/AnlvuiMlwMa4eLjcZbnbqHKVKBdpVNBlqbduPDKezbdduGivLpMse
      QSgmw8W44rjcZLh9Bw4AMDg0dCm6GyPGNYE4MFaMy4K//srz/P23jwOQ0BR++/2vXXfZj/7d
      06w0OgBkkxpvuW/P9yjx0hEbQIzLgqWVJqemlwFI6spFlf2Hb59gZqkOwEAxxVvu20O13g7m
      lqIokE5ol6SfsQHEeNlotk3aZjixTBnqusv+2p//EzOLnrLn0wb/z3vu7Znvp37/syyutAAY
      rWT5g5/5Vy+jxyFiA4hxQTxxZIqvP3c2SD98xzZKmQTNjhnI0gmNT/zTIT7xj88Fsn//o/ev
      u42p+RqTcysANNvW98h96dHTAKZOHePUuWVuuuVAbCEbGMcmF/ncN14M0nfsHuafnzrFx770
      TCD7zffdt+76fuMvv8LZuSoAmYTGb/3r9c8LLhd66vfZM2dATl/pvsR4hWN6ocbZWW+0r6fM
      75H7yqAnFaJYKtFoNIkvOorxSscaA3Bdh1azSbvV4qXduREjxvWDNS6Q61ogqORy2avRnxhX
      AGdnqxw5sxCkd09UKOcSV7FHVw895gAuT37nSbKl/oBV4ToWx06cZtPEOIePHKGcTzO30nVN
      qq5ju1Aq5q9k3zc0vvXCJH/8378dpN/+un3ctW90XWWfPDrNhz7zeJD+N2+7k5ShUGt2Alk2
      qV+6zl7DWGMAoqixdftWBEcMXCBBlEkkdBamzzCzUEXTdBKKiCNIYLd4/pkj7I7JcFcUjWaH
      cwu1IF1vttcQvy4Ex3HWpD//zRf5yGefDGT/xzvuDK4W7c7nuNGytm3j9qjPWaUDHlEtREBU
      65nP7c7o5+tRthuXkgxXLiR57Nkz7Dv/QLbJ3LlpSgODDJTzGKrEctPyyHCywY49e2nVqmT8
      i7JjMtylxexSnaePzQTpbSNFRDE6fRNFcQ3xC2BybiW4EA5g90S5Z1lBWCsTRWGtbFU+SZIQ
      etQnrror2iOqhQiIaj3zCd0Z/Xw9ynbjUpLhRrfuQVEzwRdAlBT27t/vJfoq3p9eBWNcFhyb
      XOQ/fuIbQfp9D99ENrmWCtBsm1Qb7SCdSWg8e3yGP/zrxwLZz7/l9svb2asMI6Eh+kqv69+b
      LrHGAOpLc3z5q48hSzp3j63Pp4xxbeDrz53lP3z860H6p99861XszdXB/a+9Fct33cpJj4OU
      SBrY/j3Cuh6laawxgGSuxI7NI7xwfCbeB4hxTWP//m00O54/P5A3Lpjvda+7NZhq9KWjxLye
      LlC1WsO1rXgfIMY1jeHhCh3b0+xC4qWRdnqWMgyd4kCS9XP6YsS4fiAADzzgzYV6bIQ5LMzN
      YGol7F4ZYsR4BSCR8PY51uj31KGnqUsSxWyFeDHzyuPpo9P83l+FE9m33LebXGpjbEpdDawx
      gEz/AJlGB7M+j81w/AX4HlhptPmXZ04H6fH+HDtGSy+5vo7tsLDSDNLNjkUcbObyYY1+pwoV
      DhYqV6Mv1yXmq03+86e/FaQfuXN7TwNomxazi40gnUlqZHqs5ce4sogH+ItArdnhK0+dDNJj
      fTkS6zzvemxykV/+0JeC9Fvu28Mde0b4q79/NpDddcMoihw7nlcS644Md+iFF5kYGeDFF4+h
      Z3I0m+cjw2noooycSDNQeWVfk7pca/HBvwlJZA/etpXX37L5ZdX3z0+fCtITAzkmBmNC4ZXE
      uiPD5fNZBEGgODCM1W6iJnXvNIFjcW5yks1797+iyHBzy01+4YN/F6TvvmGU1928KZLHdR1s
      247IHMeh0WpHiGrZhBbsRHbnc5y1ZZ1V9bmOg92LbNZTJqwz31qZ6/bKd/2R4bozuudl3WVd
      N/LO1h0ZbmVxCcu0aLba9FfK1FomCcnGURJU+oawbSsgwV1vZDjLdjg7Ww3SSUNFEAWq9ZBX
      0+rYa55LEMQ1MlEUOTtX5+f/0xcD2Zvu3snBHYNr8oni2rLi6jZEEakX2WydstVj0YXyvVLI
      cF5G1xcJYVmXQNb9ztYdGW7bzp0RWeY6PS/TMW2+8NjRID1YSjPen+Onfv9zgezeA+O89bWX
      LxhTjGsHr+hJsOO4QXAmgISuYGgyf/z/hwdJ7tw7ynseOnA1uhfjGsAr2gDapsVP/0E4st+6
      a4iffOMtV7FHMa41xBdkxNjQiA0gxoZGbAAxNjReMXMAy3Z4+69/Kkjv39K/IU9Exbg4XLcG
      8JZf/USwxr13U4VfftudkeCqHdO+QMkYMUJctwbQaoc7i+1Y2a857Nq9CafghU5QpYs7XPva
      +2+h1vbeaUa/vJuq160BxLi2IYkisk/sk7+LAdx4YDvjdS8gV8bwiIWSJHJ+o/f8rm0umwbZ
      +/9MNnnB+nK1FwLaSVrIAN+dn7ZuMtyLx04yUMxw/OwspUKGpfr5yHAaKU3HESUqpctDhjty
      Zp7ztBRDkxmtXKfb0K9QGIZGPh9GE5dlCXrE6Lr33ptZaHhRoQ3FW38plXKoaW+0T6oXXpO5
      41X7aJqeYue+y1fh1U/9HJjeeQpx4Aa46b9+176vmwyXSiVYqrfZNJDh6LxLwVBwBQHJNTny
      /CF2H7x8keH+zYe/hGl5D79zrMSvv+eeyP+vJjhdGpmzjny9yXCrSW696rseyHCbNw/zyCPh
      cZxCMcs2zeCRVDjQ5XIpxiWNe40wXzKpM7fUjtRnWRaiKARfBUkS1kZyO098i/4Ca0hzrl/f
      rYd+Dbvj3S6jFcawtv3bVUUvIRluYXaOYrnEqbkGI6U0C7WOf01qkt37D2A2a0j+j3C5yXA9
      o32tIaq9XJm4jny9yXCrSW696rseyHCSJEWJY9JamSRJiELUaD1ZtL61xLcekdyEte+WCGnO
      J7n59ZWXn4CWR3URldoFCXJv+Nr3ge0Zljx8M9L2D4f9Yh0QJYXde/cC0N/vyfLF9ZS8eLzj
      N/6aRsv7TG4ZLvDb18AtIjGub0iOCa5nAKIb/cJc1UnwBz76L9Rb3gSor5Dixx49iGU5WL67
      sNptiBGiVM7xqlfdEKT7+goszC9/lxIxQrg8+s+vB66yATxzfIZln3M/3t/+Hrk3LlRVoVgM
      J/66rqJrKn19oS9uGOs/XzwxMcijj6aC9MBgnmrLjLShKhd3ten1hvNfgngZ9DpAsZjl7rtv
      DNJDQ+u/v03T1Yhia6qKIAiReYCAF2Xt7rvDSzIKxQyLjSt/a+OVxhUzgPd+4DPMLXtREYbL
      Gf7wZx68Uk1vGOja2i9FuVyIGE+5kqVtxa7leVwWAzh8ep6OfwmBKktsGyniOG6wIrH6vGiM
      S4NKX1TZ+yoZnPin/q64LAbwu//ta8Gh8L58kg//wsOXo5kYMV424jnANYZCPs1dd+0P0sND
      cZCyCyExcTuu6W2ECVnvLgtj06vA9hZUhPymC5Y9j9gAXiaymSRvfOO9QXpXXwJYewm0Yejs
      3DkepMul3gEPVVWhXA5jA13M6s5Gg5QsguVP3P1NWDlZBMeMyKRUCfxdd9GI0mhiA7gIqJrC
      zp0TQbq/f/27gQlDi5QtlZPkNJFXvzo8kD/yMmKKxrgwEpvvhPNUj9x4JD7RRRnA4uw5pmbm
      SaYz1JodUoqNLeukVA1XUugrX1uR4URRZNeuUOlGRvJIkhSRDQ8XUVUloojbBzPouhaRbRvO
      oqpKZBTvL/e+lcQw1EgbfReImKcoMqWuL0HCiKNAXymo/buAizQA2zLpdDpINmQTKq7gbSgc
      O3yYXQdvC8lwrCUuReCujRQWkJ56RfZahZ5XX/YgtLmuw44d44FsKKsCbkQ2kFNxXSeiiMmk
      Bq67RraG+Oa6a4hqruOgKFqkjWLJuAChbS0Zrjdpbi3JbfUmueM40YBS58u6a/OtJsPZvaLA
      2T3y9ZBdKFrcatnaKHA9rjW9SDKcRBgvywXs1TLX7S2zbbT+HcBFnglOJFMYyRTljIGJhCaC
      oqfZc+AAdqvukaBEcdVVlT0ITsLaSGEB6SlCjuoRAaxHfZeaDCeK6yS+CcIaopogri/fhchw
      vUlzPYhqL4Mgt1om9YoCJ/XI10N2oWhxl4cMd17SK9JcD1lwdeoqmRS2cVFfgEQmz/aMN0Er
      XCYy3MtB90sUVr3QGFcWqeZpKovHAFBkBXj9ustuO/Pf6NQ9XpOWLsDeH70cXQSu40nw7j2b
      gq/ieH8GURB49NF7gv/33J0YlxqCayM6nTBN75228XN/y9Azf+4ltDTc+3q2nP0kzWXvwm9F
      T8H+n2Hr2Y/TWpkHQE1kYd9PsmnqM7jVSa/+3CgQG8AabNs2Fvx7IB0r++WA4NqIdhdJ0XXZ
      fvqjTHztjwKRMfQXTLqbVuXrTbUYn/4sztwRr+5EEfgZxs/9Le7iCU+WHgB+8hI/xXfHdWsA
      MS4/tp79K8a++h+CtDHwJ/QKP7Dz1J+z+Zt/HKQTYx/rsRPy8nDHM/87dnMRACU/Anv+30tS
      7zVnAJIsIlneBOr8hPDuu2/E8u+DHfouFyLHeOUiVz+CW58DQFQvHUv1qhpApVLAaHr+ZKnk
      8dMffPBVmL6yl/zLj/O5NL6IdOqVzVNfLwTXRrLDy/REN8E1OJ5dcXS67xEQ4Htpy1X9xQ4e
      3EnL8jQ7b8Qv70IoLT/FvU/8VpDOG+9Fl0Ue+erPBzIt8SucHnzoJbchOBayFV7iJ7jrP3Nw
      tXBcgfNbJJoCw8AHC+AHj2AgAT8MfDlBsB+S02F/Vx1XTOtkWeqKE3N93SBztaFYNfK1w0Fa
      M5dAfum77kNz/8S9T4QHw0ulX6Z/4QWGv/aBQGb0/aee/v61hP+RhpbfyYoB77hAvsd1OD8t
      H1bhBuCY/2m4YgZw//230vBNM3uZo311Q7bCu7ok2wUyV6ztawH5lUPsPfY3QTpX+QE0c4l8
      7UggU6zaBRYzX7n4tK8Gl8UAduwYo7ziLYsVUlePzSjbLd7wtUfC9Ob7kMZ/k71Hw2W8/Ohe
      tP77eM233xfIEtvuhcH1Lcclm2d5zbd/Okin9z2CVVg7FinWCgNz/xLmy+2E1NobJgvVZ3nN
      t381SOfUd0Nife6I0Z5lYC68s9gYuIlM4zhbz34ykOnN266IssuZQcRBL5II6oUjufWCsekO
      aCx4iWT5EvcsiosygE5zheNn5ijlEyyueNek2rJBWtexHJdiwePOjI0NUPBjO6bUa8vdkZwO
      WyfDKNJyqoHg3k2uHt4bJrd2o3TmIkaR3PE6ErlHec23fyyQpXY/iLTt3khZpT2H055h39EP
      BbI+9S7SQonbD/1fgUzN/hj1fJGBuX8O6yvsRhHqkfo0cwlYnwGUl5+MtKGP/rtLruxyug9h
      aF+QFtVET1dJThWhstVPeCQ/Y/xW3OKIJ1O9IdiYuA0qPm9f91gGkp4hcFp079kFScGVfL9F
      vHTj9kXVND01jeNYLK7I6DJYyGA2eO7wC+y55UKR4dYS2tweZLieV1py4XyqVQ12giXLwLKj
      SvJyo8C5ZjuiiFJrGqzWKkOZ7RkFTm7Ns6XbyAbzOPm7IvkcxyG1cpTbD/3fgUzJ/RR2efua
      fMIaAprbQ+Yg9CDS9brC1O1x/enqfLbjIOdGkbffFz6bnkWwGqjlLWE+SUUuTkTzKSkcxw2I
      ZgFRTU0h+hx9V0l6hDYtjeDvLLta2pO5bhd5zSub2HE/QsdzZ91E+YIEy1XKcgHiZCi7KAMo
      lUvUzkyhyVBv2yRkG0fR2bZrN42VZdJljyAk9CA9dUPoQYaLXGkZlLxwvu/72hs5/7TSyK0o
      Oz7EfY+/N8inj96MNP4Lq9p96VHgehLfBKF3FLjVhLEe+XqR0gSxN2lu7TWkQs+rSYUeRDqX
      HrIe15+6PQhykmxA9wESWV1zrakkSqAmovkUBcQehMgehLZu9Lo6tRdBridJ0s9n2TaW4ym4
      7TgXIE6+RDKckc6xc2fvk0xXHy7ZxvEgJbWGr2JfYlwJnJ2cou4fiXQzMmyFp597nrbVAqBR
      tmE7LC4v47jelzrn1iN1XNXFd9Ws4vix/VVFA4rc852fwO1469FKZRvs+j3ufeJHwfY+k2r/
      LtjxgQtV+YqEZGTRhsIocFKqhJgsk9geho0Uc0NYtbl11SeqKeTsUJhWdEiVI22IegY6K5eg
      95cPc/ML1Hy3KOlcOGL48ROnsH0D0PoysA8Wl5aAq2wA9z/+btymN9sXS9vhhk+SbpwC/6HE
      prc7nGmcCAxAal1bp86uBEQ1gVruWjHSsyApSEbXkq7Ue89TECQEuWslTpCQM0Xkia7roxIF
      EAWk7jbUxFUzgKYAru8FCQJcavKLi8uxE6eAK2gAAwtfo9XyRvZkMgNcgcBYokRiRzhKCn17
      QVKisoG9CKKEnAtHRCmRB0GIKs4FFGx1PkG8kCKuztd7dUxQ9EhfRC3VM1/vsolIWUFNICfy
      KHu6doizA2A1e5S+tHjMgGf8QVmTvR3Z4wp0fOKupMAW4KsJaPjTD12FO4H/koWqf9Y9p8J7
      gEaXUYiX0CiumAHsf/E/4tamARDzE/Dqy28AAueX1HwoCRCEVTIDJBVjvGtELG0CxSDVrTgD
      e3HV5CqD2oGop1fl24ktiFHjEWWkRD6ar7INSxRXGYWMZOSifcn0r/t55VQRubtsVzSES4Vj
      KhztWta/WYJ8j3wNARZ87dJ8W/9yEub8fydkzwCeV2HRL5NWPAPohb/IQd1fvClq8M6X9RQh
      LosBvOrpX8SuTgEgZfph30cueRtyfjg4JyqmL+9myXkIorjKeHpv8klGNqrsfdt75pOTxWi+
      8tqNsauJeQlmu45ajIgwLcNTXWf3d4pwTIcnu9ZGHr62tn6+Ky6LASRbU7jN0wAIyuWJQ2mM
      HQwT+U24gkhyx/2hrLzzsrS7kXBUha90ba+8+QKK3RRhsev/rCt0GlWWEsiip1+y6DlFWytv
      ouOv/Q/nvDAzg7k7sf1DOqXUiJ/f87GuOQqmkhvCNb25gpjxbhnUh/fj2t4RC7G0rWc5ARD0
      rrelxOcGrlcsLS+z2PIcIyFxYRXdWvlBWpanF31p78usylkE/8YaVfLmT4XkziAebUYvICCw
      c8Cjq1xVA0hsuydY8SE9CIA+cmMQ2o60N6FTiuPgb26QXb9P/EpGVYQzXe7JgAT5dfIeTsnw
      fJcfv18GSYLprvpGRXg5dNBzM7M88/zzACTUJOyGyXPTTFXPAJDWMrALjhw7zjn//G8xWYKd
      cPrsFHN17+xwK+299zOTU1T965DaaRd6e5UXjStmANrgXtymp9De2U8Q1WS48xuP2BfESQX+
      rsvHvl0DSYbPdn3w7pch3+Mc4qIEU12KPSTBAvB0lx8/IUJVgX/squ/7JXpFeKTZbDG/sBik
      rbHep7Msy6Ld8Zeu/WMpS0vLzC15y96m7rkknU4nyNdWOj1q8rCwuMSSfyRSd7yRfWj+M3Ta
      3sZWwRoDXoViLYf3gdmeeo/MfiqgrFTYDtwS1HtRBuC6LocPH6FcSDO3cv6aVJ2UrmO7UCp6
      6wFydjDYbhfSnhuj5Ich4U8gExsvBKAlhMt9AJoAvabQNRFOdilsvwymAEtdPnZbgMTaopiC
      54+fhwGcUeALXYr9kEzPK0x7wbZtOp1QKV3XZXF5mROnTgey1s42i0tRWWf0wop8KVFYeQKz
      7X0VMprnSew89TvY/jJvrrIPuJ/CyrdwfQ8ik3IBl50nfxu4SANYmD7DzGIVTddJKCKOIIHd
      4vlnjkSuSdUG9yC0vNHe1XM+wYk1BCeJLtITPSJ70Suy1wUigNl25GFc16Xt2PyXrpFzNOFy
      l2PzT12f/37VZZtj8+Uu2YDmMobNJ7rKbjNcbnZsjndpbV5yUXD4m658uzWHva7Nya58RdGl
      Izh8vGu98FbN4RbHodWlsIrrMC3YfK5LYe+SXHLrvOr0Bdnh811tvE5ZXyQ3x7F75pueneXp
      554PZA/1r/Qk0tXq9chXod3uRO+A8Ilqsmig+H65LHlkuL70LYiiVzZneGS4jDGO5Xg/alov
      9rzqdD1RBIOohD2uSdUs70t0UQaQzBQYKHcwVInlpuVdkyob7Nizl1a9SsbwdmmjVLgeJLeA
      4LROchS9ynbLhDWnzARBQJQklrvETUkASeLZrs+/pQpskaMyVxEYX1W2JQm0FInPde1L7dcF
      9kliJF9bEqmtyneLLrCpB1HtnCZGjOLOhEhlDWlOeMkR30RRXBWO0M/nrM4nra8+SVwTcKxn
      pDlJoi9zI9v7vFFFV1RkWWai9BApw6cuqJ4sm9iEjefGZDQdWZYZzN5BUvNG8byRQJZlNle+
      n1rbk5VTWWRZpm3qwRdKt7Ue+uPpysxyX+ACCZkikiTR6ngv/KIMQE8k2bLZW6vuu5iClwHL
      Xb+5LMDFHbm4vtAxTebmF4J0q9jG7QicOBm6HbVcnVz6wnyYblRrtUjZRqVB02xF2jCHegc2
      yejjDOfuCdKa3LtNSdRRZc/lVaQLq5liLaOaVT9f0pctofokN0Xx+pF0reCq04T/99vHD9Js
      eCuGg+1h7gUeP3YLnY63iDLc2cztwOGpHcEXzkyMAQKPHb0duAaXQdeLP+kaOUdT8EYB/jQX
      ld0LkZfaJ4bHI69VOK5Dux0GmbJth0anycnTZwLZykANQReZXwzdjlar3fPcTKvVjvwGnf4O
      7VYrUrbTManWapE2mltbSIKKIoWVioKMoRTJJ8MlGFkyKKduYHtfOHHRlSKJ9uMUqo8BoCk6
      cD8DC5/HWPLa0I0scB9bJj9MffmkJ0v1A4+y9ewHada8laFEZhR4A9vO/iHthkf2S+U3A9/X
      8/drmzod0xsdO9b3Dph2zRnAcxqcP7OSUGEz8KwG513UpAIXuvdjpct7aIhepObul1pmCHur
      zVPPHgpkxmgeq2JFZOmJCp2CGZEVNg9yoGBHlKmuN+ikTY6fPBXIJqRdWCkrkq+RatKQm5H6
      Ngt7GJ4Io9sFz1Cr88yhF4L0Dck76EutXfpVpQz5RKiImpKj3e5E2m1X2tTq9chvUB9vsF4U
      krvY0f/DQTqh9rHQWFyTTxRVVDk0FAGRfO0pRmc/AYCspoFfJNM4hOifRVbtl+fkzDkAACAA
      SURBVB9cdt/wFjotj/qcr1yYDXBgdFvwBSj3DUX+76oawF9koXme32HAm4EvJaHjK3u/4RnA
      F5MEcYGGDM8A2u1OEFrb1Hp/rkVBYXvf24L0UH4IFzDNML9l27iuG5HZ/gRrdT7TtCLKtC2x
      hF22WVhcCmSNZoNOx4zkW8wuQ1pEcLqWel2FWr0RMYrt8gGGs2vJbyl9OPIc+cQ2DDXJcP6e
      QJZUB1ipH420WxttIAoqqhTSN0RRIZfYFqkvrY0wW5tZ024vZOvPMjr910Fa62xGthuoZkjF
      Xn0b+3fDbLVCdcnz45P2xV0H9eDe28G/jJGU59P/5H0/gOuPoHLOM8o37L8zmAgLOc/N+rnX
      vcXLc1Etvgz8fRJaPlEyqcPdeEt+TX/UNi4qUDs8e+iFMLZ8v4a71Y0okzCgwwiocqhQsqgj
      CSo7+ruMIjeCLBkR2UB2DFFQySd2BLKkOoAgiBFlkkUdRUoxnH9NIMsZWxEEaU0+Qymzvf+t
      gayY2oLrNKOGZ9sYSiFSX1obQRTkyHOIQm/GqSQqkXYlQSGpj0XaTetjNM1OpD5BkCkkd0R+
      g6Q2CI2jFKrfDGSKtR29c45C7Ynw2ewa5aV/ZtepPwlk+o0HqDYznFv09ntU3WvrxMwm5qY9
      lUumctwHnJydYG7W+/9s0/Nrj05vobrkzS3yrQHuBp44fjMrVW/Js9I/yF2AXV3C9X8/EZ86
      rycDd0HQvAGn8fxTgUwa7CN5wwRJf/J8WQxgWQLbV2hJhCxwRIWav4BQUD0DWFhcpOZzzuWU
      19mTp8/QMr3ZvpOXYCucOHUa6zwVoqjDFnwl8Qygkh5BQCClhGQyXR7s2TdBEIKlOABJ0BFY
      JRM1JFFjOH93IMslhlGldESZ+jKjSKJKPrE1kBlqCV0pRPKVUr2dtoTWz47+twfpYnIPspSM
      1KcpvbiWvZHRxyPtZoyJNRdzAOidGYrVbwRp1RpHFPTIbyAKEunGC4zOhhElNPP1rNeBmquW
      OXLOG0B0w3u3C7Uis1VP8ZrfJfDW/EqZpao3Mjqq5yp1LI2Opfv/9nz7uU/9GU7Nm9cpE+MM
      3HMTM//fB3Fb3hxK3bKJyo2/zPKXPxf41dqunSQffi2zH/OCFlwWA/h4Bpb9ZcWsCu/Fc1la
      /uy8LXg/wsx0nWrbewA15/+0nX4wPb8O09swa9RcOr4P1DS8v7lEeDA7qRUBIaKwpdSVYYi+
      HAhIwcoHeO5JLyTaZxib/miQTo/8LyRNid0nfj2Q5Yd/iZXMTWvKSk4LrTPblW6jN48yMhse
      2k+078KwExSXQ6NQrC09A9yeXRjhG0fuCNK7WhlqrQxTi+GAY9rrD1+ZS6Rxk54+ZJKeUeST
      aaSOp7B5PyRMPpFGtYWIrBeceg3XX0Rwmt5AOqMkcUWvvrRk0O1oXTEX6PCLR1loeHHgBzM1
      2Auby4/SML2Hr6S8hxrM3kHb38ou+8t6Wyo/EIxkw9n1j4iCa0UUp6zchODuoLj89UCWTu8B
      dxtaJ/SBFTuN4DqrZOtbYrwQNHM20pdc5fshd/eafKq5FOmf0c6iKC3ytSe76ppDlAoodnhi
      S3RMkq0TkTZSE2nkzgw7T/9OIMtsq9BrnzbVeJGRudAo9M59nFoY5uuHQ2Xffm8O21miY4W7
      fK4rML9S4sVz4YS8ZeokNYNSyvvNNN37Arxu1y00B70lT9m//fIdtz8AfnxYNM9w3vmqB6F1
      /qZHb7R/z10PQ8efWyS8sh8r3UAj4Sn5QL6P9wFfS49iqX682WQ//cC/G74X29/A21Op8OuC
      wEcq3oXil8UAXjj8ItP+4ZdyqgI7YEvlTVRbTb9jVybupOA6aPNdEdCyg4hOh5G5cBJXzDSQ
      7XvYefp3A9mA/jDKxERE1p98E9LYtohyJosOqplm7Nx/DWT5/L9CLWgRWa74BuTU1ogS6507
      0DvTkXzZ/h9ElwqR/qWbm0FZe8C/ZRqRUXdTJ0FKXoi0oVoL9CKjL9ULHDq7K0hvbWVwnRka
      7ZBg4TgStith2qGyO65AQtUDxYYLr/HfuWUfd+h+/2TPH97SNwIp/+uuXJzqNQ8/jVP39Ecq
      5FBu2caZRIW6b86Cvwn7ydJeWr6hbM8WeR1w0G4Hq0BjfggW2fC8i8tiAGOFN5DWPdcmb3if
      eG8bXPD//fJvQ9xz4teDSXC5czNwE8XlrwX/nzG2Ybt7efxYeEKqmdzKfkfi0Jnw5Tv5Eba5
      IpNdypSs57EdOSJLN3JM2LWIcub6NAR7O9rCi4FMrs8hO03y9acCmdE5SKNzQ6Td3NYyhf6V
      SD69cw+2U44oomnLLNaKfP3wqwJZYfcARiIdGXX3NrJIUjPS5y2dBK129Hk3NbI0OxZz1XAr
      s21qLC71R36rPY0cCdWmnAo3V1RJ4ZaJndx8X7iEKWVLCEObKN8cTtwLiQx0WqxG6+hz2PPe
      iplo6Civ2sn8p/8S69w5r65ikYHbf5u5T/4Z9py3qiT39dF/629Q/fo/4vgH2ZXhYdJvfYT3
      m1Vs03N3dNP7evxvnSWctvf1SPlzhYetRjAJTtpevx7xAwFflAG0mzVOn52hXMqxVD9PhjNI
      6hqWbZPNeCO7JOookhP8+0IorHwLw58D5OgH7qSw8k06/hwgJw4Dd1CqfiOYBGflMeA2Zuey
      QQAuJZlEcB1G5j4d1F0y7kQW38IPdL2Y3MgAICF0cWkFdwDLljnapUyZ4f41svx4Hx1L5dCZ
      3YFMGxqg2ElEFMcYHaXYSkUUVhkeY2tJYW4lVLpGO0m9nYrUV9xRxtazkfr69g5QKIqYdrip
      4zgSuqJQTofKqSsaKy0l0ucDzQy2bUfabVsalUyGg+PhgaF8Ms3iwjyrcePYdvbfF7YhFSq4
      y/U1+foyBcpD4URfUjWq3/oitc99AQAhmWDozt+n9vhXMU97O9BiNkvm3T+E02riND1lFJqe
      q+S0GoHMaZ3341OYiufHG0qSgTW98JByHRx/YDR8/ZhRtOALkJdVxoFl/8t1UQYgKxqGIjC7
      VEcTXRoO0F7k+KEpdtx4MCDDreafWJbF8OynaPrxHtOZASzrDnJT/4jR8Kw609qCZf1r8pP/
      gOlTXNPmTizrPQzNfQbHjwqRkw5gWe+k2rglWNutN8exbIevdSndVmEX+x2HPV0vhnwaQZT4
      ide8OZSVMtiSzA92G8r4MCnV4BcfCJcFlaESFhqbSvcEskJiy9qrUx0v0ly3wlq2SH+2GKlP
      3TTA2U6duZVwSlZr6RQFiUo6nOfoskp/phDp32B5kEIuH3kOoX+AJyfDqHVeXxzGC/2RskO5
      MllZZ+SG8LcSUjmkynAkXyWdx7Gj79GxbZovHqL5918OZJnRdyDUbeyFcKJNZ5gXxSTPq96z
      qYrBGy2LTxV3MdP2jDGVTvCzlsXvDt7JOdWbFxRzSX7PsvjA4N3MJbyBsa+Y5gOWxUf7b2U5
      6RnDYCXLLsvilJqg41Oes6rBuGVxUktiCZ4LlFd0xiyLmiTjCt6zaIKIbdnMKS+BC7Q0M8l8
      vUMuKbDcMH0ynM7oxDj1lSpZn+ZcqD2BXPdGlLRZQJbvoTW5RGPFMwClmESWZabmX0Oj7il7
      W+5DlmW+c+Im2v7u3rA9yn2yzDeO3IHln/wZM7dwuyzz4/e+KXyBuSSiJHPjaBj5va9vFNF1
      OPtnXVf83HiAwtb3Un06DCCrbJ0gsXWQ3V2GIhRySJJMUgs3rgRFJZFI8dC+cFIoDhYgl+cX
      HwiXMrXxPpR8MSLTNw2gyDJiV32iojJRyEbzbRlGzab48deEzyaO9SMYGumu/onpHIIoRs6r
      iKLI3uHNbO6qLzEygSyI5LpH52QaZ6WGOR9O8DW7n1I6T6E7XyJF85knqX/hS4EsN/wOlldq
      nDl9NpDtMm2Wnn+Gyc98NpDt2b+Jp1ODfLrkxRBN6go/KMtoWg7dX8XTdANZlnmNa7Hi++UJ
      xyPIvctp0vZdFN1WkGWZ95orWP5JQc2SvYiBFRWx5dUnFL18bkLClf2ZjyEhyzLaFj34Aqj9
      GpIsoW7x5jYXZQDFwTGKvZfXIxCOP42w5B2KF3LeNn7eeADD9qw65ceHfNedD4EfGIukZ5E/
      e/8P4fq7e1LGmz/89Gv/13Ajw9/dqz/zreALII8MkNw3EVFOoeDlc1thCBDX7OCaJtV/+WIg
      Szi3od9xE4uf71oBuXEfyf57o7KDN5KsvJp6l/Gowk6MwQJJLXTzRElBcGzUWjWQSe085vQk
      Mx8J77XKPPoI6XvuW1W296Fbu7oUadco3IbdqjH/kf8cyPLveif6pq2RdkXTxKyt0OwqmxhM
      0j5xlMWPh4EKSqM/C22L2ue/EMiyAz/Mt02NL9bDBYt3OjLfzIzzsZF7A9lvalkez27iE12y
      f6+kuc+eZHfbo01Ioqdsd9uhYsv+xShbHZOO4w1uiv/XcF1k/+Wq/t+qrGD6oWkSfnBcodQG
      f8lTyPus0F06tr8Mq+a9dh2tERiAq3iDq1x4CS7QerFv6G20M96DqilvQnebIOP6O5iif0Jo
      9mMfwl7xlvKUkRH6D/4qK3/1p8H6rbppgtRtu3APPxNsZLgDfXDLDqr/8neBq6Xt2U3y+17L
      uS4F0/ftI739x/mlsQcC2cHyKO8XZf64LzxQvze7mUdtm6NnpwJZeXyMftvlc/PhguHWusX+
      VpNDj4Vr5f1Zg5FtEyx8PtwsStx5O+qOrcx9/E8DWeaRNyDedDNn3NAtGkZCmzrNbFefs29+
      E8rYKHNdstxbfwiz3McLXe1O7JyglSvyZS30hG+XDAZPvsh8V7uF8vupuyLHuspuPbiXb6dH
      +UjX7/JziT7M+hyfbYS7yO+wZepygmkjdNHaospep4NghsuvZdfmBruN2iUrug7zokzVj5oh
      K95zT6oJqpqnsJqmswM4qxrUfCqLoSXYDpzREjQ0f9KqGmwDFmSVtj8HSMtefTNPf5V20/Mg
      rKExeOANTD7+JSx/v6kzsglefS/nnvwK7nk69KbtcN/rOfvNz3t94zKg9Pwz2PO+9Rdy8Ib7
      qD32FewF/xDC4CCZt7+Rr2j9tDr+wWWtzMPAl7V+Oo5npSW1xEPA849/C8ff8s5s28IeHuKX
      xh4IJsF7+gb4N4LAh3N7gz5sS43zZqAhhUrXEiVsQeSpZKg4GS1PTdL4reF7Atm9hXHeKil8
      shTWd39yiFE5Ecn3YG4rj7gif9QIlwXvMHX2KYmIkb06Ncywlo2UfUtmnFvlFB/p6vP9epl+
      Oc1fdske0ErIRilS9n3JIbKqFulfv17gnCTwR12K/WPJIdoO/GFX2Z9PlCnVm9zQdSgm67qc
      kg1mjHDzsCOq7HeWKHddMDLkWswJAsWuL5UsQEIU18g6okjdn2gq/ojt6iJu0svnJry/QllB
      lP2BMa34MhnR3xMQc/5oPqHhNnw3Ju+904O3idg+81PPen8nxi2fywWZiqf0W7YJuP5dStkB
      7++mTf6xSS4Dvrxss7LgNZCSbN4E/MbIvSykfe52JcPvAX9b2MGyPyKMZ3M8DHymsIuGv4y1
      NVvgIeB3hu7CtLyH31ku8VtAU1SCgz5tUcZFiCi2ouVRgX/bDtmLeTOH6rq8rWu0GrGbiLgM
      OCGBK+c66K7LHVa4lLfFNZEgki/rOrREJdLuhJphi6hGZFvVNDtdJ1LfiGNRk6L5blBSJGUt
      IrtJSbJ7VdkB12LcESLPNm63mZE0DnQpdgGXhGNFnnfMsdBdi/udsL4KDlnHJN+l7COuzYyk
      cEYLl2RHRQlTk2h03cvsSGIPmYAypGLc6IceUX1lHjKR/F1fyfANJtcG0e9L0lfHfBt8VwW/
      3uXZZ2jVPffOdfqAB/jY3B4avgs0ZJf5KeBEejOm5W+uJobYD/wP9uP4OyKb3CH2IXAs7TEJ
      LosBfD63jXOOP4vPJXkT0BJkmr4P1/JHhD7XJuErVNkPXtrvWjR9WcmXDbg2pv8JK/kv+G1W
      LXCBKlYGEZe3d73oftubZxhd5+EUXCRglxNu8mddmyQuP2GGvnPObqLj8touJSk5FjnX4Ue6
      lKTstMm4TqTdbXabQdfi/+xSzn67Sd51eMgOmTQVx0R3ovmG7BYJx4zIhu02uqtF+jLs2tiC
      RrtrE8oWRPpdO5JvwLVpiQL5rtFZFQTqohxR7EFRoqEpnM2HXKBhRULulwMlBhDTEnJZxtjT
      NZlPiIg5G2m86/Z4zaV65gXOPu7NKTQjAQ8/wvzhb7N4zmOrGqkMvPGtzD3/Lapz3j5AMleA
      R3+QuUPfpLboLaJkihV4w5vR3Flc11sxVF3vuX9SHgpWB2XZe98PtLbjmp7+KB1vc+zn5aHg
      KKciews1P1T34wNxGdDn2oirlPhNVp2Gf8onbXkv5N3mCrZPfDu/kfEj5gqOT48wTG+C+P5O
      NZgYJyxvYrzJtQMDSPvrIQNdp/XygjdHPqaFXJsBRWdAECKyIUWjTFQ2ImsURDGiEHJSoygI
      EcVRZIXiqnYzgqeMi11R43KiTFuUIm0oskJZFCL5iqKEJEpMdrWRl2RQ5UhfCpqClpBZHgnr
      66RkLCfa54qmgOjSGQon2o4hIacUjJvCNqSchCDaSOPhQRzBcGiePsfckXACbd60n5WzRznz
      jc8Fsn037GPl3Ammn/pKmO/V91AsOWzZ4tOSVe9veaeBPuj1WdW9v9XxEov+qq+V9FzJzTf3
      0W56I7+e9BR2ZHwzZssbfPSs56p9WPwGTdEbVAaEYd7PvXxQ+Dod0XuOEWGM93I3fyh+DcfX
      kXFhM+/kTj6qeIPMZTGAt5srdM4fczM9JR3BpuMbg+H/rUpyMLNP+qPZtKJj+VTSjKKyGThV
      SGP7BlDIJNgETOaTwSpQKW2wBSGiEFpJB8HFHJwOZFYhgys6UVk+D5ILQ+HLd/Mmrmhj5icD
      mZ0o48o21sC5QOZkBnB0kdqucPLY7tNxVJfmSOgqmVkHDBdxRygTSg62Fs1nZRxIOtF8BQdH
      aUX64mh1HMGlJYXcf1vYjZhKRpU4adNeWWK5HtIjTHs3jYUFzj4WKvH27ZtpLMww/VR4XVP7
      poNoWZPcRPjFkw2bZj7BwqYwqoepK7RKKRa3hod2LF1BF0bICDcDIAmeke9t7cNueCOv4Hpf
      kTdKW3Akb6It+sTATcv7sOueYkuWHwKltRmn6X3dJM37vc3cKKY/4bUynlGkhu6j4y+YGBnP
      oEa3/lhwTWpfxuvLwpC3EXhZDOBUXqDuj4qJnLfvOpmHpuSP2DmX3cDs0BJtf8cvW/S6sjI4
      FzyUVPZkVelZbP+QhSaOA1ATnwmoEEmhCTiYrX8I+mCZe4HbEOtdZwRaBiI2fckw0kFWy4Br
      YtdCGoXbEnHZR80OT3q1nGEcTGpuKGszjuU0mGmEZUsdDcvNs+iEFIcm/Vh2kfnlkEffaA+Q
      t41Iu05nCMWVydnhZXqaM4zlDkT6YrorSC6rZDWSdp1sJyyrOjtx05CbCF0vJWmRNwx23BHu
      DqcLGppUYM/+8PxDOpNEmxsk37gtlNkZdktDDCthXJ2ykCYtjjDWJSsKKb4jWjyr+LRkRWAP
      8OlklTnLc2MSWocfBT6VqLLoeLJ0wuZ9wBcLBjXfy8okdd4MfKFg0Gh7A2M+rfP9wK3FCTr+
      /lA26RnFXdoZHJ81kPQ34u5a/gPwXWdD3Az8GHcaHqfrZRnAqeMvenGBNA1HlKiUPJ+rmjzC
      iu1xOSz/E6aOHsbxd30VP+Shoq/g4I0wsu59khWjCpK/VuuHOhwcG8LxXapsybP0oYmhwADy
      fSVcQWS2FO4D6JlhXEGk3n8gkLXzm3AEmRNiuGHmiuOMiko0X24MSdQYzYUrOUVjAkXUI7K8
      MYYrqJhG151ZSglVTkby5fRhNCkdlWlD2Goq0q6Z6qMpZCL9KwoVykouUjat9tGWZaxUqLCu
      ksMRU3SkMOq2LQwh2x2Mzs2BTHYKzLerHFoOR/FBS2XFbfFM1+71gCvymDrDf0+FX48fl25l
      KtHgH0rh6a93KyYvJut8uUv2PtkkWZqgsNnTYsWP1jDeP0rRZ/NqflTsg30G7Yx/+Ym/J5It
      TqH4FJmUH4x4k3aIjh89IqEUgVfR/52PY/luUaI8DnvuYPKbTwbLoIXBCXbuherZRrAM6tgt
      wEV73Dt2+jIMwEVUdATX5Mjzx9h9MFQ+UiVw/YmXT6aab5dotLwfuKN5ZKpjmTJN3y8up87L
      KrR9glN/0jOox2UBy+eCD0kC+4HHJCGY3o6JArtxaRXDHUozY+AKMJsPOS6ZVAVHcCKyfHIF
      JBdzuOsgesHEkmxODIa7pWq+n35Z4ORgyHU3siJ52aZaDGkArWSdjmJFymYyNZKqGZHlMzUK
      SibSl4beJKfbkb44aYuG3o6U7U810JUE4mi4ySckbaao8qVS+HXL69tICkTKjhttCprE7olw
      7pFOiEiOyZa+8EuR1Gxu7thMZMIFg0HZJc8CRSFk2JZoojNPpUuWp83M0tepn/E2HFU1ARxA
      Ovs5JP9QvKhn4MbX4J54FrvquaROsgA3gXH0Wah5v4ueqcBeqC2atFr+ZXr+Mue5wh46fqiU
      bK6PHYA8MAL+V0EqeW7ZXGZzcAmgnRgCBCaL3m04L8MABGTBxlGS7L5hP2ZzBQzPukcqIq20
      vz7rn3Xcn9UwfQvXUp4h3J95Ads/EaalPcrv6zLP4/iRvXR/2fTBzLO453cJk97X4YayEnwB
      ClkJEZf7VkJ3J5XWkHC5NbkcyApaHdl1OdgIZeV2A9mx2FF9JpRlsyhOJyKrFEqIZoP04b8L
      ZLrqoJb6GT0bhhjJl5bQB5vR+lrjJJwxdjbDs8Mls4XabkXKZoarGLl+JrpWlTKOiYHCJsK9
      hgwa9soKicPh80oDt5KXZfadPBb2ZXONhKFG2k3bHaRah+zxcMRWRjtoVptMVz7ZNpmrWRw9
      FxpZvmOzYteZ6jpgM+yaOEvTOCfD5+XmJuXaEu6M56JJ/iUfQq0Pwf/pRdOTNedMGgveu7V9
      YxPP2YjL3ogtNv2J9MmzKDWvsFz2w6O0plB93pjhu0eJ1hSO1fZl/r7C7Eq4Eab4128t+ucS
      eBnoH4pGNThPhtMLWxH8jmlqAsuyMJN5TH8HT0xksSwLR7kbmzYC4MieTM09iGNZCAIofj4t
      933eNaACKKk8lmUxId2ENwsW0MU0tu1S3v7TuK7rHXvMZLEcaIh3ns9GUhjERWRo251BvkRu
      GFeQ6R97OJAl86MIohaRpQrjKIrOjbc+GMpKm1C1ZESWLm/BFNLUcw8H7ba17Yhygr6hg2G7
      qUEMI8edB14fyirjCHKSscq+sA29iCwpjBYqYf8UjaacorjjwaANNTMErkZ67IeC30VKjNJ2
      VVbkNwb5Ou4gpmpzuvRQIMvJFVpmjln1LYFskH4y/cOM3XJDUJ+aypGRBhjdfqO3AicIKGoR
      c/wNaJnXBDI3UaLT/xCNvbfh4qLIMpZlMXjgB2h3THBBlkUsy6J0y7vp+AdiFM3L13/buzH9
      vSBVV7Asi4E7fgTL5/lrCdWLILf10SAaXCLpRZrLbH8Tjj8JTqZSWJZF4paHgk1TPZXGtm2S
      tz7sGYTrrqJuvkzYto0kSV5owmYdFANFBByLucUVsmkDSTUQccExmV9awbZd+voqnpW6Ds1W
      m+pKjYH+PhzHodPpIIsuM4t1BvvKOI6N1engujazy3VGBvqwbZtGrQqyTjppBH2xzRaLy3Vs
      BAb7yti2jWubTJ6bIZnOUcx7lGHHajM7v4RmJCnms5HnqK6skM14+drNGm1HQhEhlUph2zat
      Ro1m2wRRplTIee1aJp1mjZqj0V/wfvR2u41jtek4EvlsOni2TrOOKSgUcxkcx2Fxfo50oYQm
      e+27rkt9ZYlGy0TRDPLZNK7r0qyvMLewSKkyiKF5Y1l9ZZmVepNMrkBC9wccUQyeI51KIQgC
      SwtzaMkcjtUmkUh4svlZbEFE1ZIkDRVRFGk1GywtV8kXSyiSFwWu2WzSrFfRUgUMVUISRZqt
      FtWlBZLZEoYmI4kCU+dm6OvvQxQEbNtGEFxmpudwHJu+wSFwbEQBpibPgpJgoK+EY9uIgsu5
      czMIkkpfpYTjhO+i2aihaElEwQXbZG65QTqpoekJcB1cu8NitY5lufT7utJLp9rtNoq4+hLZ
      SwBRFGmtzHPo8FGOHT1MvW0jiiIri7O0TItnn32Ohi+bn5lmfmGJpeUF2qYn67TqHDt2nFOT
      54L65mbP8cTTh1heXsB1XURRZHF+hsefeIoZ/+CEKIpMzsxhtWqcPhuWPXf2LMeOH2dyejqQ
      nTl1ipmlKnOzU2HZM2ewXDh16lQoO3WMU2cmeeHI0UA2NTWN2azx7AtHIrKl5WXmfYalKIos
      L85x8thhppcagezsmVMcPn6GuZmwf5OnT/Lc4aPMzoRl55eWWJyZYsY/PCIIAmfOnOXEyVNM
      nZsKZKdOn6HWaHLm9EnvDjJB4PTp04DLqdNnAtmRFw4xNTXF8VNngjucZ+YWWJqb4sWTp0PZ
      wiLLS1XOTZ0Jwh1OT57m2ecPexdf+7JjR48wNbvA5NnTvszl6JEXOH7yFDNz857MsVmsLnP2
      9Gmq9SaiKNJeWeDYsWOcmZpkqWEiiiL1pRnOTJ6jujTPUsNCFEVqi7Ms1lrMTZ+h0fH0or44
      wwsvnuDIkSO0TMfTgblpTMvk6WeepWN5sunJKeYXllisLmD7fW43Vjh27Dinp0IdmJme4jvP
      vID0K7/yK79yaVSf4MUgSmRSSSxHpFLMI4qCd5ZAU3CQKBdziKKAqulk0imabYtSIYcoCLgu
      5PMZTNOhWMghCAK6qlMu5jAdgVwm7bk4ika5lAdRJZfxRjVDVVEUmWbHJpNOIggCmm5QLuYQ
      RDUoq+s66YSOIBtkUklfAVw0I8noyBCirzi2ZZHO5hkfGQqUSXBtEpk84+UZzAAABQBJREFU
      o0MD3uXUggCOTaHcTzGfR5IkBEGg3WxRGhylks8gS34+22JgeJRKuRSUdWyLodFxBvsqQRtW
      u0W+MkAmaQQy17EZHd9EX7kclLU7bfqHxuivlIJ8iiTS6pgUCiUShuZdDC14cZWKxTKGfl7m
      4CBQKJZJ+DLRtZFkiVSmGJR1HJtkIoFqJNE1xS/roqka+WIFXVNA8C+uSyQplspoqgyCiG22
      ESUJw0ihKjKSoiFKMgnDoFIqIAoCsqphOy66rlMqZBEFAVU3aK4sYWSKFPP++1ZVWo0a6VyZ
      QtZ7Z0YiyfLiIvlShXzGk6VSSZqNBkYiRdbXAUmSaLc7pNNZslmvvkw6iWlal/4LANCuL/PU
      U08xeW6GpunNvhsrizz55JNMz87R9nk99eoC3/nOk8wtLGD6hy9WluZ54omnWV5Zwc9GdWmO
      J558htn5+WDlZ3F+hu88dYj5xXAVpbo0z+PfeZqZuXCStjA3zZNPH2JhKaQXzM9O89yhw8zO
      hxPB6flFnHadczNdsoUlWiuLTE2HspnFZRrVeWbmwvpml5aoLc0xt1iNyBrVJRaXwgn33HKV
      2sIMswvhZHP+f9Z2Juuq6kAYXfQgTUBwn/d/tOMWsBcUEFT0DkCawR2e6fqqUgMqhCR/FdmV
      MjtxOI0sLyqyfcrhPPperjfy055zPm6Q87IiP245ZWPcOE1Itlu2u1HdGicJ69/fYfUAiOOE
      9W/Mbjde7CVxwnqTsD/sJnYxh9OJNElm422SlDTtx/t8iOOY7W5HkvbjfVq2ScJmE5PsutWt
      Kc6s//5lt9+TVd03fnU9E28SkjTlVvcXpKcdu+OF8pYN7HLYkuxP5NmJqs+p4zYhPZ65Zmce
      vbx6n2xITxm3a0bb58/2d016uVKV10E9EK/XHK7Fv5kAhuXguQ6eH2BpXQjLdvFcFyF8jL5I
      euG4eJ6L8PyhXthxXDzh4gvBt6Gy63p4wsP3xNBPWgiB53v47qhXF0L0dt6Muf/H3JH9BB7b
      43m4cQZY+S6702VW9RUJl8M549WOt7Wh53K8ZIMKEWDpOhyzfMYCx+Gc57MYvmtzyXNekxjC
      WXDOr7O4wu7spsyzF2TXnLYdBXBRGGJbBsvlqOwMw5CFqROGq5mdZWqE0Sh3DqMQS1eJVn8m
      vhGmrhL9/Jn4Rhiaws/AJKIwxNA1flZ9DEnpmKGzirojbn3hEQYuC8dHWN2exbQ9lr6L7fg4
      /e8kF66PpatIio6td0ngiABLU5BVA7PPKS8IMFUZVTPR1C4z/GWIoUhoujXkzzKKMGTQJwVJ
      URSh8Q/2AACP5k7zfCMcg6rvc9jUFY8WnIU+rAB1VfF4S9iWxrOfwVVV8vzIWIY6tLIoy5LX
      R8bU5aHasigKWhQMbRR6FUXBW1LRVXnCSj6yNkwwgKIsQdFRp+3P65q3pCBL7wlr+Egq0qT2
      qq5rPpKG9JkzZG3oXgxQNzWSog/HtwNTzUHA9fWVVXM4uvsyRbdon6Ow7d7cUQ2b1+M+s9MM
      h2cznt+XZYVpC16PCatKLDcYSk2/zHaXPO63ma8tIprqOrNz/Ii6zGfMC36oiu+q9aGsKrxg
      RTkU5LwpqwoRRJRFF+P1uHNvWgKxGN7sz+ZO/WzxPYuq6dijudMi4yx06v5t39wr3pLMwtR4
      PMf8eUsKpqHyar/5U/GRVQxdGdppds9bQ9cmeVGWSKrOf/OZW6GoW2IFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='feed 2013' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='feed总量' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='food-area,item group' width='192'>
      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
      HImS0BTi8b6XzrWxXW/wWSSVfEJBjfa9xJ6L7bhYdt8Op4LMZDaBrA5WIpbtYFmDO6FOFfIH
      dW1bB3SYy+fR9q1cW9ZBuUQmP/Ai9dI7qOtkKkMkMvhy2rYFruO3FACJZAKkKKmoPJDe3nPv
      oUVjKIpKsq9isS0bz3VwBtJLIkgayb70bMvaTS+Qi8biyIpKqu9bAte28VwX2x4su2M2AI/r
      N1fotAddIHp75O/71G/lFtX6oNenPWQv/eLGChvlfXK2vTs7EVDZ3qBUrdG13D45BzyXPt1Q
      LpVoN8tU28HL5Ng2It5A4dXrNZqNCuVGsNbhOjYeYPcZiqk32K7UqVSDuX/Pc3G9fXv92x1u
      btepV4OVUDwPx/Vw+goF1+LG6jatRpAeeDjOwU8rl27eot3ar2v3gK7XV1co1xr75A7qury1
      wnrpoK491x34Gq+8s0W1VqVjOgNyeO5AZVMuldGbJcqtQV2DN2AArUaNer1Cud4akl5f/ko7
      tJtlKn1lZzs2Ah52n2CjVqVZr1Cq95Wd6/TKru+ZTb1xvK4Q7Y7OM5cfJ54Opjnb7TaSJBLr
      +zKs3W5z/sLjSGrigFyir1lut9tML14g6ykDcbIkEY1F/Cauq3fIzZ7mYsYhvvtFkmnovU8t
      ZQ1NFtGN3gAuU5jEEONMpXo1p2d3ESWJjqswq8lYOuCYRBNpJufOMV/YrbEdC9sTsF16NZVj
      gOvgSFHOLswxN7u7Suy56KaL6NkDX8O1LYknz84wMRMsarW7FhIOiX65rs3Tl86Szgerzu2O
      jiQKxPfp8OnLTxBNZgfiJEkkGksOxJ0+fwmU2D45iWRfK9NutynMXyDuSOytKHU6HWRJQtVi
      fhfI6Orkpk5B3PRbC8vQESUJR1TRIhKGBa7VJZMv0PEizGZ2a2LbAFHEcGUSmoJjWOBYRGIp
      ZubPMD/ZW9k3bRdRkvAkDVUR6ZrgmF0y+Um6Qoxpv+wMRFFCd2VmNRlbN8Ax0RJppubPcWpi
      d9ratbFccFyPREzrrW67Do4YO94W4NatZTaLpYHaYnXlJpV6E61P2Wurt1jd2KK/b7i+vspO
      pYamBXKbG2vcWFkf6Otvb22wVaqgqpq/8FcpbXF9eQXX8/yP81vVHda2inhSBGH3PmarzNWl
      ZXTbxd2tgTy9zvLaJl1XRtzLj9nkyrUlGrqNs1dT2TpLN1fRLRd57wMax+TatWtUm53go3TP
      5frSMu2ugdrX7Vi6fpVStT7Qct24sUSzow/sMLG8vMR2qYLXt0X8rZvL1JotNDVo0lduLbOx
      vTOo69VblGsN1D4drq+tsLK+6esAYGNjjWK5OqDrrc11lm6t7eq6J1subrK5U0aJBLquV7a5
      tnwL2wu+0dYbZVY3i7hixNeh3aly5foN2qYX6NBocGN1A90RgzGF1ebKtevUO6Yv1+6aftnt
      pWe2K72ys/rS69b8svNHVmaLK9eXqOtWIGfp3Li1SsfyUKTdsnMtrl27huB5h3llj47jOHS7
      3cF+8CE0Go2RNpV9VOSazSaJROLIDbcMo7eiqaq3/wbW8zxarda+Afbd5XGc5f5/IKiPI/9K
      DygAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='food-item,area' width='192'>
      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
      dPCQScRjuLbJq99+nWa7S7VcCq+9ef0yF67cZn52OqTduXOd7715lYX52ZB2+e036DsBmXQy
      HNRrl96iPXTJpFMoe7S7d29z/fIlEoUpDH1kHl67e4fb1y6ipKskYypmv8vG9g79bodWd0A2
      k0IKPC5cuEC/02AoJcgkRmPY3Nnk6pVLOGqS7J6TqNfa5q0Ll3EknVx6FG+1ffsSV9aamLZN
      ITvyCrfXr/LG7SbmoEcxvzfWdodvvn6JoeNQukdz+rz2nbfpmDble9/Es/jud75HfWBTKeb3
      vonLm69/m82exdS98Q8CLnznVVbbw4lvcvmN17m13Wa6Ohprxxry2uvfodXpURkb/xtXL3Lx
      +l3mZmoh7fatq7x14QbzczMhbXX1Jm+8eZnZ2ZlwrG/fvM7QdkkmEuE3ubt6myuXLpEu1Yhr
      o/G/ce0iF69NPuPIdQBJ0QgCn05beISRVQIJuh0RYowSw3UdDG3sFSQZLwgYdDtjNJWFah5t
      vKQhErFskXJ6sgyIlspTzYl4kWw2x8bmJu3eIJwgihajmEkgKZPVEpxBj2R28iRJyYfZuZkJ
      WiqusFlv44+l3ybjGvVGMyyPAiD7PrPHT5DQhW9ElWXK1RrKvdihRIr67jbesIOayodjdXx+
      FjeQSY5VdDDiMRxfwnOEN1RRVErlKtpY3aBcuYZndkmMhUmkSzUkq4thjGefqRRKJZJj74eq
      Y7vOJE3WiMdjJGPCW9tut/EVnXxyMo5JjieoZCYT7tVkhqnCWN6CHiefNpD3jb897JPKTgYG
      qgGUqpOZZcGgTSxb5N7GZA/7mJbNYGgy7tBS8VATaTRlLJNOkimVSxP3O3oGkDV02UfTxyan
      pBJXfBRtjOY7I3e0449fTDKmgjImmfkupiuRSYkPOux3aXc6BIgPZQ17tFpN/GDsB+sxatUy
      U9VqyPGSJOE4Nv2BCM8ACAKPVkeESQSuzVa9FQa/3UPcSCIHPmOSATEjAUGAOnbAnmHEaXd6
      hFUkAp/NnR1MyyW2x/QSsDA7i5oqUkxq4Tu2200Cz6Y9EJO93++SSsS5eFUExdV3tugOhsTG
      Jie+i+PBcCACAaVgNIbmUISWd5u7tHu9yW/ieZimiWmP/WbP5ubdDbpdMTaxeIKpqTKJhPgm
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='foodfeed' width='192'>
      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
      LWq8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='food肉蛋' width='192'>
      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
      oEsRCATnw/8HrHcPiL8/U9IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='gif area' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWWxk2Xnff3epurf2hVWs4tJcujndM93TmkUajaSRZXksyQ7sWI6dyIDh
      lwRxkhc/GIGDwAESOUjyEiQBDOTFeXAQJIg3WHFijy1pRiNp5EUjeTRrN3shu5s7i7Xvt+6W
      hyLrVnWT3ewZFsnuOj+gQfL0uXVOnXP+Z/nOd86VXNd1EQhGFPmkMyAQnCRCAIKRRghA8Fjx
      3ttvYViHn9WrQ8yLQHCsuFaT5WtXMSWVesNka2OZpy48yQc3VvjKL/zMvr29GAEEjw2l7U0C
      6Uny67eZPDNNNJmiXCggSRLOAc9IwgokGGWOfASwbfuoP1IgGBpiCiQYaYQABCONEIBgpBEC
      EIw0QgCCkWZoAshXmnxwK4fjCCur4PQyFAHYjsNv/s5r/OZ/+xZvvHtnGEkIBEfCUAQgIRHQ
      fEgS6H7hbSE4vQxFALIs8etf+RSfvTzDixenh5GEQHAkDEUAjuvyR9++wts3trixVhhGEgLB
      kTAUAbiOy+JKgVbH4tZmeRhJCARHwlAEoCgy//TnPs5Tsyl+4rm5YSQhEBwJQzODTqUijCdC
      +FRlWEkIBB+Zw5loXIfby0sEY0nKhTyTUxOsb+TIphPkqy0yY3FM0ySRSPQeyZUaFKstLNtB
      VcR+m+B0ckgbpYSu+djaXGN6YorrN+4wN5/h9lqR8ajG7ds3CccniMUcHMfBth1+98/fZrtY
      54137vBjHzsz3G8hEHxIDicAx6bRMtA0nbW1dcZTCVZXtolFI+TrbbKZSVrtDpIsI7sukiwz
      l41RrreZHo+iqmIvQHA6OVzLVFTOPXFhIGj6Pp26LEl85ScuIcsyT0yPfZT8CQRDZWiTc0mS
      kKRhfbpAcDQMTQC242ALRzjBKWc4O8GOyx+83t0JXryTH0YSAsGRMJydYFxK9Ta241BtGsNI
      QiA4EoazEyzL/MoXLnNxLs3HL0wMIwmB4EgY2hogGtIIB/wostgEE5xehtY6m4ZJy7BwxL1b
      glPM0BbBf/jtKyze2eG9pe1hJCEQHAlDGwECmookS2jiRJjgFDOU1inLEr/wuadwHZcnZ1LD
      SEIgOBKGYwZ1XYrVFtVmB9MSd4UKTi9DOxL59TdvsrZT5d3l3DCSEAiOhOFMgSSJJ2fS+H0q
      k2PhYSQhEBwJR/5+ANu2URRxCkzwaCB2qQQjjRCAYKQRAhCMNIdcBDvcvnkTw7SpGyaTqTib
      +SLhYIhG2ySTitHp2MzNzQw3twLBEXNoK5BP0xkbj3JneZlcsc7kZJrtXINUJEiplCcYGcdx
      uofixXv3BI8Kh74Wpd1qoWgBQtE4E5MTbOcKXJifIF9tcTabxbat3qF4YQUSPCoIM6hgpBGL
      YMFIIwQgGGmEAAQjjRCAYKQRAhCMNEIAgpFGCEAw0ggBCEYaIQDBSCMEIBhphAAEI40QgGCk
      EQIQjDRCAIKRRghAMNIIAQhGmsOfCV5aQlL91KpV0uNptneKpJIxyrU22XSCTqdDNpsdbm4F
      giPm0C/KDkciNFsNpienWF5ZZ/5cltWVMuNRnY2NO4Tjk+JMsOCR45Bngi22t3dIptNsbm8x
      NzvJxlqeifEYxVqbM2fOYhgdcSZY8MghzgQLRhqxCBaMNPcIoNVu4bourVbrJPIjEBwr9wjg
      jTfewDAMvvnqN08iPwLBsbLvFOjdd9+lXCqzsrJy3PkRCI6VexbB9Xodx3GwLItAIEAgEHio
      DxSLYMGjxD0jQDgcJqD7AQm/pp9AlgSC42PfKdDVt3/I1evLdBznuPMjEBwr+woglUpy48ZN
      EBu6gsecfQVQLFSYSMVpdMQrTgWPN/sIwETxBXBlH0G/WMwKHm/2EYBCq20wkU7QES+5Fjzm
      7CMAl0qpBIqCIknHnyOB4BjZdwS4ePk85Wodn7DnCx5z9l0EN6pl3n37HRod67jzIxAcK/cI
      oNOsUW3Diy++SEgTI4Dg8eaeAzGqFsBu1SlVm9QNC10VIhA8vtwjAFlRmZ07w50fXiWi+XZD
      Xe4s3yCdnWZp+RaT2TQbW3lSyRileptsOknH6JDNZo45+wLBR2PfI5HFQomw7qdpWmhq1y8o
      EYvQsRwk1yafrzA9k/bOBK/fFmeCBY8k+wpAklzSU2cI+ff+22F7O48v4uBTfSSSMTbWCkyk
      4xRrbabPnKVjGOJMsOCR4x536E69xDe/9W2mn3iWSxfmUOWH2wsQ7tCCR4l7rEDl7S0kXeOD
      t96jYwtvUMHjjbgVQjDSnPitEI7rYlhi4Sw4GU5cAH95q8ofvbvD7ZJx0lkRjCAnLoBC08Ry
      oNwSbheC4+fEBSBLEhIg/E4FJ8EpEED35OVDWlsFgiPhxAXgV2QkwKeceFYEI8iJtzpJAlWW
      hBVIcCKcuADOjun4VYkzce2ksyIYQU5cALcKbVqmw3q1c9JZEYwgJy4Al90p0ElnRDCSnLgr
      hGE51AybZFBFFofwBcfMiQtAIDhJTnwKJBCcJEIAgpHm0AJoNRs4jkupWMR2bIqlMrZpUK7W
      sSyLTkdYcQSPHodcA7isLV/HH01SL1dotjvoQT+tloOmSsiKi+IPMXdmEtu2kWUxsAgeDQ7d
      Ul3XodFsY1kWsix1G7oEtuMgyzKOLe4RFTx6HPJN8RBNZlE0HdeOEwqFaDSbBHWNVscioPlx
      HAckCUmSDhwB2t/5j9i3v4f+pX+LMvHMkX0JgeDDckgBSMQSiYGQSDgMQFjt3h10GNOn+c7v
      gW1g3nhVCEBwKjjeyfreRpfY8BKcEo5VAHLyLPiCyLEzx5msQHAgx7oT7JRXcQo3UWZfQlL9
      R5msQPChEK4QgpFGGOwFI40QgGCkEQIQjDRCAIKRRghAMNIIAQhGGiEAwUgjBCAYaYQABCON
      EIBgpBECEIw0QgCCkebQJ8IA7FaNd67fYjKVZDNfIBoOU292yKTjGB2L2Rnh5ix4tHgoATiS
      hCbZ7BRrTE2Ns7lVZywSpFDIEYyOH92Lsl0HrDb4gh/tcwSCB/BQApAVH3owSnYiy3Yuz8Js
      mkK1zfz8E1iWdXQvyr7xCmy/C+d+Ciae+2ifJRDch9N5HuCv/wu0SzB+GS79g6PJmECwD6dz
      Eaz4B38OgWazyVs/eJPc1tbQ0hCcfk6nAGZeguQTQ53+fP8v3+CPf//3+Nof/N7Q0hCcfh5q
      DXBsZJ/t/hsipWIJx7YpFgpDTUdwujmdI8AxsLdOkfvWK67rYtk2jnhf2cgwsgJIjo0RCAYZ
      z2R6YUuFHX77jW/x/z545wRzJjhOTucU6Bj45GdeIpFMMjntbd7dLhYwbIsbO7lemOu6lLff
      IRCdQg+mTyKrgiEysgLQNI2nnxlcZyi7b+tW+t7avbb4x7z/xm+hhzJ8/pe/jiSN7KD5WPLI
      1OZi+T3+cPm/c6e2NLQ0JqNxIprOXDLVC2s3tnZ/5uBDrA06KytYudyDIwpOhEdmBHgz9112
      2tuoksps5BwA6+VV3lz5a16c/QyTsemPnMb5dIbxcISQ5r2z2KcnQJLx64n7PLk/7Q+ukPt3
      /x5J05j4z/8JNdn9jFaziSxLaHrgvs9X3r6J0zGJf+ICknjnwlB4ZAQwpo+z095mTB/vhf3u
      m7/Dla33uLr9Ab/5xd8C4LtLN/gfP/g+f+/ys/zMpacBcF0Lp7mKrGeRlIMbnSRJJIKhgbCJ
      cz9Np1UgmroIDzn9sasVcF1cw8BttYAE9WqV73/nW8iyzKdf/iJ6YP/8tLeKrP7Pb4Lr4ouF
      CV842NGwvlmm0zCIz6eRlUdDKHZ7i07+W/iiH0ONPn1i+XhkBPCl6Z/nE+nPkuoTQDqU3v3p
      hb16bZGNSoW/WPygJwBj42t0cl9HiTxFaOGfP1S6WiDJ+Rd+7cERy2V49RsQi8HLXwBFIfDM
      M4R+8mWUWAx1IgtAs1HHcWwcx6bdaqIHAriui5uvggtSOookSbvTre6Uy3WcA5O12iYr372O
      67hIskzibBrXdbn+7feobBZ5+u98gmAi/FDf+Tgw869j7ryOXb9BWAjgwfhkH5nAxEDYP/zU
      P+MLF36amcRcL+zSxCRvra1yeWKqF+aalYGfHxXL7HDjh98jOjbO1PndytvagGql+6/VgnAY
      ORhk7Ff/8cCzmq4j7b5IxL831aq3sT9YAUB5/hxSNIiWTTL5iz+OY5iEn9id3rkurHwPjCqc
      /QKoGkjsXjfvdoUD2B2LxVffBiA+Ncb5H78MQLOQo10rEZs+i7L7XofDslExWCq0uZQNkgw+
      3LPvF9/iO5tf59mxF3kp+3L3q1gNwN39eXI8MgLYD7/i51zq/EDYV559np+99DQBn+dHpE38
      HJIvhho7GteK6z/4Ln/zJ/8LWVH55X/92/j1AExMwfg4hCNwwLQGIBpP8MKPfR5JkgmGuj3z
      gD/i7u+SJJH89KXBh9slWH4VcCE2A5nLKH6Vmc+dx2wYRGeS3WcVmXAqSqNYI5yK9R5f/cG3
      cR0bxzRJPdEV7p/+1XXev5Xjl16+xPxEd43iWgZuPYcUm+pZvX6wVqfcsnBclx8/Fz/w+72x
      9Dp/+Pb/5suXf5GfPP9TANysLtK2W9yofNATgKxnQA6g6JMPKu6h8kgLYD8kSSLk1wbCZG0c
      ferovEr1YLfhaoGg9zqoWAx+9suHyl8skRwMiwRQzk8BLlL0fmcgpG5v77q99YgkSYSzsYFY
      iqrw2V/9Kdr1NtGM11hVPYDZrKP2Lb7/1zffo2mYJKMB/snf/TgA7Vd+A+vWd9A+9xv4n/sV
      AAI+mXILAj5v57xmtLlVyLOQGifo73Y43116nXwjx3duvtYTQFDtrqsCqre+8qU+j+RLooTO
      ehl3XTDa4PPD7g59s7rK9R/+VxKZ55i99EsAXM/l+A+v/gUX0hn+xU9+EUWWsSyTd/72b4kl
      Eiycv3CfMhzksRPAcTD/sU8SiMQJxZOod4ntwyBJEtJk8sER9Thc/PvQqUPq/pWshQNo4cGR
      aPbTX8RsN9CjXlo/8fwc7y5t88KTXk9sb38Ajo2du9oL+9x8jELTJBP2RtZXrr7PcmGHi5kJ
      vvx0d0/lmannuFVc4tmp53vxPpN5mZQ2zlzkiV6YrEbwj700mOmlm/BX34PJKfjClwBYXfxj
      Nm++wtbyN3oCeGtthVytRq5W49c//zKKLPOjH/6Qr/3+76GoKv/y3/wWoXAYo9Fm88oKiTNp
      Ytn9rXhCAB8CSZaZOPfkCSQswfiHXzCqmo6q6QNhe71+P/7nfgVz8RV8T/1cL0z3yUzFBsVu
      2tbuT+8NoT9z8ed5+YkvEfB54gv7Ijyf/vSDM7iTA8uCbc9FPTp2AUn2EUtd7IV9YmaW7y7d
      YCE1jn93pAgGg0iShK7rPT+vxVff5vab1wmlonzh138egKXqNV5b/1PmIgt8afrLH+1ATGln
      k61yi4l0kk6nw/j4uHhBxgixXavy/uY6z0ydIRU6AktTpQzvvQvZCVjojhau69JpFVD9YRRV
      P/BR13FYXblDOBwhmepuZF57/V0WX32b1LksL/2j7ojy2vqf8nbhTfyyxq89/a8+mgDW1lZR
      HchX84Tjk8xMprFtG9M0URQFe7dn6P9dluXuK1V3f3ddF9d1B37fs2bs/S5J0sAze79/1DT2
      Pvco0zgo749rGqe9ntuVJmrAj0/zIUkSG81Vvpf/BmfDF3g+/pmPJoBibpNcpUUmlcAwOmSy
      GRwxAggeIU7nmWCB4Jh4NPbNBYIhIQQgGGmEAAQjjRCAYKQRAhCMNEPZCd6z0+7Zd/ez+R4U
      Bjz0M6clrJ8HhZ10Xg9b/o9SnexX1g969sgFIEmS5yC2S/8GysOG9TY3JAkXryL2NjzuTueg
      sP4vfb94xxF2WvLyUOXf9/xhw076+1lW11XDv+uot1/5K1/96le/yhGyd5gjv7HE0kaFZrNB
      Mh7rhncqfO2Vb2NaNtlMuhtmNviTP3+NdsdiIjOOJEkU89vkCyUsVyIY0Hcz67K+sszKRo5E
      MoWqyOC6LC5eQVK1vnjw6qtfp9G2yKRTvbD89hpLt1YJx+Jovq7ub15fxHJlQsFAL977P/gO
      b7y3wsWF2V7YjXf+km/84CaXzs8hyzIdo8UHV65SLBaJJca6eQFuL92g2jIIhUIou2Fb6yts
      bG7gDyfRdz0pW40q165dx1H8REJd78/t9RVK9Sa6HsSnduMVttfJFWvoAS+svLPBa69/GymQ
      IBXvuh9sLF/h1maJlmmTiIZxrA5r6xs0GnXK5QqBUBRVkcAo89c/uo5pdUgm4rt1UuP//Pm3
      MDo2E3t1YrX4v698k6Zh9uoE2+TKtRuofo2Aru3Ws80rr/wZ5YbB1EQWSZKoV8ssXrtOqVIj
      NZbsleHVD97DRiUcCvbC/uaN11gtNDkzMd4Lu7W0yJUbK8xMT/TCFt96g9feusXT5+d6YTff
      /RtefXOR8wtzvfJfvvK3vP799zgzO4/mUyjubHNl8TqqXxtIt1TY5vrNW4TC0SE5w0kSY9kZ
      Gp119P4jhqrOxz/2NKruOVW5isanP/EssubFC4YitI1ibyq1R71hMJnJYDsO0G0Qms+HdVe8
      8wsL2LKXhuPYOKhcOL+A5Xj7fn6fj7bR8fLiusxeeIZotTkQNnHuMi8lquz1i34twHQ2Q6XZ
      Ru67QcIyTfSQOjgcO243v31BrtUhEk8R0P17iaD7fVSqLZy+/OmaRqlZH7ioKxwb44UXXiAU
      89ycE+kMpbU8sUhXEJKsUM2t0AlN8sTMBH51N3FfANfu4Ff6MuML8vT5c4Tjfd6oisZnX3wB
      fJ7vTbFUQMLF6Jje90DiU598gQ5eWYejcVLJGrY0uBlqWdY9G6TZiUmqpne4pt1qYLRNxsYG
      PWNTMxf4eLTeV4Au2bMX+VS86t3g4bpkZs7zQmScgK8riHR2klq9QblSJjvuXXRQKtd46qmn
      ME1zeItg16yzUzEIBvtcch2bWqOB0dfoCjs5tnM7NFvtXpiuuKxuF9jY3Oz7QJt6s40j+wj4
      vYK8duMGK6trA2kbhknHMHp/txp1apUy15ZXCQW8ymo0W5SKeS8Jx2I7l+8Nmd08W1QqNcrV
      6kAaO/kdtEBgoADjsQibG5sDDdYFFFkeuFCikC+ydO0dGrZX+ZKqUi0V6Nje8cdmq8XS1XfZ
      LjV65bd84yo7+QIbO+W+PDq4jsPtlW45SLLChaefIYCJ0bE8QdomzXYLo7+/sJp8cPMOxVLJ
      C7MNbq1tDog7mUiwvb7Oxs5OL6zTMSkU8rTabfrZ2ckRvOtsdVD3sb61PRBWqTVJj3lC9msB
      HCTazfpAvFqlStv0hIdrUy4WKdW802Sm0WBldZV8qTJQ/rquoWmDXqyaT2Frp0AoGBieACQ1
      BJ0ylb5Mtk2XWCRIIt7Xe8VC2JKferWvQhUfdruBovQNUJJCJKRRqdYG0nny3DzxxNhdqbuM
      jXlhoUiMne0NylWvYG3LRNf8KH29nKz40H0yHdPqS9aH0SxSrRv0+4wk4xFWVtcHCrtSrRPS
      ZNrmbpjroAdDBEIRAmpfY0qnmTpzlkRgV8iSRKlYxajlqbQ9Afj8OpcuXSKo+/YyyNz8PBtr
      K4QCXr79gTCxaIT5M32nqxwb23GpNfobk0smM8F4qq+8ZB+XL17k/MK5XlDHcpAdg1Kl71lJ
      QYvESEe9hq35Var1NpHQ4LmDoOZjM5cfCNvc3KTR18nZlsnk1BT9hSrLMrFomFTKu4DMtU1C
      kSixmHfop9Mx2djMYRkNLLv7Aao/SGYshu0MevbE4gnGU6mBsFJujbev3OymyZBwOzU2yx1q
      Fa9h66pLrlhHVb0eXPEHCWoymWzfeV9JYiyRJBqN9H2gQ7FUpdPxenaAUr1FMbdBx/Iajqoo
      WJbXzbmuy5mzF5jJehUvywqKFiASHOwdqvkNltYHKy+gKASig6euKsUd8sUqe8lanTaurCAp
      frS9xi7J+FWZer3Zq2fHMtjK5TFMi74OltRYnGR2jlTEG31yuS2aht1bswC0mi1iiWRvgbeb
      EI7jUKt5nYPsD3L27DyZvh4W2YeKvTuF3HtUpVpYZ7vg1ZMiuYxNzKLKfUOFJBHUVBz6pzEy
      kZBOuTLYKa2srdNut3p/16slZubPk45HvScVBaNZJ18qDzxbrw+eEZYUH6V8bmBUVn1+5uem
      SSTT3bUN3TMajXqddrOJaXsieP9H3+fNdxcHPnMse4ZsPNitA4aB65KvGlw8N8n4uHdjA4pO
      UFdot7w5No5Jo2n0T5HBdTEsm2Ssv9FJZLMZUmODvX271cCvBwZuc1tduc3yymrvb6NZY2dn
      B1/fYRDHNinubNM0rIHPiyXTaJgYfaOA4vPTMbw8dloNfJE0F87N4NutANWvo/t9yJKD2dcL
      OY5DJBzqCUBWNaIBHz598OhjpVLBL5ssrXjThGgkQmlnk1Ld6zllRWZsfJJUwuscWvUiuZ0C
      P3rfO8HldJosL99iO+81sLZhoet3vXPBboM/QqVU9Mqr3WJjbQWf5uWxUsqj+ANY/VMRHArF
      MobpdUrVcoFzT1xgvK8XlyQJy7JI9tWdJMlUyiXqzRb9aIrDnU3vIrGd3BaKHugZAbploFAs
      FNH0wc7LduDswjl01WvW41NnmU4Pdl6lSg3JMbizuj4kAUgSqUQEw1Lw+/tuELDb3FnbpNTX
      YxTLNcbTyYH55srKKo7VYTO30/ehLpVqDfWuhdRYYoxoLD4ggJnZOebOeLdCICvMzs4S6luP
      KD4N26izutmfBpQbBiodbvcJqFg3mJv0hlF/IIRfkXAci8ER16XTbrG+4Z1oKuQ2Wby+SK3t
      9aahWALFNrD2ZkpmHUfVabUcprJeOsFQiLHMFKmol29VUbEtE3cvYcdG8odJxEI8/ZR3TNJ0
      ZCLhAMmEV/m66lBtdNjJe1fCV1sOC7NZ0mmvwQZDIRTFh+bz6i6WSCFZbdodb/0GEvFEgnRf
      w9YCYYIBHU3znrUsi0AweM/1Loo/yIWzs17pOQ6KP0Cwr80kE0kUSaZcHrzRQ5JlbOuuzmss
      ja4wYOjwyS7uXQvyeDRCemKGc7PTQ9wJllVcu4NjD37p7HiGdN+cLJnKMDU1RTzqnShqGQau
      JOE4g9Ydn6oOTG0q5QKBSBTHMgfi2bZN/x2eeiBEMpkk3j+lAjLT53jpE5d7fztWh0QiQSKV
      5dysdxFVNBQkXywNPCvLMrIk02/w0fUAwUgMfdcKYbbqOL4QkxPTRPVuJbiOjeO4uEaThuH0
      yqqUz3NmZmpgneH36wSDgyOFaZrcXrrOdml3UW4bLN9eodE2MPfK2nWpVqu9wyI9FA2rVcWy
      7N4GV6dZ5Z33FwcXiopGJKRj9vXsOBZ31rfvGgFcDKMz0Clpmsb21iaFgjeiRONjuw12cPoa
      jYQpFL147VaDRtsim/HaR7W0Q7lSpVwbXBiHw2FaraZnXHAslpeXKRTLA3VSLFd61rE9arU6
      qqKgKMrwzgR3TJtoJMhdcxtMyxno7ffjwpMX9wmV6Az0Pt1eKZaARsObNy7duoXkDzAxfvfC
      +F5cq83WToFzs917dwyjjW27NBoNVNUrmkq9iW053Y04oJjboFQukZhaQO37LtVqBT2SJDve
      7U0Vn4bmU2m1Wr3FslHe5P07NTKxOFF992YHRefyMx8bzJxjkS+WyO0UiI/t9s6uA4rGU0+e
      R99bBKsBFs7O47jg35viSRJjsSBXb+Vw5BLRvUWq1cTxRWg1vfIKhKNcvvw0Wt9tDzgmK2vr
      oPh6C+Zmu8PHn708YK4GmYBfodpokuyb32t+Dfrm7FanxZX332NqboHs7m309WqJWq2KHPLq
      KRCKEPArmH2dXDw9yYVglFzfGmVv023gKIuskoiFWFvfYHJmHp8Ctm0xMTExYFkDSKVSrO8U
      mZ7MDG8E8MsO7y/eZHOr72JYWSMakKk32wc/eCAupVqDeq18z/+EQl6lJGMRfIpCvnhvvLvZ
      3lhhZdNb8Jodg0q1xuSkZ00xWg0URUFR/Z6WZYVIOEy5WPDs9q5LPB6nYxi9ijGNBmub2/i0
      oHfztB7hyfPnOHv2bG9jbF9klaCmUi5ska/uzpNtg5XNHYKaj+aeKVmSCARDhEIhb57suuwU
      yphGE1331j2WpJNJBpma9AwOuZUbXF1ap9UenNpMZMaplHZombvHEmWJnZ0d1ldX+haZDoYj
      USsPjo4d22Ys7k29fFqQgKZQ6bPCSUgEI3Eke7BTa1TyrOe8z5MkiXwhP3CFZKfd7O79SMpA
      bx8Nh4kmkr11mSRJ3U5tn5v1lN2yGtoIIKl+xqIh9L47aK5dW2S7UOHZM/MP/XmuJDM3lend
      yXMQiWSKxCFuGGk1aoSTWTS8nioQijIzoyHJfUN6IIQiy2BZvREgmcrc83mm0cRwJCyzjeW4
      qApooTgvfvKFgXi+YIxDXbPrulTKFSZnzhIPeb39udkJDNNh5q7p3ACSRGZikrZpUyqXmRzv
      FshOLke93kAPxXp7A/MXLmHcWKHRbBLvmTglNE1Dxu6ZFTVNQ1Y1rPImxYZJJuqnXqsSDIYJ
      hb06Wbp5DT0Qwuybn3c6BucWLmBLXlnbTvfseKs9OH2NJ9OYfTaSVqNKsVQlLvdddBYI0W61
      Maxu/uTdBu/zB3CtHSzHxU/X0hfQA9Q79sDnrW/vMJ7pdgJDE4BrtZH8YZIJb2hcOP8U4c0N
      LMsEHu4+nVu37+ACpWKRifHUA+M/iEAogiwrYHsV5fNr+Pa550fT/AQice43cZNVH8WtdZTw
      GH71CAbWdom6HAGjQkj3qikQDHP/O6W7SJKM48DsGe/W7ERyDBsZrd8wgYTcdxi9i0u1WmN+
      YYGwpvTi+VSFc5c+QSLabYyr61tYnaY3RaM7HQ1H4th90452o45hOiTGPKFE42NE44PTVMvs
      sF2oMDE91wvTNZ1mu4VcrQJdw0a9UmZ6do78Th55z6fKtuiYFv5AEK2v/AulEuC/ubIAAAfF
      SURBVB3H+1uSZGzb7vkODe9eINfBdlzPWgGs3HifljZOwv9wd0sChDQfrY5ENHR0b4/XVQlZ
      jz4wnm1bOHe5W+zH1OzZ3Zvb4L5qOQxajJmUjEsY23F52EufrVaZetumdWeFp59cAED3STRa
      FrFEf+YkMlPTSI7XExsdi0QsiGEOfmfLMrH6Gvbc7AxGx0Ttm8pdvPSxgfUTdE23jm2xvrnF
      hXNzB+bZtiwCoTDVaoXs7hpOUv2cnZmi2vLyYhpN8sUy7aY3VLQbNUrVBvVGY2Ba5FN9BAOe
      8PRgmOef867IHJoA5MAYn3o+OWDVODO/wJUbd2gaUYKBhxsBMpMf/f7/fmzbptWqU7EdmD34
      fkqjWUf1B+AB9/O7jsP21jY+n4IejKA/YKH/QGSFWPzgOzgf+LhPp1wqDLwDbWNznUbDvGtO
      7LK1vkogEiUa7XYG21ubNOo1fNHsQLztXA5bUkknu/P7QDBE4K7+6O7GD7tTy2jigX2Cqiq0
      mk2S6cEppt/no7CWg13xJMYnife5aQMEownORxNdj9a+Zx3LvG/dDW8K5LqYZod8vsjErqeg
      qoCDSj6fJxW/zxz2GLi5tITjC/Pck+fuG08Lhpl6wLoDuhth8WiIarOF+8DYx4MsS4TCXjkX
      Ky00TSce8YwGbcMkFAoQ6rvYamZ+gRkYcEa0HZfZM9MogYevt8PeEqL4NCSjzM1Vidlpr1Mq
      V2qEw4O+RXf7/+/R7xa9tb5Cx4GJ5MFT5uG5QrSL/Nk3v0ux2vAy64vw9FML9x0Gj4vZM1Ok
      x8ao1Y/uem7baFCute7xRzl2XIel22skY5GBhpNMJAgFNGoNb/e1Ua/T7jPT9tPfcK9fu0ah
      XKFSebB17cPSatSIJLOMRbxVjuu6RCORewRwGGwXdL8ysPF3N8OzAmlhFqYzpMb61Nep8P23
      lhnPJHlifvbgh48BPRBiZ2cHLfjgNcBh8Wk6Eu2ef8qJ4TogK7iSg7/PhWByeuaeqIlYgNXt
      MmZum7H7jMrJZBK93XmgFe6j4Pf7kRQf8ZgngM21FSzXpVx7eNP51PTMvZuBdzG8KVC7Rt2U
      men3PfFFSCXDJKOn440lRquF7DuiRbVjs7SywVhybGDhfyLIKgvzs7RMCdex7hu1VK5RL+cI
      zSzcN16m74Ujw6JSLuHXQ/j6NtHi0Qib5RZnMh+uzXzw3jtkp+dIj+1vfB7aFKiDzplsfGBF
      jlnn6o1bbOdLBz53nNidBsurmw+OeEieeOIJAqFwbyPmJHGtDndu36JUvf8UbyyVYXp6GuMu
      H/yTIJnOMj01QSbtmUeDsSTnZqdIpT6c6ds1m7z9wfUD/39oI4Dmk2l3bGJ9PjmO7fDs8x9H
      dT7MTvDR4roukdgYpu/B5s1DISs0ahVUPXLgAu046dgQCQeJPWi0lcC2nQFnuMcJLRAidp/X
      QQ3NHXp7a4NavTkwB2u2DdZv3UD2H50t/8Pi2BZaKDLgw/JRcF0Hv6rSNjqDPionhF9x73H1
      3he7Q61lsr62evKL9yGQSo0TvNsFvI8hTYFc2o6fZy9fGDhyGA76KdUNyoX8fZ49HhTVx+ry
      Na7euH0kn2ebHVzFT6taoG2dfENyHJNmq9PbKT0QWaFjmmTHUwMu5Y8LtXq968pyAEOaAklo
      isudO3dIpDzHK8eV+dgzl5HM1n2ePT4mpmbw14wHRzwEjm3TarXQgtGeO/RJIisa9VKOSn2c
      cPDgF0sgKfgkG4vD2eofJVzX7b4wI3TwhuLQboWYmL7XzFksFtneLDN39v4Wh+Oi3Wri1x7e
      vrwf/kCIs2fPPjjiMeGYTaqGQ61ahvGD3e8WFxcB955zB48DtmXSbrfYLDW4/OT+be5Yu6rt
      QoVQKERxZ+vBkY+BYChMLnc68nKkuC71jsyzF88xmc3eN2owFCYcjgwcOXxcUH1+NtfuDJwl
      uJsjf0HG/egYbWTVj+s4+Hwn+34+xzZZXlrGlv1cWHh49+xTjevSapS5s7ZDIpUmkzqUA/Zj
      Ry6XI5lMYJo2gcD+08BjbYX10jabFZtwUGf2zMm+IPn2rVv4FYfWUW2EnSYkCb9PxXQkXPsQ
      lqDHlMLOFvV6HcUfYHZ6Yt84xyqA5PgEG/kbuNxnUXZMpNNpavUG0RMeiYaBa1vkijWSsSDB
      UBDLdnrXB44S55+8hKIoOI5zoIf68da+1WZ5Lcd5/8F22eMiEksQiT2mUwOp655tGB2cSoVg
      4DBHaB4/FEWh026RLxSIj+2/H3CsawDsDhu5EnpAJxmPPTi+4EPjug7NRhO/ruPbx0d/VHjz
      e69RcSN88cc+ue//H+u4WN1Z4852kVb7aGzvgoOxmgUWl9YxOqO7BgCYmplnfvpgS9ixCkCL
      jZOJ+AcOyguGg6JFcY0S5drRnXd4FCmVKgdagOC4BaDY5Cvtx9LmfNqw21VKLZdW4+S9PE8K
      y+wwnp24r3PisQrAsBUyY+FTc2TwcUZWNRbOzjM/e7RnqR8lVJ+fUrF4z3Wa/RyvAAyTUFBn
      Y+PofPAF++C6NNomRqNMpXY6/K5OgnIhB7JKs3VwGRyrABr1KtVanYns/psSgqPD59eZnp4m
      Ejr5PZeTolgocWZ+nlajdmCc4zWDCgTHiGNbbG1tEY6NEQ3vb3gRAhCMNP8f5AxZcyzzLeoA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='gif continent  food' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif continent feed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATb0lEQVR4nO3dWXMc13nG8f/pnp59A4idBAEQJEGAOyUukkhtlsqOVXYcVyp2qlzllL9B
      bnKfj+CLVCqVXMRxUpWkknKSih2n7NjWRpESxQUiCXDDvhLELJgN0z3dnQtQoBgZJhQMMKPp
      93dBDgES/XKmn+nT0+fto1zXdRHCg5RSSqt1EULUkgRAeJoEQHiaBEB4mgRAeJoEoN64DiMf
      /g9/9+O/59KtqQ3/WmZ+muyqTblSomBu7kdPTE5WqcjG4at1AeJp5so87956yPe+98f4cFh8
      MMylkQVeevUV5u5fZ3nhIW0HjvLxP/8N6d0n+da3vkKwnOHm/Xs8TFu8+sarzN38gLspnTcu
      HOHWlassplc5PLSXH/7FX/G13/8+X3n5pLzwj8nzUGescglfJEbIp+OYRX72zlXeev0E//6f
      71NKfcJ3vvk1fvLBLY7v70edfYNoIMf8xCSjKZ1j+j3evnyFq7/4JWGtgC8ZY2ZkjpeHgows
      Beg/OMCr546g1/o/WUdkCFRnQsl2woVFrty8zdjsIwxVYXbhEYFwCM0fJhEJo2sa0USQualp
      yvbav4tGY4SDfjTdT2fvQd767g842hUiGI4SCQVQmk4Ui6mHaeTK5xNKrgTXn9XcMiN3x2nt
      GSBmp7k3m+Hg0CDZ5UV2t7Uwn8rTHje4OfKAnqEhDGuVQkUnSh7Tv4vi4hhzqRIHDh2klC/S
      FFHknQh6cYGZrMbhQz3yzsfalWAJgPCsupgK4boujuPUugzhURIA4Wk1D4AQtSQBEJ4mARCe
      JgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQnrb1fgDb5MbHl3mYLZEx/Xz9bC9vX75NqHk3
      50/u5de/fB83lOT8hSPMjK+yu7nMxIqfI/2dVShfiK2p2mzQwtIYk8Uk/tQ4LcdOsTA6TGC1
      hDZ4luCj+5gBg8WJIrZT5NS55/CxNg/o07lAui5tGmJn6bquqtMR5tpMzK3QN9jDbErDpxS6
      UlRsRdgHutJxXIfMw1n8La0oFK7r4DhO3U6Gc4GldIE708uEAj4O7W0hGvLXuixRZVU5ApTS
      c4ylYKi/k/TkbW5Mr6DwcXqonYvXp/D7HI4+N8jcuEl7Is9DK8HQvg4U4DhrQfD56qs7c+5R
      jh/+y2UezKXw6RovH+/hB18/SdBfX3WK/7+qNcTYFQsHDcOn4zo2KytZjGCMUMBHMZfB1kPE
      IgaW6WL4FGWzQiAYqOsA/Nu7o/zo5zdwHj890ZCfP//Bq+zf3VzbwkTVKKWqMwTSfcZ6o7XS
      dBLJJztJJN60/tj/eAQRDNb/eN/5P+8Ln56viMYiH4Nu4MzgbvZ1NaEUGD6Nc4f3sKc1Xuuy
      RJVJADawuyXGn/7ROdqSEV443M2ffO2EjP8bkLyiG1BK0dEcJRry094cIR4J1LoksQ3kCCA8
      TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CsEkyD6gxSQA24DguC6k8pXKFVLZEtlCW
      EDQgCcAGUrkSIxNLmBWbTH6VkYklypZd67JElVUlAHa5wK3rHzM+n8IqZ7l2+TIff3IHy3aY
      vDPM3clFXEwymSK2tcqjVKYam91W6dwqVmWtU80F8iWTUtmqbVGi6rY+Gc51uDt8g9CegzTH
      ghTTU2jJHvp3x7GWRpk1E0TzYywm9vFopkJELeLrPFSF0rdXOOBDqSd/Nnw6hq/++xjEF7P1
      ADhlllYKOCM3KPYM0eGu8OD+DJVKPx0Vk/6jQxjzLiureSZu3SDeP8TLzWEcx8G27fWe4Hrr
      C26K+uncFUFTEPBp9LTHMDQX09zkorziS2HrAdB0EvFd7D9+hI8uf0j/qeN8oy/E8EcfUon6
      yC4ViRRyGM1N9A6dxi5Oky5aNIUNNE2r25ZIPzDU20405KerNU5vZzPqs4cE0RC2fg6gDHp7
      Wrjy/rsk23sxC2kuvv0brNAuugaOkL9zidmcRmtTkkQywuDRQZYWl74US3VqmkIptf67aDw1
      XyWyXo8AABXb4c/+8hecGujke28eq3U5osrqYpVIIWpJAiA8TQIgPE0CIDxNAiA8TQIgPE0C
      IDxNAvA7OK6L665NjZap0I1JArABq2IzOZ+hZFosZ4sspAqfu2Gu+PKTAGwgnVvl0UoJ1wWr
      4jC/nGPVrNS6LFFlEoANWBX7qWGP7bjYdn3NWBVbJwHYQCwceGr+fyRoyN2hG5AEYAOxsJ/+
      riYMn0Y8EqCvM4lPl6er0chb2gaUUsQjAfw+nWjYTyhg1LoksQ3kLU14WlWOAMszd7l6e5L2
      fYfZ3+zw3oc3Cbfs5dzRPbz7m/dxQs288MIh5ibLdDZbTGV1Bvs6qrFpIbakCk3xJpMzWc69
      /AohQ2fqk2s89/qbLN79hLmREfaee5NQ+gGpdJZCvsLoo0ccPn36cxeW6vFC02drqsf6xNZV
      oSneJp9Pc+3y+xSIsj9hEDR0DE1ntQzRsI5/xSDvVJi9f4tIdx+GtrZQtm2v3WenHpviAWz7
      8ULetoNlyS1RGtHWA6AH2N3RQlELYWcKJOM6N67eoLJa5sTBVj6+fI2AKnLw+EH2HjpFSyTD
      vaklBnpaMR43xSul6rYlUimFpmv4/bJKfCOqwl6n0TswxOLiEnt79hEP6TjBBQLxFmKRAMfd
      eWwjxq5oiEi/QzDQTqQotxYR9aE6C2UbQbr2dK//ub1rz/rj5rau9ceh0NrvsWj9vdsLb5KP
      QYWnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kANuC6LmWzgu04
      mJb9ubtEiMYgAdhA2bKZT+Wp2C6FksXDjNwYqxFJADZQXLWofOY+QKVyBbMiC2U3mqrMSy5k
      FhmfWSLS1E53a4gHdydwgjEO9HWzNPMAy99Md2ecfM4mEtJYKZok49FqbHrbaNrTi+JpSqHJ
      QnkNpyoBWJwaQ4/3EIuEKKRnyFoh9rbHMJfvc3/JIWSPEozs5+FUhYRvCbu5n2S8GlvePtGQ
      n0hw7VYomgaJx7dIEY2lCgFwyC5nWFhaJXz0OcLZNJMzBYKRAO5qgQMnT2DMT5Ar5pm4NUyi
      f5DzA7G6XygboCnix9AV4YCPaFCXvuAGVIW7QsDgudc4Zri8c/EaL505yR/0+7nx0WXKYZ1y
      xiRSLmEEYvQOPUc5N03OtIkH9LpeKBtA0x00TcMwfAQCgVqXI7ZBFfY6l4WJEe7PLNPae4hC
      ap7rI2MYiQ66Bnr56P13eBhp5XRPEjNf5kDfAGMz88T69yAjalFrWw+A0ukdPEnv4JMvvda1
      b/3xS6+/uf64ry8GwGB9n/8KD5GPQYWnSQCEp0kAhKdJAISnSQCEp0kAhKdJADbgumA7Di4u
      juM+Xiu41lWJapMAbMBxHPIlE9t2MS2bYtkCJAGNRgKwgXLFplJZm5/kui6mVcF2JACNRgLw
      BbhyBGg4EoANBHz6+rKoSin8Ph8+TZ6uRiOv6AY0TSMa9qPrCr+hEw4aINP3Gk79zUGuE0qB
      rmkoFJqmPtchJhqDHAGEp0kAhKdVZQg0d/cK18bStO89wJHdQS5+OEy4rY/nhzq59M5F7HAL
      Z08fYH66TEdThZms4kBPezU2LcSWVOEI4FJa1Tj/xps8P9TD/MQMR86/RlTlWBgdoe3EK/S3
      BVlOZyjki4zemaSrq3XrmxWiCqrSEqnrDpd/9d/4m7rpMgwiQYOg4aeQLZJI+jFKIXK2ycTt
      YWJ9Bwn7tC9FU3xlfaFsG9OUpV0bURVWinfQwk0MHmphbGaZRFJndOQepUyeI31NDF8dJeyk
      6Bk8QO/hMyQDy9yfS7N/d9P6Qtl12xS/vlC2LgtlN6it73Wazq6mGNPzaY4fP0o8CKsTE4SG
      jpFIhDhoPcAKDNESjxLqtYmE2sjkSlUoXYitq8LbriKSbONQsm39Kz39B9cfd+zdv/44Gl27
      0VRT0tj6ZoWoAvkYVHiaBEB4mgRAeJoEQHiaBEB4mgRgk6QfuDFJADbgujxZE8xd+0VC0Hgk
      ABv6bXu7JKDRSAB+BwXsbo0Rj8jaAI1KuTVe+7Ne5wK5j4c9T1PIMmGNQyml5Aiwgc/v6LLz
      N6L6etutM0r2+IYnRwDhaRIA4WlVC0AplyJbNLErJaYnJpiaXcR2HFKLsyymVnCpUCyaOLZF
      viD9AKI+VOUcwK2UuH351+R3X+Bkc4qJOZOuPX7M1AQ37mcJMIZ+bICFSYvmYIpSpJtoJFSN
      TQuxJVXpCV6cGqd1735MFOXMMosZk9bONrLzWQ6dPYExP06+kGdq9CaZ3gO82J9c7wkG6rYn
      WDS+LQfALuf56NowAUMxbaU58Y0X+GYfDF/9mEBQwynYhGwTXyDMngNHWc3NUqo4hH0Kn8+H
      67oopdB1vRr/HyG+kOpdCFuZYTgdoUtbYvjOJCrSwosn93Hx7Q8gsouzZw8yN2myp83h/oLJ
      4YPdKOr3QphofEopJVeChWfJlWDheRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFp
      EgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpVZqE7zL5yUVW4kMcbLa5/NF1Ih39nDjYwZWLF7FC
      bZw51cfCrElbk8NcxmFfd9uzf6wQ26wqR4DV7CKZXIlcucL8+AQHzlzAV15m8e4tYgMv0J2E
      pXSGlWyBu6MPaGnbVY3NCrFlVVgn2GJi+iH9/b3czILpGLRFAxRDQXLpIrsOhTEqMVYqZSZu
      3yDad4hjAf1LsVC2aHxbbom0zRIfX36PbDrFlNXOm4djZAMd5OenGNgbZzQVJWLN0dG/j6WZ
      CjF9Eaf5AL3tMekJFjVV3Z5gM8+jso/mkOLe6AjRjn66dkWZuncTK9ROf3eSbMYmHtV5lMnT
      2tIsARA1JU3xwtOkKV54ngRAeJoEQHjaJgfeLhXLwnFB0334dMmNaAybCsDy+A3+6acXicSi
      DJ5+gzNDXdtdlxA7YlMB0NDoO3qG5wb3EoomtrsmIXbMpsYyRqIJ59EEv3n7XSbms9tdkxA7
      ZlNHAJ+myOaylMoWFSO43TUJsWM2dQRIzU7RNvgy3//OeW5dub/dNQmxYzYVgPZ9gxQmL/Oj
      f/2IC68d2e6ahNgxzxwClYspJqeW6Nqzj1bALhWgyb8DpQmx/Z55BNB1PwHdxXIUhg+KRXMn
      6hJiRzx7CKRgamSY2fQqAT3H7dGFHShLiJ3xzCGQ61isZFdYUT6WY628/trhnahLiB2xqenQ
      mbkHzJejDHQ6XLltcebU3s9816VczJMrlonEkwR0h3Qqi+vz05yIU8ylsfUQ8agfy3QxfIqy
      ZRMMrJ1HyHRoUStKKbWpva5SyjL8yTiVhSKzq4NPf9N1WJiZIlVYJbs6w6n+IFeH03TsaSdC
      hkvXZ/BpNseeH2Ru3KQ1kiXja2egW/qCRe1tKgC7eo9wsnST5UIzX72w/+lvKp32znaWbt4h
      2dyNmZ3D1HUisTgrs1MMvvQigcVxcrkc82P3yXbu5tzzu9bf+T/tCa5xX47wqE0FIJeaYfj6
      bXKZaRZp5Vtnu59803UxQnH6D+xndHyB5PETvNRa4u7IKPgVmgU+10ZTBs0d3ZRX01iuS+Dx
      4tifNsPLQtmiFr7QwNuIJwna9tNfdG1W8iUSzc105MvkshmCyRa69nTR2pJgIZUGzc+u5jZC
      uk002E4+VyaYWJtSoZRCKYWmyRRrsfOecRLs8nDyHuML6fWvtPcM0NuRrFoBchIsamVTPcE+
      w09xcYrxhRWC9gIfDi/uRG1C7IhnBEDR3NXLqVODpGcnuPdgGs0vY3XRODZ1HcB1bGYf3OJB
      Cl54/ih+XVWtABkCiVrZ9G1RMtO3+MUHI5jz1/j5pcntrkuIHbOpADi2jS8QJh4LYluV7a5J
      iB2zqXFHINHBkQPgC0T4vYH+7a5JiB2zuQ/f7SL3xmZIJKKUV8vbXJIQO2dTAVC+AE0hjU9u
      XGNmKbfdNQmxY54xBHJJz4zwk/96j2Dbfr791qsEfXLFVjSOZ+7NNy9e56Vvf5c9TprpTHEn
      ahJixzzzJNgqZ/iPf/hbVhfm4d4EF978Q1492bMDpYnt8NRlHwWK6l3T+TKS9QE85Le91Ep5
      NwCyPoAHmZUylybeY2FlDgAXb/dhSAA8pmgV+cdrP+bu0mitS6kLVQiAi12pUC6XsR93dlmm
      ScVee1yxTKyKjcuTzi/blhUha8WyrbXXyLZwXMfz5wBbH3i7DuMjN5hNreAEWjjZ7efSrWn0
      YILzJ3bz9ns3UX4/5146wvSDMp2JPAuVJIf72qtQvvgiynaZuZVZTNtkITfPymqWZKjJ2+cB
      1TgJNotZxh6MUdASxM0M7cdPsTA6jF4oEjh2lsDDMUp+jfHhOfyJKKdPH0f/zBHBcRzpCNsB
      d5Zu86MP/5rZ7AxBI8RXD73FNw9/G59m1Lq0mjAMY3N3hXgWpfuIxJOspIooXFwXXEApcJxP
      T7QUhj+AY5ZxXNDVk08gPm2LFNvr0uRFZrLTAJSsIu+Pvc0r/V+hJdJa48pqZ+sBsE1u37jK
      w+wqKtLGoX0J3vn5zwglOjh/ch+/+uVPUaEYL144Qq7FT3ebxa07k5wY7EFTCsdxUI8b5MX2
      cpyn+7ltV577/wVRtPMKriahLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='gif group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      cQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map点' width='192'>
      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
      BKUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='milk' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='rank' width='192'>
      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
      cOri8/mE/wW9pMjeKfejTQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='仪表板 1' width='192'>
      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
      gwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='德国' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5 (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
