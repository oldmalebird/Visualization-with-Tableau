<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='FAO' inline='true' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FAO' name='textscan.0cbagav12h7cdy1d4j6ey1bx4577'>
            <connection class='textscan' directory='D:/Github/Visualization_with_Tableau/VizChallenge5' filename='FAO.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Area&amp;Continent' name='excel-direct.17ypuc609xqdst1amx3001vp16xe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Github/Visualization_with_Tableau/VizChallenge5/Area&amp;Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FAO.csv].[Area]' />
              <expression op='[FAO Area].[Area]' />
            </expression>
          </clause>
          <relation name='数据透视表' type='pivot'>
            <columns>
              <column datatype='string' name='数据透视表字段名称' />
              <column datatype='integer' name='数据透视表字段值' />
            </columns>
            <tag name='数据透视表字段名称'>
              <value name='[Y1961]' />
              <value name='[Y1962]' />
              <value name='[Y1963]' />
              <value name='[Y1964]' />
              <value name='[Y1965]' />
              <value name='[Y1966]' />
              <value name='[Y1967]' />
              <value name='[Y1968]' />
              <value name='[Y1969]' />
              <value name='[Y1970]' />
              <value name='[Y1971]' />
              <value name='[Y1972]' />
              <value name='[Y1973]' />
              <value name='[Y1974]' />
              <value name='[Y1975]' />
              <value name='[Y1976]' />
              <value name='[Y1977]' />
              <value name='[Y1978]' />
              <value name='[Y1979]' />
              <value name='[Y1980]' />
              <value name='[Y1981]' />
              <value name='[Y1982]' />
              <value name='[Y1983]' />
              <value name='[Y1984]' />
              <value name='[Y1985]' />
              <value name='[Y1986]' />
              <value name='[Y1987]' />
              <value name='[Y1988]' />
              <value name='[Y1989]' />
              <value name='[Y1990]' />
              <value name='[Y1991]' />
              <value name='[Y1992]' />
              <value name='[Y1993]' />
              <value name='[Y1994]' />
              <value name='[Y1995]' />
              <value name='[Y1996]' />
              <value name='[Y1997]' />
              <value name='[Y1998]' />
              <value name='[Y1999]' />
              <value name='[Y2000]' />
              <value name='[Y2001]' />
              <value name='[Y2002]' />
              <value name='[Y2003]' />
              <value name='[Y2004]' />
              <value name='[Y2005]' />
              <value name='[Y2006]' />
              <value name='[Y2007]' />
              <value name='[Y2008]' />
              <value name='[Y2009]' />
              <value name='[Y2010]' />
              <value name='[Y2011]' />
              <value name='[Y2012]' />
              <value name='[Y2013]' />
            </tag>
            <groups>
              <group name='数据透视表字段值'>
                <field name='[FAO.csv].[Y1961]' />
                <field name='[FAO.csv].[Y1962]' />
                <field name='[FAO.csv].[Y1963]' />
                <field name='[FAO.csv].[Y1964]' />
                <field name='[FAO.csv].[Y1965]' />
                <field name='[FAO.csv].[Y1966]' />
                <field name='[FAO.csv].[Y1967]' />
                <field name='[FAO.csv].[Y1968]' />
                <field name='[FAO.csv].[Y1969]' />
                <field name='[FAO.csv].[Y1970]' />
                <field name='[FAO.csv].[Y1971]' />
                <field name='[FAO.csv].[Y1972]' />
                <field name='[FAO.csv].[Y1973]' />
                <field name='[FAO.csv].[Y1974]' />
                <field name='[FAO.csv].[Y1975]' />
                <field name='[FAO.csv].[Y1976]' />
                <field name='[FAO.csv].[Y1977]' />
                <field name='[FAO.csv].[Y1978]' />
                <field name='[FAO.csv].[Y1979]' />
                <field name='[FAO.csv].[Y1980]' />
                <field name='[FAO.csv].[Y1981]' />
                <field name='[FAO.csv].[Y1982]' />
                <field name='[FAO.csv].[Y1983]' />
                <field name='[FAO.csv].[Y1984]' />
                <field name='[FAO.csv].[Y1985]' />
                <field name='[FAO.csv].[Y1986]' />
                <field name='[FAO.csv].[Y1987]' />
                <field name='[FAO.csv].[Y1988]' />
                <field name='[FAO.csv].[Y1989]' />
                <field name='[FAO.csv].[Y1990]' />
                <field name='[FAO.csv].[Y1991]' />
                <field name='[FAO.csv].[Y1992]' />
                <field name='[FAO.csv].[Y1993]' />
                <field name='[FAO.csv].[Y1994]' />
                <field name='[FAO.csv].[Y1995]' />
                <field name='[FAO.csv].[Y1996]' />
                <field name='[FAO.csv].[Y1997]' />
                <field name='[FAO.csv].[Y1998]' />
                <field name='[FAO.csv].[Y1999]' />
                <field name='[FAO.csv].[Y2000]' />
                <field name='[FAO.csv].[Y2001]' />
                <field name='[FAO.csv].[Y2002]' />
                <field name='[FAO.csv].[Y2003]' />
                <field name='[FAO.csv].[Y2004]' />
                <field name='[FAO.csv].[Y2005]' />
                <field name='[FAO.csv].[Y2006]' />
                <field name='[FAO.csv].[Y2007]' />
                <field name='[FAO.csv].[Y2008]' />
                <field name='[FAO.csv].[Y2009]' />
                <field name='[FAO.csv].[Y2010]' />
                <field name='[FAO.csv].[Y2011]' />
                <field name='[FAO.csv].[Y2012]' />
                <field name='[FAO.csv].[Y2013]' />
              </group>
            </groups>
            <relation connection='textscan.0cbagav12h7cdy1d4j6ey1bx4577' name='FAO.csv' table='[FAO#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                <column datatype='string' name='Area Abbreviation' ordinal='0' />
                <column datatype='integer' name='Area Code' ordinal='1' />
                <column datatype='string' name='Area' ordinal='2' />
                <column datatype='integer' name='Item Code' ordinal='3' />
                <column datatype='string' name='Item' ordinal='4' />
                <column datatype='integer' name='Element Code' ordinal='5' />
                <column datatype='string' name='Element' ordinal='6' />
                <column datatype='string' name='Unit' ordinal='7' />
                <column datatype='real' name='latitude' ordinal='8' />
                <column datatype='real' name='longitude' ordinal='9' />
                <column datatype='integer' name='Y1961' ordinal='10' />
                <column datatype='integer' name='Y1962' ordinal='11' />
                <column datatype='integer' name='Y1963' ordinal='12' />
                <column datatype='integer' name='Y1964' ordinal='13' />
                <column datatype='integer' name='Y1965' ordinal='14' />
                <column datatype='integer' name='Y1966' ordinal='15' />
                <column datatype='integer' name='Y1967' ordinal='16' />
                <column datatype='integer' name='Y1968' ordinal='17' />
                <column datatype='integer' name='Y1969' ordinal='18' />
                <column datatype='integer' name='Y1970' ordinal='19' />
                <column datatype='integer' name='Y1971' ordinal='20' />
                <column datatype='integer' name='Y1972' ordinal='21' />
                <column datatype='integer' name='Y1973' ordinal='22' />
                <column datatype='integer' name='Y1974' ordinal='23' />
                <column datatype='integer' name='Y1975' ordinal='24' />
                <column datatype='integer' name='Y1976' ordinal='25' />
                <column datatype='integer' name='Y1977' ordinal='26' />
                <column datatype='integer' name='Y1978' ordinal='27' />
                <column datatype='integer' name='Y1979' ordinal='28' />
                <column datatype='integer' name='Y1980' ordinal='29' />
                <column datatype='integer' name='Y1981' ordinal='30' />
                <column datatype='integer' name='Y1982' ordinal='31' />
                <column datatype='integer' name='Y1983' ordinal='32' />
                <column datatype='integer' name='Y1984' ordinal='33' />
                <column datatype='integer' name='Y1985' ordinal='34' />
                <column datatype='integer' name='Y1986' ordinal='35' />
                <column datatype='integer' name='Y1987' ordinal='36' />
                <column datatype='integer' name='Y1988' ordinal='37' />
                <column datatype='integer' name='Y1989' ordinal='38' />
                <column datatype='integer' name='Y1990' ordinal='39' />
                <column datatype='integer' name='Y1991' ordinal='40' />
                <column datatype='integer' name='Y1992' ordinal='41' />
                <column datatype='integer' name='Y1993' ordinal='42' />
                <column datatype='integer' name='Y1994' ordinal='43' />
                <column datatype='integer' name='Y1995' ordinal='44' />
                <column datatype='integer' name='Y1996' ordinal='45' />
                <column datatype='integer' name='Y1997' ordinal='46' />
                <column datatype='integer' name='Y1998' ordinal='47' />
                <column datatype='integer' name='Y1999' ordinal='48' />
                <column datatype='integer' name='Y2000' ordinal='49' />
                <column datatype='integer' name='Y2001' ordinal='50' />
                <column datatype='integer' name='Y2002' ordinal='51' />
                <column datatype='integer' name='Y2003' ordinal='52' />
                <column datatype='integer' name='Y2004' ordinal='53' />
                <column datatype='integer' name='Y2005' ordinal='54' />
                <column datatype='integer' name='Y2006' ordinal='55' />
                <column datatype='integer' name='Y2007' ordinal='56' />
                <column datatype='integer' name='Y2008' ordinal='57' />
                <column datatype='integer' name='Y2009' ordinal='58' />
                <column datatype='integer' name='Y2010' ordinal='59' />
                <column datatype='integer' name='Y2011' ordinal='60' />
                <column datatype='integer' name='Y2012' ordinal='61' />
                <column datatype='integer' name='Y2013' ordinal='62' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.17ypuc609xqdst1amx3001vp16xe' name='FAO Area' table='[&apos;FAO Area$&apos;]' type='table'>
            <columns gridOrigin='A1:B175:no:A1:B175:0' header='yes' outcome='6'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Area (FAO Area)]' value='[FAO Area].[Area]' />
          <map key='[Area Abbreviation]' value='[FAO.csv].[Area Abbreviation]' />
          <map key='[Area Code]' value='[FAO.csv].[Area Code]' />
          <map key='[Area]' value='[FAO.csv].[Area]' />
          <map key='[Continent]' value='[FAO Area].[Continent]' />
          <map key='[Element Code]' value='[FAO.csv].[Element Code]' />
          <map key='[Element]' value='[FAO.csv].[Element]' />
          <map key='[Item Code]' value='[FAO.csv].[Item Code]' />
          <map key='[Item]' value='[FAO.csv].[Item]' />
          <map key='[Unit]' value='[FAO.csv].[Unit]' />
          <map key='[latitude]' value='[FAO.csv].[latitude]' />
          <map key='[longitude]' value='[FAO.csv].[longitude]' />
          <map key='[数据透视表字段值]' value='[数据透视表].[数据透视表字段值]' />
          <map key='[数据透视表字段名称]' value='[数据透视表].[数据透视表字段名称]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Abbreviation]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Abbreviation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Element Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Element]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段名称</remote-name>
            <remote-type>129</remote-type>
            <local-name>[数据透视表字段名称]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段名称</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段值</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数据透视表字段值]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段值</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (FAO Area)]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B175:no:A1:B175:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[Area (FAO Area)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Element Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Element]' role='dimension' type='nominal' />
      <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Item]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Alcoholic Beverages&quot;</value>
            <value>&quot;Beer&quot;</value>
            <value>&quot;Beverages, Alcoholic&quot;</value>
            <value>&quot;Beverages, Fermented&quot;</value>
            <value>&quot;Coffee and products&quot;</value>
            <value>&quot;Stimulants&quot;</value>
            <value>&quot;Tea (including mate)&quot;</value>
            <value>&quot;Wine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats and oil&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Butter, Ghee&quot;</value>
            <value>&quot;Coconut Oil&quot;</value>
            <value>&quot;Cottonseed Oil&quot;</value>
            <value>&quot;Cream&quot;</value>
            <value>&quot;Fats, Animals, Raw&quot;</value>
            <value>&quot;Fish, Body Oil&quot;</value>
            <value>&quot;Fish, Liver Oil&quot;</value>
            <value>&quot;Groundnut Oil&quot;</value>
            <value>&quot;Maize Germ Oil&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Oilcrops Oil, Other&quot;</value>
            <value>&quot;Oilcrops, Other&quot;</value>
            <value>&quot;Olive Oil&quot;</value>
            <value>&quot;Palm Oil&quot;</value>
            <value>&quot;Palmkernel Oil&quot;</value>
            <value>&quot;Rape and Mustard Oil&quot;</value>
            <value>&quot;Ricebran Oil&quot;</value>
            <value>&quot;Sesameseed Oil&quot;</value>
            <value>&quot;Soyabean Oil&quot;</value>
            <value>&quot;Sunflowerseed Oil&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
            <value>&quot;Aquatic Animals, Others&quot;</value>
            <value>&quot;Aquatic Products, Other&quot;</value>
            <value>&quot;Cephalopods&quot;</value>
            <value>&quot;Crustaceans&quot;</value>
            <value>&quot;Demersal Fish&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Freshwater Fish&quot;</value>
            <value>&quot;Marine Fish, Other&quot;</value>
            <value>&quot;Molluscs, Other&quot;</value>
            <value>&quot;Pelagic Fish&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruits&quot;'>
            <value>&quot;Apples and products&quot;</value>
            <value>&quot;Bananas&quot;</value>
            <value>&quot;Citrus, Other&quot;</value>
            <value>&quot;Coconuts - Incl Copra&quot;</value>
            <value>&quot;Dates&quot;</value>
            <value>&quot;Fruits - Excluding Wine&quot;</value>
            <value>&quot;Fruits, Other&quot;</value>
            <value>&quot;Grapefruit and products&quot;</value>
            <value>&quot;Grapes and products (excl wine)&quot;</value>
            <value>&quot;Lemons, Limes and products&quot;</value>
            <value>&quot;Olives (including preserved)&quot;</value>
            <value>&quot;Oranges, Mandarines&quot;</value>
            <value>&quot;Pineapples and products&quot;</value>
            <value>&quot;Plantains&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains, Roots&quot;'>
            <value>&quot;Barley and products&quot;</value>
            <value>&quot;Cassava and products&quot;</value>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Cereals, Other&quot;</value>
            <value>&quot;Maize and products&quot;</value>
            <value>&quot;Millet and products&quot;</value>
            <value>&quot;Oats&quot;</value>
            <value>&quot;Potatoes and products&quot;</value>
            <value>&quot;Rice (Milled Equivalent)&quot;</value>
            <value>&quot;Roots, Other&quot;</value>
            <value>&quot;Rye and products&quot;</value>
            <value>&quot;Sorghum and products&quot;</value>
            <value>&quot;Soyabeans&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sweet potatoes&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
            <value>&quot;Yams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bovine Meat&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Meat, Aquatic Mammals&quot;</value>
            <value>&quot;Meat, Other&quot;</value>
            <value>&quot;Mutton &amp; Goat Meat&quot;</value>
            <value>&quot;Pigmeat&quot;</value>
            <value>&quot;Poultry Meat&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Infant food&quot;</value>
            <value>&quot;Miscellaneous&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Offals, Edible&quot;</value>
            <value>&quot;Pulses&quot;</value>
            <value>&quot;Pulses, Other and products&quot;</value>
            <value>&quot;Spices&quot;</value>
            <value>&quot;Spices, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seed, nuts&quot;'>
            <value>&quot;Cloves&quot;</value>
            <value>&quot;Cocoa Beans and products&quot;</value>
            <value>&quot;Cottonseed&quot;</value>
            <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Palm kernels&quot;</value>
            <value>&quot;Rape and Mustardseed&quot;</value>
            <value>&quot;Sesame seed&quot;</value>
            <value>&quot;Sunflower seed&quot;</value>
            <value>&quot;Treenuts&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Suger&quot;'>
            <value>&quot;Sugar (Raw Equivalent)&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar beet&quot;</value>
            <value>&quot;Sugar cane&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
            <value>&quot;Sugar non-centrifugal&quot;</value>
            <value>&quot;Sweeteners, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vegetables&quot;'>
            <value>&quot;Aquatic Plants&quot;</value>
            <value>&quot;Beans&quot;</value>
            <value>&quot;Honey&quot;</value>
            <value>&quot;Onions&quot;</value>
            <value>&quot;Peas&quot;</value>
            <value>&quot;Pepper&quot;</value>
            <value>&quot;Pimento&quot;</value>
            <value>&quot;Tomatoes and products&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Vegetables, Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Unit]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
        <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
      </column>
      <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
      <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <group caption='工具提示(Area)' hidden='true' name='[Tooltip (Area)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area, Area Code'>
          <field>[Area]</field>
          <field>[Area Code]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.410458' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.256209' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bovine Meat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spices, Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vegetables, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groundnut Oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Offals, Edible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops Oil, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages, Alcoholic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poultry Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rape and Mustard Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rye and products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweeteners, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treenuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aquatic Plants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocoa Beans and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pimento&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter, Ghee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Potatoes and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apples and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barley and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottonseed Oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Infant food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mutton &amp; Goat Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pulses, Other and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sesameseed Oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demersal Fish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapes and products (excl wine)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelagic Fish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquatic Animals, Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts - Incl Copra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemons, Limes and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maize and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olives (including preserved)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pigmeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Fermented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fats, Animals, Raw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassava and products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges, Mandarines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rape and Mustardseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aquatic Products, Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rice (Milled Equivalent)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflowerseed Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Groundnuts (Shelled Eq)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize Germ Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat, Aquatic Mammals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tomatoes and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cereals, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapefruit and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Fish, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmkernel Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sugar (Raw Equivalent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fruits, Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soyabeans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coffee and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fish, Liver Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar non-centrifugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshwater Fish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soyabean Oil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tea (including mate)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cephalopods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ricebran Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roots, Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Citrus, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crustaceans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oilcrops, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sorghum and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coconut Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fish, Body Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pineapples and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molluscs, Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Oil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Item (组)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fats and oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains, Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fish, Aquatic Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seed, nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Element:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Feed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C�te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1961'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' />
              <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='255'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#1b1b1b'>In 1961, </run>
              <run fontalignment='0'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]&gt; countries produced </run>
              <run fontalignment='0' fontcolor='#787878'>Æ </run>
              <run fontalignment='0'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]&gt; food and feed.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.19943302622253717'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.88107725017717919'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='137' y='150' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='1992list'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='1991' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='245'>
            <formatted-text>
              <run fontalignment='0'>In 2013, &lt;</run>
              <run fontalignment='0'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</run>
              <run fontalignment='0'>&gt; countries produced &lt;</run>
              <run fontalignment='0'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</run>
              <run fontalignment='0'>&gt; food and feed.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.20240963855421684'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.83642806520198421'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='133' y='184' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Country1992'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area)]'>
            <groupfilter function='level-members' level='[Area]' user:ui-action-filter='[Action - Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1985' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1986' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1987' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1988' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1989' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1990' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1991' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1993' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1994' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='CountryLine'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='100000' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='GroupTop5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='ItemTop5 '>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rank各国各item'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:7]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Beer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='5' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='6' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='7' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='8' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='9' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='feed 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed总量'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food-area,item group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='food-item,area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='foodfeed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1992' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='food肉蛋'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Item (组)]' member='&quot;Eggs&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Fish, Aquatic Animals&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Meat&quot;' />
              <groupfilter function='member' level='[Item (组)]' member='&quot;Milk - Excluding Butter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='gif area'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='33' lines='true' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='gif continent  food'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif continent feed'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' lines='true' mark-type='all' size='5' start='49' />
      </table>
    </worksheet>
    <worksheet name='gif group'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-transparency' value='173' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='gif pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='level-members' level='[none:数据透视表字段名称 - 拆分 1:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <geometry column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Latitude (generated)]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='map点'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Area:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]' field-type='quantitative' max='20839916.792512849' min='-16930134.084558219' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]' field-type='quantitative' max='13219745.985721063' min='-8241024.1087532481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='milk'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Milk - Excluding Butter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcdf:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;China, mainland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='rank2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' member-value='2013' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' num-steps='5' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' num-steps='5' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='工作表 27'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' value='228' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='德国'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='洲Top5 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='仪表板 1'>
      <style />
      <size maxheight='1027' maxwidth='1569' minheight='1027' minwidth='1569' preset-index='15' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Item]' new-bin='true'>
            <bin default-name='false' value='&quot;Beverages&quot;'>
              <value>&quot;Alcoholic Beverages&quot;</value>
              <value>&quot;Beer&quot;</value>
              <value>&quot;Beverages, Alcoholic&quot;</value>
              <value>&quot;Beverages, Fermented&quot;</value>
              <value>&quot;Coffee and products&quot;</value>
              <value>&quot;Stimulants&quot;</value>
              <value>&quot;Tea (including mate)&quot;</value>
              <value>&quot;Wine&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fats and oil&quot;'>
              <value>&quot;Animal fats&quot;</value>
              <value>&quot;Butter, Ghee&quot;</value>
              <value>&quot;Coconut Oil&quot;</value>
              <value>&quot;Cottonseed Oil&quot;</value>
              <value>&quot;Cream&quot;</value>
              <value>&quot;Fats, Animals, Raw&quot;</value>
              <value>&quot;Fish, Body Oil&quot;</value>
              <value>&quot;Fish, Liver Oil&quot;</value>
              <value>&quot;Groundnut Oil&quot;</value>
              <value>&quot;Maize Germ Oil&quot;</value>
              <value>&quot;Oilcrops&quot;</value>
              <value>&quot;Oilcrops Oil, Other&quot;</value>
              <value>&quot;Oilcrops, Other&quot;</value>
              <value>&quot;Olive Oil&quot;</value>
              <value>&quot;Palm Oil&quot;</value>
              <value>&quot;Palmkernel Oil&quot;</value>
              <value>&quot;Rape and Mustard Oil&quot;</value>
              <value>&quot;Ricebran Oil&quot;</value>
              <value>&quot;Sesameseed Oil&quot;</value>
              <value>&quot;Soyabean Oil&quot;</value>
              <value>&quot;Sunflowerseed Oil&quot;</value>
              <value>&quot;Vegetable Oils&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
              <value>&quot;Aquatic Animals, Others&quot;</value>
              <value>&quot;Aquatic Products, Other&quot;</value>
              <value>&quot;Cephalopods&quot;</value>
              <value>&quot;Crustaceans&quot;</value>
              <value>&quot;Demersal Fish&quot;</value>
              <value>&quot;Fish, Seafood&quot;</value>
              <value>&quot;Freshwater Fish&quot;</value>
              <value>&quot;Marine Fish, Other&quot;</value>
              <value>&quot;Molluscs, Other&quot;</value>
              <value>&quot;Pelagic Fish&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Fruits&quot;'>
              <value>&quot;Apples and products&quot;</value>
              <value>&quot;Bananas&quot;</value>
              <value>&quot;Citrus, Other&quot;</value>
              <value>&quot;Coconuts - Incl Copra&quot;</value>
              <value>&quot;Dates&quot;</value>
              <value>&quot;Fruits - Excluding Wine&quot;</value>
              <value>&quot;Fruits, Other&quot;</value>
              <value>&quot;Grapefruit and products&quot;</value>
              <value>&quot;Grapes and products (excl wine)&quot;</value>
              <value>&quot;Lemons, Limes and products&quot;</value>
              <value>&quot;Olives (including preserved)&quot;</value>
              <value>&quot;Oranges, Mandarines&quot;</value>
              <value>&quot;Pineapples and products&quot;</value>
              <value>&quot;Plantains&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Grains, Roots&quot;'>
              <value>&quot;Barley and products&quot;</value>
              <value>&quot;Cassava and products&quot;</value>
              <value>&quot;Cereals - Excluding Beer&quot;</value>
              <value>&quot;Cereals, Other&quot;</value>
              <value>&quot;Maize and products&quot;</value>
              <value>&quot;Millet and products&quot;</value>
              <value>&quot;Oats&quot;</value>
              <value>&quot;Potatoes and products&quot;</value>
              <value>&quot;Rice (Milled Equivalent)&quot;</value>
              <value>&quot;Roots, Other&quot;</value>
              <value>&quot;Rye and products&quot;</value>
              <value>&quot;Sorghum and products&quot;</value>
              <value>&quot;Soyabeans&quot;</value>
              <value>&quot;Starchy Roots&quot;</value>
              <value>&quot;Sweet potatoes&quot;</value>
              <value>&quot;Wheat and products&quot;</value>
              <value>&quot;Yams&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Meat&quot;'>
              <value>&quot;Bovine Meat&quot;</value>
              <value>&quot;Meat&quot;</value>
              <value>&quot;Meat, Aquatic Mammals&quot;</value>
              <value>&quot;Meat, Other&quot;</value>
              <value>&quot;Mutton &amp; Goat Meat&quot;</value>
              <value>&quot;Pigmeat&quot;</value>
              <value>&quot;Poultry Meat&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;Infant food&quot;</value>
              <value>&quot;Miscellaneous&quot;</value>
              <value>&quot;Offals&quot;</value>
              <value>&quot;Offals, Edible&quot;</value>
              <value>&quot;Pulses&quot;</value>
              <value>&quot;Pulses, Other and products&quot;</value>
              <value>&quot;Spices&quot;</value>
              <value>&quot;Spices, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Seed, nuts&quot;'>
              <value>&quot;Cloves&quot;</value>
              <value>&quot;Cocoa Beans and products&quot;</value>
              <value>&quot;Cottonseed&quot;</value>
              <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
              <value>&quot;Nuts and products&quot;</value>
              <value>&quot;Palm kernels&quot;</value>
              <value>&quot;Rape and Mustardseed&quot;</value>
              <value>&quot;Sesame seed&quot;</value>
              <value>&quot;Sunflower seed&quot;</value>
              <value>&quot;Treenuts&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Suger&quot;'>
              <value>&quot;Sugar (Raw Equivalent)&quot;</value>
              <value>&quot;Sugar &amp; Sweeteners&quot;</value>
              <value>&quot;Sugar beet&quot;</value>
              <value>&quot;Sugar cane&quot;</value>
              <value>&quot;Sugar Crops&quot;</value>
              <value>&quot;Sugar non-centrifugal&quot;</value>
              <value>&quot;Sweeteners, Other&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vegetables&quot;'>
              <value>&quot;Aquatic Plants&quot;</value>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Honey&quot;</value>
              <value>&quot;Onions&quot;</value>
              <value>&quot;Peas&quot;</value>
              <value>&quot;Pepper&quot;</value>
              <value>&quot;Pimento&quot;</value>
              <value>&quot;Tomatoes and products&quot;</value>
              <value>&quot;Vegetables&quot;</value>
              <value>&quot;Vegetables, Other&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98442' id='5' param='horz' type='layout-flow' w='98980' x='510' y='779'>
            <zone h='98442' id='3' type='layout-basic' w='88782' x='510' y='779'>
              <zone h='49221' id='7' name='feed总量' w='88782' x='510' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49221' id='9' name='food肉蛋' w='88782' x='510' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98442' id='4' is-fixed='true' param='vert' type='layout-flow' w='10198' x='89292' y='779'>
              <zone h='8666' id='8' name='feed总量' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27167' id='10' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' w='10198' x='89292' y='9445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8666' id='11' name='food肉蛋' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='10198' x='89292' y='36612'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='仪表板 2'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='13' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='11' param='horz' type='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='5' param='horz' type='layout-flow' w='99032' x='484' y='684'>
              <zone h='98632' id='3' type='layout-basic' w='99032' x='484' y='684'>
                <zone h='70231' id='1' name='1961' w='49516' x='484' y='29085'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98632' id='8' name='2013' w='49516' x='50000' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28401' id='9' name='foodfeed' w='49516' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4962' id='14' name='foodfeed' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' w='8464' x='6953' y='5902' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='1961'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='foodfeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-item,area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food-area,item group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Country1992'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1992list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CountryLine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='gif area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent feed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif continent  food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='milk'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='洲Top5 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GroupTop5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ItemTop5 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]' show-morefewerbutton='false' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcdf:sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='德国'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rank各国各item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:11]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food肉蛋'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='feed总量'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='仪表板 1'>
      <viewpoints>
        <viewpoint name='feed总量' />
        <viewpoint name='food肉蛋' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='仪表板 2'>
      <viewpoints>
        <viewpoint name='1961'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2013'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='foodfeed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='工作表 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1961' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='1992list' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2013' width='192'>
      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
      SURBVKdL9P8BgDSPfUADbgkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country1992' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMZ0lEQVR4nO3dy29cVx0H8O8593r8imMnHsfOywl9hbQNCFJSKhBiA+xAqtQtexD/AFs2
      LBA7hMQOFgghJIRAqKCCVFWUtqjQJq2b1nnZiRPbmfEj47E9tu89h4XrmbkTG3zOnPFjft+P
      FKmufH5zHvP1nRl7fqOstRZEAimllN7vSRDtJwaARIv3ewL0f1iLtY0NaAXEcQeUUvs9o7bC
      ABx4Bm+8/jpynZ24+MyTSFQH5otzODd6EotL6zh1ahgRM+FN8UnwwVe48S4+XMlj5uprONLT
      h9LqCvqP9KLvqa/ga8+fAS8KfpRSigE4BJLleRTWurA8ewOrawZLqxWMDA2i/+QTGOzlRdzX
      ngRgqzwfu9JBsycvg/ICQwcZXwYl0RgAEo0BINEYABKNASDRGAASjQEg0RgAEo2/R6dDb2yi
      gMLC8q6/vzMX4aXnzgJgAKgN/Pmtcbz5wb1df3++v6caAD4EItEYABKND4FoX/1nfBp/fPMT
      pzE/ePkK8v09QW4/TACsxYN7E+gaGEZSKWMofwwPi0sYPnE8SHlqX8VHK3jvxozTmMp6Euz2
      wwTAVFBYKKNzDVgq3IfZOIv7i+sYyg/AGAOA7weg7W3dP1zHpGla/dr9T+5tdXyQAJg0hYpi
      pMkG8vljuDtbwvH+Xiilqv+ItuNz32i8Tyn41QACBUDnenF6+BhyvcfQGQPDiYGOdCYADAFt
      xzcAWte9fuNcojY+0JNghcGhkepXuVyYqnSwPSpX8PM/vOs05htfegIvXDjVohm546tA5G1t
      I8XbH005jbn05IkWzcYPfw9AojEAJBoDQKIxACQaA0CiMQAkGgNAojEAJBoDQKIxACQaA0Ci
      MQAkGgNAojEAJBoDQKIxACQaA0CiMQAkWpiuEMk6btwYR8XmkK4u4dJnz+Pq7Xm8cOnpEOWJ
      WiZMV4g4h9MjQ1hRfSje+QCf3FvAkW6d6d/CrhDtp743z26Z1CBJao2tfPoCpWmaqeHaF8ha
      Wx0f7E3x5TWL4ZEeqJNnML+0hr7e7mrrCbZFaU9RFDmP0ZFGHNfudpn2Jg63W1/D9b6llKqO
      DxaAkZHNtihDI6dR1yGF6EDjk2ASjX2BBPvpb99C8dHKrr//4rk8vvutz7dwRnuPATikVtc2
      sJ7s/kmogsLR3s7M/7s5NYcHc+Vd1+jt6tj19x4WDMAh9au/XMWr79zc9ffn4gi/+9ErLZzR
      4cTnACQarwD7IEkNfvnq+05jvvD0CC4foKay7YIB2AfGWPzpn+NOY7o7YwagBfgQiETjFcDD
      VKHk9DlVXR0xzpw42sIZkS9xAZiYWcTE9KLTmK9+bhRxVLtY/uz3/8L1yeKuxz9z5jh+8v1v
      Ot0m7Q1xAXh7bAq/+fuHTmOuXDydCQC1D54qicYAkGgMAIl2qJ4D3Lo/jx//+h9OY773nRf4
      +jnt6FAFYCM1KCzu/q8Xgc1PMiTaCR8CkWh7egX44S/+5vQT+aXnz+KVrz/bwhmRdHsagNvT
      i06/QX3qzPEWzoYo4EOghcI0Hs6XMFcsAjZBobgQqjRRy4S5AiSruHl3FhcuXMDH164hPT+K
      uwsV5AcHYIzx7ghhrc203vBpodFYw7WFxtbt+rQAqd4m0PQ6TMM6Nqu6zaJxDe470fw6rGnB
      eTiXqM0h0EMgi444xuTdSeQHBzAxU8Lx/h4AtZYVPiFQyLZTUfALUua2fUqo5vsaNTuHxr3w
      KRKiNc2B2MvH9sKjxqfjwwQg7sG500NQnX3ozmmc2EgRRbraD8i7L5DK9o1R2u/QMzU8Tk0r
      7dW/pnab2XVo5f5TTym/Hjr1s2gc73MXyq7DfT6PnYfPD0bdsBbnErXxwZ4EH8sPV/+7s/N/
      fCPRAcLfA5BoDACJxgCQaAwAicYAkGgMAInGAJBoDACJxgCQaAwAicYAkGgMAInGAJBoDACJ
      xgCQaAwAicYAkGgMAInGAJBowQJwe3wMD2bnMTk5AZus4PbkdKjSRC0T6E3xG5grlvCZE6OY
      uXMfsMBSJcn0b9l8979bNwRrLJKk1knOpzePMSZTw1j3XjZJmiBJ6loPOPaysUBmDkmAdbj3
      08nu5da8nCrYAOeRNpyHR2+hNE2b2ov6dYQJQAoMDufx4ME0BocGMTtXwvGBI9XWE7W2KG79
      K5RWiOPaFKMocp6a1jpTw6eVRxzFmRpwbOWhgMx4Yz1aszSsw72dSHYvt+blVEEFOI+o4Tw8
      Wr1EUdTUXtSvI0wAdIzR0fNQUQQF4GyQokStFyYASiHu6AhSimgv8VUgEo0BINEYABJthwAk
      eOO1v+Kdf38A9xepiA6PHa8Aa2trezkPon2xQwAUenq6UF52+0RGosNmxytAagAYfsQotbdt
      fw8wNzOLjq5O6Lh7r+dDtKe2vQLkOoHSUgq7XvH6HCmiw2LbAERxjI2NFP0D/Xs9H6I9tW0A
      evryGOyPsFhe9vxYOqLDYYcnwRZ9fUdRXirzIRC1tW0DYIyBMSm6u7t5BaC2tu2rQLeuX8XY
      +F309PXDgH8vQe1r2wA8/dwXMT+3iBL6eOentrbD+wEMyuU1JFHM5wDU1nYIgEKuqxM9fQO8
      AlBb2/FVoOLDArSOeAWgtrZtAN57601EfUO4fPnSrq8AZqOCR+VVLCwsADbB/EIp4DSJWmPb
      +3exMIfl2Xt4/e33dvl+AIu7ExOYLTzE+EdjKM48wM2paVhrYa399GVVj3cWWFTHGmNgjfv1
      qP72jTGwHtc0Y02mhvMckF2HT2sW27AX7rL7sLkX7ppfR8N5OLd32WyXk9kL5xK2uofbPgf4
      xrdfdiqXVMqYnVtAGlUwku/H7ZkSjh3t2bwpa6GU8lsobGacz513aw51RTwK+PThCTuHxr3w
      KdLsGh6rsV97+dheeNT4dHyQrhBxVx+uvPgiVitr0LDIbxjEsYZSClrrur5AbpRSmd4zPj1k
      Gmv4zENr7dUDp3qbyPbQST1+gOuGdXh09XlsDT6/5Gz6PHQLzsO5RG0OgTrDAUpp9HRv/vl0
      F/+Kmg4JvspJojEAJBoDQKIxACQaA0CiMQAkGgNAojEAJBoDQKIxACQaA0CiMQAkGgNAojEA
      JBoDQKIxACQaA0CiMQAkGgNAooUJgElw45PruDV5H9euXUO6uoD3P7odpDRRK4V5U7yOcaQ7
      h1KSQm+sYPzePDo7NnvIpOnmB+1tvvvfrZWFNRZJklS/3qrlwhiTqeHTyyZJEyRJXesBx5Yc
      FsjMIQmwDve2INm93JqXUwUb4DzShvPw6HGUpmlTe1G/jiABMMk6SstrQC5GfuQUio8q6D/a
      W22bUWuL4ta/QmmFOK5N0ac1idY6U0Mr94teHMWZGnBs5aGAzHhj/VqB1NdwbyeS3cuteTlV
      UAHOI2o4D4/WKlEUNbUX9esIEgAd53Dh4rPVr0dOh6hK1Hp8EkyiMQAkGgNAojEAJBoDQKIx
      ACQaA0CiMQAkGgNAojEAJBoDQKIxACQaA0CiMQAkGgNAojEAJBoDQKIxACQaA0CiBQqAxULx
      IZaWKyiVSoBN8ahUDlOaqIXCtEUxKRIDFKanMTczhQtPnceNh8u4culCtWWFexsPADbbNsOn
      hrXWq/VGyBoWIdbh10KkXuN4jxNpeh1o2MsgZ+pcojY+TACUwurKCkbPjSJKlnBruoTjR7th
      ra3+8+oLBJvZIN/NaraGscbvsBvmUV/PZ3xz67BNr6Hxdq3XOhprBDhTjyhvjQ90BTBYXV3B
      w0IRp0afxOB6irgjar4vkFKZ3jM+PWS01pka7v10gEhHXj1wqreJbA+dyOMHudaqyXWox9bg
      vhNoOA/3PVH6IJxpbQ5hAhB1ZPoCdfcEqUrUcnwViERjAEg0BoBEYwBINAaARGMASDQGgERj
      AEg0BoBEYwBINAaARGMASDQGgERjAEg0BoBEYwBINAaARGMASDQGgEQLFIAUd66PoZwAY2Mf
      Iq08wrWP74QpTdRCYd4UjwjDg/2oGCBdXcLNe3OIo83eK2maAoBfWxRjkSRJ9eutWi6MMZka
      Pi1JkjRBktR1HnBs5WGBzBySAOvwaYtSP35rXk4VbIDzSBvOw6PXUZqmTe1F/ToCtUVJMHlv
      CnYlwtDIKRQWVzHQ39t8WxStEMe1Kfq0JtFaZ2po5X7Ri6M4UwOObTgUkBlvrHtDksZ1+LQC
      yawB7m1RlApwHlHDeXi0RYmiqKm9qF9HmADoGBcvf7n65ckzQaoStRyfBJNo/wWD8/eYAAa1
      SwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CountryLine' width='192'>
      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
      /wfrRzqPg05n9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GroupTop5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ItemTop5 ' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Rank各国各item' width='192'>
      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
      CnEDCynE/8MvYXst3BiBrw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='feed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZQn11Xn+Yk94rdvua+1Zm2SSirZ2q3VsjGybIxZjBtm6J7D0AOYgQaa
      pekx3dCYZjgD59AGTJvh0IBpaI8BuzHyxjFeZUu2JUslVZVUqqrMqtz3/K2xvPkjIiN+kb9f
      SVlWLSplfM+xU3HrvhcvfnHvi/ve+777JCGEIEGCHQr5WjcgQYJricQBEuxoJA6Q4PJCCE6f
      fomz585e65ZsC+q1bkCC1xkkidbKNAtehsc//18Z3n8jJ57+Fnv2jnHTG+4lnzGvdQtjSBwg
      wWXHrl1jKDULUV2gYMDI6DCV/uHXnPEDSJd7FkgIgSRJl7PKBAmuGC77GMDzvMtdZYIEVwzJ
      IDjBjkbiAAl2NBIHSLCjkThAgh2NxAES7GgkDpBgR2NbC2FCCFqtFpqmY9stNE3FcQWKJBCS
      jBzM+8ty4k8Jri9s0wEczp99iY16C9XKkNZhrWZjKR6eoiLZLtmefvrKeYQQJAzrBNcLtkeF
      8DwcVIo5lfmlBRyrhKWryDLICNZrVfKyEhp/shiW4HrBtqgQnmszfWGGfLlCvVqlmM+wXncw
      FA+hGOiqgue5GIaB67ooinI12p4gwavGZecCJQ6Q4HpCMmpNsKOROECCHY3EARLsaCQOkGBH
      I3GABDsaiQMk2NFIHCDBjkbiAAl2NLZNhqturGOlszh2C1WRadouqiwQkoqqyAghUNUkyUSC
      6wvbJsMtzc8hrW1w9twUYwMV1hsOhiLwZBmn1qQ0OEJvKZdwgRJcV9ieA3gua7UWGQSO3aJu
      e8iyBBJIEnie6+slLNAE1xm2xQUSnsPi4jLpXAE1YIDWWy6a7CEUHVWWEcJD07SEC5TgukJC
      hkuwo5HMAiXY0UgcIMGORuIACXY0EgdIsKOROECCHY3EARLsaCQOkGBHI3GABDsa2ybDrSwt
      ksnlWV1bp5BLU2046LJAKFqQFsVD1/Ur3d4ECS4rtk2Gq1c3WNloIBprLCxbyMJFlUFIgtpq
      lf7xPZRVFSEErute6XYnSHBZsD0HcG1mFlboqxRYQScle9SaHrLiIRQFXddwHCc8Gyw5IyzB
      9YJtkuFcNqo1VFXFcVwsy8RxPRRJgKwgSz4ZTlXVhAuU4LpCQoZLsKORzAIl2NFIHCDBjkbi
      AAl2NBIHSLCjkThAgh2NxAES7GgkDpBgRyNxgAQ7Gtsmw83PTpMvVVhdXaOYS7NWszEVD081
      MFQVz3MxTfNKtzdBgsuKbZPhhOvx3PHn6SmmObG8jqUIZBkEHmsLK4zsP4iue0lWuATXFJ/4
      ygu4gQ0WsyZvunGU09MrbPIdLF1lsJIJ9bfnAE6LM5PT9PQUWV7dQEtlqDZsLMVFqDqZbJZG
      o4GUSyHLcnJgdoKrgk98+SQtx2ceFzImD9yyi7/8zLdptBwAJkbK3Hd0nH/7h5/B9XwPOLKr
      h1//3x4I69iWA8hailuOHUVWFIQnUBQJzxNIAJKEJEkIIRI2aIKrir/63LNs1FsA7B4s8uCx
      3R06nbYoxWTbcgBJktA0zb8IOvetfLfE6BNcj0jymSfYcRBC8P7/9/NA4gAJdiAE8K0XZoBk
      HSDBDkfiAAl2NBIHSLCjkThAgh2NxAES7GgkDpBgR2P7meFWVshlUpyfXaS/nGNpwyalunia
      haVpeJ6LZVlXur0JElxWbG8dQHgsr6zi1NdZmlug1rQxZUFDBrwVXpxdZNehG9B1F8/zktMi
      E1x9CIHjOAgi2xP4sriawHWizIXb/AJ4LMzO0Mpl8TwXz7FZsW3SqounmpQrZWq1GqVcCiDJ
      C5Tg6kOSUFUViYiSIyF1HN4uSRKKGtnn9shwisYbb7/9MrU0QYLXDpJBcIIdjcQBEuxoJA6Q
      YEcjcYAEOxqJAyTY0UgcIMGORuIACXY0EgdIsKOROECCHY3tUSE8hzNnzzPUX+LM1AKVYoql
      9RZpzcVTLTKmieMJyqXClW5vggSXFdtLiyKrmJbO7PQsrueytK5iquCggl3j+MkTHHnjnbhu
      QoZLcI1wJclwnmszNz1DT28vNNcwVNhoOgEZzmL/oUPU1lfJ9pSBhAyX4BrgSpPhbrr5ZgAG
      h4YuR3MTJHhNIMkLlOCK4G+/8Dyf+8ZLAFiGxm/9+EPbLvvkiQs0bT9MMXWVW/YPXJE2QuIA
      Ca4QltfrnJ1dBSBtapdU9g//7knmVqoADJQz/OG/eeSyt28TiQMkuKb4q88+w2q1AUDG0nnv
      m2/sqvcrf/y5UG+wnOWXf/iey3L/xAESXBRTc2ucmVkJr4/s7qWQ6TwE5eNfOsFjX38xvP75
      H7xz2/f4/FNnubCwDkAln7qoA5xfWGN53XeA9oHuq0VXB5g+d5pzM6sce+PNiYfsYDz+3BR/
      9tjT4fV/+Jf38eWFdf7nV06Fsp/9/ttZqTaZnFsLZZvx+1b89T89y+JaHYCUofK/vPXolWn4
      JaCrfZ+fmgI1e7XbkuA6wFq1ydT8Kxt7N3zx6XPhuKCQMV8TDtCVClGpVKjV65fxQ5MgwWsT
      XR3AcV3wPJL13ASvd3SEQJ7XoLrRRJaVxAFep2i0HKrB0UIA2ZSBru3M1fsuYwCJ5597nlyl
      P3QA4TmcPjPF7l1jnDx1ip5ijoX1JmnVw1NNMqaJK6BSLl7Vxu9knJpa5LGvRTMv9988zuFd
      vdsq+7lvvMQf/f2T4fUvvfdubj88fNnbeD2gwwFk2eDoG99AVjdCB5BklVTKYGl2ivmlNQzD
      JKXJeJICboPnnznF4YQMd1UxvbDOp584HV7vHSoyMVLaVtmtR9l6nsenvv4CH/3886Hs/3jn
      MTxPdOh5Il7WdV1El/q8LTbgE9UihES1rnqiXTHQ61K2HZeTDGdITZ48cZ637R73H8i1WZiZ
      pTIwSF+liKUrrNYd0oqfG/TA4SM0NtbIVfwXkJDhLi+atsNatRleZyy94yhaWZY7iF8A9aYd
      nqQIfrjTrWy96TKztBHKbFcgy1KHnizFyyqKgtSlPnnLoYk+US1CSFTrqie1KwZ6Xcq243KS
      4TxPsLK0hAco+GS4G44GU1Z9/me2r1vBBFcE3zo1w3/68y+G1z/29mPk00aHXqMVd5RcyuCL
      T5/j9z/29VD2cz94x5Vt7DWGZRnIgYGbpv6K+h0OUF1Z4MRLF+jvKSeD4OsMX3l2it/9m6+G
      1z/97tuuYWuuDd785ttwgtCtJ/3KHKQOB0gXKkzsGeHkS3PJOkCC1zSOHt1PPTgVfqCQuqje
      w2+5nc1hylAh/uXsGgKtr28gXCf5AiR4TWN4uJeW61tpKXVx0k4qZYZjbWMLM7VrKcs0KQ+k
      uTQSa4IE1wck4K1v9cdCXR1AwaPV9HAvppAgwXWOVMpntXbY99Lki5w4P8uRm+5KjP8a4KXp
      ZT72z9F8/L1Hx65ha17/6LBx1wPD0Dn+1LcY6H9TEga9AtZrTb78zGR4Pd5fYGK08h3Xt7Te
      4PNPnQ2vdw8VGShlXlUbE1wcHQ7QM7aHB8f2XIu2XJdYXKvzwb99Irx+x90TXR2gaTvMr9TC
      61zKINdlLj/B1UUS5VwCqvUWX3j6XHg92pcntc39rqcvLPOLf/TZ8PoHHzzCXUdG+Ot/ejaU
      3XPjKKqarKJfTWw7M9xzJ15g18gAL7xwGitXoFbfzAxnYMoqairLQO/2uCjXK1Y2GvzB30W9
      /dtu38db3vidfy1XNhoxhxrvL7BrMCEUXk1sOzNcsZhHliRKA8O4zTpa2vR3E3gOMxfOs+eG
      m19XZLiF1Tq/8IefCa/vvWmMN9+6K6YjhIfrxndEeZ5HrdFkdqkaynJpA9ftQhjzOst6W+oT
      nofbjWzWVSZtU69TJkQ3veuPDNeuKDZl7WWFiL2zbWeGW19ewbEd6o0m/b0VNhoOKcXF01L0
      9g3huE5IgrveyHCu63E+2JgNfhoPSZZYbePV1FtOx3NJktwhk2WZ8wtVfu6Dnwpl33vvQd5w
      YLBDT5Y7y8pb7yHLKN3IZtuUbe2LLqYnSd3qu/7IcL6iCERSVFYQytrf2bYzw+0/eDAmy+W3
      U/K1h5bt8uknIh79QDnLeH+Bn/q9T4ay+28e5z0PHbkWzUtwlfG6HgQ7rsc/Pv5CeN1fzjAx
      UuZDH/9GKLv7hlH+1XfffC2al+A1gNe1A9iOyx9/IjL22w4NMTFSvoYtSvBaQ3JARoIdjcQB
      EuxovG5CICEEL01HafwsQ6OQSVZaE7w8XjcO4HqCn/n9x8LrY/sH+Pn3bD9HZYKdievWAd7z
      ax8NF0yO7OrlF9979zVuUYLrEdetA9SbdrjAdyn5KRNcHRw6vBu36CdQMNRLG2o+9NAbWW/6
      K71568qa6HXrAAle21BkGU3zzUtVLr67/MEHbmW14XdgaT1gEqgymueX3Vy13b1riLUgvUv/
      y+z/LWyc9FN7AlkpB7w8P23bZLjjz5+iv5xjanqeVDZLtW6TUV1czcBERssWGLxCZLhTU0sh
      v8gyVEZ6r9Nl6NcBLMugWIwyh6uq0lWG01n2/vuPsVTz/8HS/K+CoihsshrUl/lSHDg4Tt32
      OUcF8+JUmzc9/TNg+ynY5YGb4NhfvOzzbJsMVyoVaNo2Az0FZqpQSCsgS6jCZn56jl09/VeM
      DPdLH/oMtuM//MGxCr/+r+6L/ftWgtPlkXnb0OtOhttKcutW3/VAhtuzZ5hHH43Ofi6Vc3hm
      ivv1XCjLZlOMjw9wvxXppdMmCyvNWH2O4wTJuzb5YlJnJrdN4lv8F+ggzYmgvu/62g8gGn6q
      dqVnAmf/n20pehnJcBura5R6+6jXGkyMpFnesEMy3MDAKI5z9chwXbN9dRDVXq1M3oZedzLc
      VpJbt/quBzKc3zu3EccUBVn2OvS6EeS2yjqJb10yuUmd75YYaS4guQX1KV4LPN/RZGFflCD3
      6FfeDp7vWOrQMZSJD0XtYhuQFY19ExP+RUBX77fiOobxylm4toMf+Y2PUWvaAOwdKvGB/337
      pwsmSNANvqP4DiAL/29pzd+IdE0Hwf/yA38XUo7H+wv8zk88jO14YbjjbAkbEkQYGurhHe+4
      N7weG8tz4fzctsqapk6pFIUxur7T5kIE9z31PuAaO4DjeqGRJ8Z+cWQyKSYmouwQxWK2I6yS
      LiGN3+BgD/fddyy8rlTyVG0vdo9M2sJ+dc2+LnDVHODU1GLYsxuawp6h1/f2ycuJbDbF4cO7
      w+tSafvntxmmTrkczZoZevdQtVzOx+6RyaZYrnWZynmd4ao5wG/++RfDEwKHerJ88Ge++2rd
      escgn0vHevF8PkMul+Hee28JZT29eZpO8rXdxBVxgP/5lZNhTvq0qfPInfuvxG0SbEG+kIn1
      4oV8Bu/63559RXFFHODvv3QyPGyhr5hOHCDBaxY7bfh/2aEqCpVK+yKQ9TLar4y+vhLf8z33
      hdf7RpLzmi+GzJFHwA6SjWX9pAOZGx4FNzgRJz/yinUkDvAqkU6bvOlN0Z7i3X0p6DJ/ksul
      ueee6GDosdEK0Enik/AXzhK8MiTomP6Ky/y/et8BEP5vLZdGY/qX5ACvRHF4fb24LT+sJGGl
      TO65JzL2vWOFrYUuCk1V6emJkl6l0iY9GZ13vev+UDYxlOQAvRIw+g/AJtWjMBbLT3RJDjB/
      /iznZhbIForU2zLD6R4YhTIDPd2zmnVznMst6wZFUWK9897eDKqqxmQT/VlMM26Iu8smqZQR
      k+2rWCiyTE9PPNzp1pJs1ordY9euUqeeCP8vJtrOk12a3itrCjryU3W9wcXvu+U5RKfelbKB
      zW5KbN54OzLA2vsm4FJDIElGUyRsTyaXNpFkQLgsLS4x1jvYRrSKE5e2EsYQQUaxLcLtENXo
      Ut/FCG2e58Xi82xWR4i4LJPRcbuQ17wOMpzXXW8LsUx4HrIkxe5hWUannugkpYluRLWL3GML
      dw3PE0hbf1HP6zDsi5PhXjkLnOd5iC7Z4jrLuh0y13W3eJnosAEhutjKpl2ITpvayjjrkAV2
      0SnzUDN+AuNLcoBybx9NodFXybNaa2EpHp5qMTQ0huu2Z05rP6qyC8FJ6swURpdsX2Fmry3Y
      PhluO4Q2CWUrKW27xDdJ6iCqSV0IbRfV60KG6yC+SdI2iW9S10xuW7tiv2xcpsgyshxXlJUu
      JLeLZIvbSqTzyXCdGd+6k+HaJJdIhotrdbeLrrJLzQy3CUUzGBkeAKDH3Lop4dqeJCBJcOhQ
      lLtzdGj78XmCy4++5a8hzjwOgKqZcPPPbrvs7c/9Gs76vF823w83/N4VaSNcx7NA9957S9i5
      jZZTSEgcODAe/vtQ/vKwUxPEka5foHf5ZHitOXcCnb91z8o3KEz+pX9hZIGf5Q0nfpPWkp8N
      W7EKcPRDvPH5X8devQDghyU3fpDCxknEui+TlPWOui8nrlsHKLXxW3LZxNivBCqrT3H4pc+F
      1+mR91Ka/yx9z/yXUGYd+jMy9RR9S6dCmerc07W+fPVFvHVfT3LLgewFxPoZX8bARdvSs/It
      ms0GAJlMFrjvO3mkDlwXDqAoCptj0q0xcoIrh9L6cTJTfxVeW82HuqxcwNjcYww8+8fhderG
      j1x2JukbTvwGoroAgFzeC3fed1nqfc05QG9fkXqQEaBU8nv5tz9yN8FxsPRmklPLElw+XFMH
      OHBwnGrDN/b+gk8huO22I9iBtVde5vDjnQQJD8WtR9fCwmyt07cUnVaT6j9K0+q9Fs17TeEl
      PVz0xVBh6BX0r6mF7dk9RMPxjb14hfO/XM/oX/wq7/jy+8Jrw/hlJKvEXc/+SiQbeD+T1vYo
      5qnGLP2LT0dlR96I16jRv/hMJBu7/TK0/MriSynY3EOfseAY8PEsBMkjGEjBDwF/mSdkxfal
      4c1tdVw1q+vtLaGl/EFMTzF9tW674yEJB9WJTqeURZr+5a9SPP4boczc83uItfOUj//nUGbt
      /2DXeP+1hG+ZEKQUotfwHaAbZhXYXNLTFH814fPBLP4VcQBVjbIJbP49duwAtcA18y+T1+Vy
      QhIe/YtfDq+LygCIN6A60fldiiehCDumlzdGgaNsB6pbi5XNZfdC6cB33GajtRKrL1254Tuu
      C2B07lP0feX/Cq/N4m9vi0ZxLaFmevECk5UzPVfkHk8GpN1LJsO1Wi00TcVxBYokEJJ/HpQQ
      IlwpffDBN7De9F0zo1+788IUr8Wdx381vFabD6IfOMCjX3k0ku1/K9rAL8T1xKOw9wADi18K
      ZXlrHNXdF5Pl0ntIpaxYWc38ETaGOx0g1ZzhhtMfDq/7rPsgc1eHXmHjZKw+o/Lz26L1AvQv
      Pc4D3/jd8LqU++ltlbskSDLIkdlcjACp9+xD2/+Af6H51qZkepBb/j4RLJ83pmZ6EK6fGEHK
      +GMYc/QWaASZvq0ru3X2khxgaWaK2XWbtA5rNdunQigqku2Q7Rmgr5xHiK30K9HBC/HJV69M
      etq+nugkfYlt6tGN4CXQW8vccfzfhxJV/l70gf81JtO090Dl3R2ls9UzPPCNn4uuj74bc+gw
      +85/NJTpI70062Pc8OKfhrKe1EMIK25Qgk6OT1cIgWavUahGR0Jp9loXVhrdmGqdv5UAWc+g
      5qK5eUnR0Xv3Y9wYdSAiVfSdQolm5wQSsmYip/zVeKGaCCEwhm5EKvT7Mi3ty4aPIpV9BxdG
      /qIkNyXbF95DyvR02kWX993N9vzqItklOYBt2zTWF3CsEpauIssgI1iv1cnLim/8QnRQC7eS
      rxABiWqL0PO8jpfTSSLz9QYXvxjepuT1ILw7GFj4YqhXog8hbupy360vWnQc8ykEHaQvupHS
      hOhan+LUKVSjg/i05kIXAxOYjVn2Xfj/Ir3xYYR5oEOvW9mtv3E78/Hl9LxuZYXoIM0JIVDz
      A2i774jKmjlEcyXG3xGeQOs9gHHD2+N66yKm53lex2ksF5V1sR9z9BhS8PUQqZ5Om+Lidrbl
      wWIkv0tygL7hMRQrRzGfYb3uYCgeQjEYGVHwPDfIRCa2fBa7EcuC4zXjUl8vfkLmRTO53X78
      /Wx6izJyG8qxO7jjuSjWVcbvQb7xls6yW0lpXchmF5O9mrJbCWOS1Ek2kySpg0QmS51kM7++
      zv0K3Y4rFWwlr0mILYQ2qSvJrVtbpI4NKLIsQzcSXpte9B67yeiUdS0bf9aO7IOBTa2srtEK
      doRlvWIXvTj58ZIcQJIVenp8Gmmxg31wecbTA4tfxnH8dcRcvgQ8iOasowSerDkWr5TxdydA
      1i3U/GDbdQrhvYp5G0kBpe2l+lz377y+q4ATp16kGnwVqkUb9sFLZydpOv5so9JjwlGYPH8B
      N1gc0EsZiPIGXNt1gMNnPozT8GdkrEI/HP5Jbj3xAQgeSu47Anc8yNse//5wn6cyeAsc+bOL
      1vl6hJrtITXxYHgtF0eQrCLWrra5+mwv9ur0tupT0hWMoSg8VKw8smGh3/BIrD42Zl91268k
      Go0G9ZZv7I1m86J68wuLoQNUlDVAcG7qPHCNHWB85pOI+hIAsj0B/OTlvYEkoeajtUAlXQJJ
      7pS9xiHJKorVlhJe2T75T0mVtxh7AVlRUHr2REp6Ghqty9HUEPMKLAXNVFTYexG9ugwiiHgk
      GSzgSxY0gijFMuByH3Ql8J0CrqIDHD77J7RqqwCYuR448jNX/J6SJGPtui0SVPaDosZlPXsR
      qkFqIkrCKw0cRlJ1jOHIcOTiCCgqaiFyHtkqIGtmTE8pdF98l410XC/X3zXAkM1cXC+7/Xlw
      JVWMl00VkfVU3NiNDDj1LqW3B1vy/xdWJ9GxMwvguAFPBAktDMXv2v4uC8uBxZka/CDwkRws
      m74sq8GPBWXXguFMQfcd4AspaAYTTRkLLtc69RVxgP6lr5Kr+WGMZWWARxid/RQi+KTKjV3A
      lXeA7UKSZBQrShaLZoKsolfaDCfTA5qFNd7mPOUxUPW4XrqMp6cwhqOFNCU/gKwacb1UEc/M
      xPWyfch6Kq5nbv8wENnIbCmbhVczLuiCJyz4cttH8wdU38CX2j5KoxfJjbCiwGJgcalLXB56
      1oBqUKasv8Yd4MYX/wtidRIAKTcE9z3yCiUuHb7h+H2o3LPXD3cKw+G/y8Gez2sB39jbRlqp
      7mGWrFlb9F5bu9jOaHCqjbVyTKFbxhdOGPB4W/qiH7p2a5/krV00HT+cyxj+11hVLKSgI1Dk
      +NG51wUDTdLMcGpMUv2uRq9E2x/JDwAS1vgbI1lp31Vs4esTcyo8bUbX+19jWzH683dQs/1B
      cG/WX0UeLt6PHWys78v6HcqB/n/hr38Ao4USEhKDBX/TzjV1ALUwiDB8VpKc6wMgvf9+CKax
      yPtJjDKH3hoecLApS/CdwwaabWGKKV1+Q3A9j5btfy7k4MA7x3FCmRYcVLG6ts5SfdkvY/iN
      OvniaRaq/lkHfZkBuAi1qpiawNqcMm8PYbeBcvoQcBUdQNJMP7YGJM3/DJnDN4MdENPSvgPI
      RgbUYLSjX/w0wJ2EdRmm2mLsPgVWNfhcW8R0tw4T28xm/qwBn22Lyh7VoOnB4231PazSLXHd
      tjE9M8u3jz8HQEpPw1E4+cJpJlfOApA3C3ATTF24wPSav/+3nPYH581mi2bTD2Nauv/3xKkX
      WWn4jjKUq8IEaO4abhDuqO7FP0+asxau/qruqwyBms0mqiLTtF1UWSAkFVXxV4C7pTDZRHr/
      /dD0DzQjde3i8+sRsyr8Q1uM/YAGKckfVG6ieZGB5wkDvthm2PfrdDXs5pb67IsNZFfXOHtu
      Kio33MR1XVqtaBr1ch+SCNBstTlF8BU5MPn/YDf9mcVc5SDwFobn/xbH8dcEKt4e4A4OnfsA
      IoggSq1bgfsprn8DuEQHcFp1vv6NbzM2UGG94WAoAk+WcWpNSoMj9JZyCCFI7bkb6v48K1YJ
      z/P8nJdBPQI/aZPUtlAfybrpvYJMCISI80oE4ArBybaeM6sKBoWg1qaoSGAILyZTJZ/j9GJb
      2YIq6PdE/B4CGgheatMrKYJesUUPwbIs+HrbgHKPJti9VU8IJlXBp9sM9o0GmF25O52y84rg
      mbZ7HFEETUTcUboQAi9W38rqGmfOTYay+kCDWq3OwtJSKGu1bKZn5/j28edDWW2s1jUh11Z4
      nocqp9AUv9GqnOqaWK0rn+civJ/S+pO4wTRv3mp28Ms27Wds7r/79+xo1ctgYW4Gx25Rt72A
      F+KPTT3PjbHxJD2FFJzeJ/TURdICfoe4WNkuckeCT7b1nHtMKEmCD7VlcNyfFtwnEZMdTMOd
      W8oeMcBSBB9tM86DKdgnx/Vu0UFW4O/b9G40YVCGZ9oGlBkVCjI82WawezWQthhsQxK0FXtZ
      rCjxewxdLCrYTh5EoN6os7i0HF7b9va2ugsBll6hYPkTESndp0P35m7FYxyAbDD22115O4W0
      v2EnZ5iB7FFKGT80Lqf8Hzdv7Qb8CCJr9m+vHReVf4ds0P7hXZT7h5GFoN5y0WSBUDRUWfZ7
      4E0yXFsZiU6SliQRyOKkpw69bjKpm6zLPaCDzOWTzbbqdS8rbSWMSRJCllltN065kw8vSRKe
      LMX0mnJ38lpNlWIGW9AkerdJfBNC0NwSdnToyRKS6NK+jrLdn6ObTFEMNCVK4qvIaoeeLMsU
      UvsYKfnmZagqsiyTN8dpuX74m9b1DtLcZlldzWIE4bSmpJBlmYH8XeSsILRJZ5BlmRdn9tGo
      ++tNvWKcu2SZubU+nIAe4aXLyLLME6dvC89fHvP2c5ssc/KCP7K+5DGAFgxQO5MzXN3J33/M
      ELp42YRb8VcQN5HReJksM9cX1tY3wgElwE3WnWQ0m2fawo7bcyv092xvU/zS0nKs7Jt711mq
      L8Xu8ebKRteylfQRDvRHXmvpPVhahUIqOgRFkU2g2lFWc9fQbH+jiyb7X4WBxU+SXp8BIJ0q
      A/ez9/wfUNvwZZncMHAvQwsfpx5skinkh4B7mFvro17zvxBK1nesF6YnwvFIXTA4xD0AACAA
      SURBVB8HoNEyw5Cp5RiAxOyqbx3XxTpANzzbZuyjOtwiBU4RYJcFb/ME3342eqnacBYxJFhY
      jGLYQaWK67qcORvFur3uCF6PF9PbMKqIiggHYgCO4yeBjcnc7lMxjuPE6qtl69Bla3S9UY+1
      5ebMBjm1QKsVhR+e6207E+XS8krsN7g7v9ZVz3W9+D08QdYYZbhwXygz1CLQSTrLWbsYKUaZ
      tHUlS9/yxzl01o+zNT0DvJnd039Cb5BAS7fKwLsoVJ9BW/dnhkzhhza6s4rr+KGX5vgGXqw+
      Rarm5wXKqCvbe/ht4Jo6wGfTsPmbZ1NwN/CnBWhtbnROwTuBPynA5rlu/Rl4tFtlXSBJEmkt
      Wmk1lT5cz+PsZDSLMaCM4+3yWFyOYt2NYhXHdWJ6u81lmv0tnnku6jkHvN0czDVjslFpP3tS
      jZjRjR46QO/AcKy+1dIadiHuFPV8A0N1Ym2pNxqUCxmKqYlQZqgFsuYIE30/FMoKqb2srE7F
      7nt7dhWvbT4e/IGioRVj9elKBug8Y9jUShTTkZ6mpFC8FXR7MZRJorvDq14dPTBiVb4yp03+
      6/vehQieTc35vd9NI/twAlm533eon37oB9hMp60FuaZuHvW/WFfNAdZk8ILwVpYhB5zQoR5E
      Tj267wDrMmz2p2k5KusGoWIu+Hvm3GQ46NYrGRgnZkxlNpBQGC7eF8kyfcgosZefMQaRJTUm
      SxsDgIyuRIsrqtz96CMJJaanyP72v3ajc10XQ80z3NZL5sxxGo1G3Ckqa5TK/fH6JB1Lq8Se
      I2MMIUsquhqNvmVJ83vx9vt6HmljIHbflN6HI4xYfabWQ9a0Y3qmVqbudM6XVla/zKFzH4zq
      u+kQhY3TjM5+IpQZzgS2q1Jv+aGSLvm/Xcs2QplQ/b9Pn72ZxXl/X0O+WOJ+oGGboZ5i+5/6
      +dU+alX/s1dQfYJg3kqDFrTR9PUfufEuCMIdKecPtAupdBguS6bflnfe/J2cD/Aq8JE8bATv
      pmTAj15Er9Vq0Qg2SbdUv0Cz2cQJepqW5stEsy+czBB2EYGIGVPR6+tavyyrsZdfSg2gyHpM
      VkwNoilpJvrfE8r6csNoSipmJMXUfgwtH9PrzY5jaiUm+t4bynqyB1Bli2JbnGxqZVRFppg6
      EJOljYFYfcX09jNMpI3+WPvSej+KnIndV1OziOYaur0QyhTRxFALcT0lRWXtUxw680dRfQd/
      l27Bh9W8QGnjG1F9bo3JhTGeeNHfTmlaFo8Az0zeyOy0b7yZbJa3AS1Hp+n4xtsMjP3pszez
      sjwGQLlS4WHg9Nxe1tf88K03CJVWv/CPiJo/5akO9lO8dR+1k9+GoBNQ+nrI3LKHub/4A0Qw
      CDYm9lO56WdZ+ezf++W28bteMj6Sh7VgnJQz4D0X0XvuxEnWgsWx0UIN9sPxE6eoBwef1cse
      HILjJ05iu/5DOb0yHIShwr1hPZVMGQmZA/2R0Q0XL/8QWJa0mJGk9O5UZUlS0NW2mRKpO3/f
      UAsMF6PnyJrdaR6y10JvtRms1yDVmGF0NsrbmRn7URrpfbH26WoOt8v8e3H9mxw699vRfScG
      WZUGY/eQhQ1eE91djZ5L2FQbGWaWo9/Wdq9dYuLGi8/jbfiDdS1IdbP2hccQweYYfd8+Mu96
      K251HQIH8Bo1EIL6qWeBK+QAVRk2gtBm84yKyakLrASbX2pZGyZgrPROai2/sX1ZPzbb3/cD
      NAN+x2DOn5wfLtyPE6zk9WajbYBb0T49p8omEh7ltcdDWTZ9ADjy6h/wO4AkbIzWfHituoNs
      d2tntn6KQ5ORwRZHfwndLFHa+GYoM+xHEXYx9ryGPYhRP8ehM78VyvK7fo1uEXlp7YnYPdKH
      x5lpZJhuM/aWY7C4UeHUTPRVqrcsphZHefxUtG3lxkb3s84KqQxO2g/vUilf5y2Hb6Ox7hux
      nvJDlu+64XZaVb8TNLK+3o/f+068ZtCzZ/0w5muZYZqSr1dKDTAAzGtpvIB7lFYt+oH/1nNz
      eOLPWGGEH0biS1m/s7kiDjB1fpr5gMxUSdXhAKSkG7AlP9e7Fbx4TU6hKX4TNmNsTU7hKf4r
      UhVflk/tCXuyjNH9HLJukITDyHyUdaGSfgDF/S4On/n1UDYoP4Sy9/9kbPYvI73U3ehOb1zP
      eBRp9Me3GHEJxa1TXo2MLtWQUd1cXNbUSDVrHJz8v6N79P5r5NI7t9Q3TKY+H7tvpe+nINM5
      vel6CrVmNC5xPJVU81zsedONW/CEg+5GMz+ysHE8NVbW9bpPYS9Xy7zQZuy1ZnduluupwfSi
      Dw+J+yZu5jbDD1XkYE7/h257C1QDoqPmy/b3j0I+GPUZfox/YGAMGkG8bPlfmIyZgs3BtO7f
      66PlI2yk/LK7i0XeAvzW8H00Wr7eRG+Z/wycTQ/gBg5gmCWEBH/V4+/DuCIOkJKOkJFWg//2
      PT5njiNJjeC/X31qxMra4+EgOG/sxl8JiMMTMs+fPxRe29kRDgN2LRrcuU0XyXMobjwVtb8x
      CnhobnQ4g+I10O3lmBH35X4Qre/djCxERlcYyKA7wzFZfrhIK/8Q08vR16u/nqXUOBerr9z/
      PuTKgdh9Za/FRiMXe46BjRKyXubJ09G2kNFbexisRLMzm3BcNWa4jqcwv9oXK3ugWmJtxeWr
      J6NefO89RWCmo75DA+MUj0XjjEqmwJRuUslEG3c0WcFQFbTN96xenKjWeOE53BXfQeVsGu2O
      A6x98dO4K/5oQymXKN82wcLffBh31bcpbWiIvje+n+9xqjRtP4IoBQ54zG3SCsLlYc//+77W
      ajgwTjtpJOAXm8EM1UVb1gWe67C0skYhl6bacNBlD6Ho6KqC53nouu+tWXMMV9SC/760g6MN
      ex6CEEgPUimarXmcYEODHnQCpfOPhUv6OflWJN7L4TP/Mayn17kD+dAHGCtFMXZvdheuq/Lk
      6WhXVyu3l0OuHnv5R3P7GLXNmOxYcQ+jrhoz4kItT9Mxea7NOFOjfRRbcVl2dx9mxeKFmWim
      aWyjzJBQYsZpuxobjUysbO9GGStrML8WDerrrRTpLqH3wlpvrM0Dt/RiOyL2vPs2ypiaEzNY
      Q9VwPRm7jSnpCZmJ/lGybcbelyuR0j0qw9GuM0U3uWPPEW7TovYpuRLNs8dpPuvH2ZKhk7/7
      MEt//xfYwWZ0OZ9j8K7fYf2JL+BM+5v5lXKZ3I98L42zp3Dn/fGIuuF/Rdx6Da/mx/le3bet
      w14L1/O/AGZg7I84VbwgY64VZNS2ZQkRrIjrwcpzNpgWuiQHaDUbrC3MsrBsIgsXVQYhCWqr
      VfrH91BW1a7JmFzXxbAXaLX8B9C1PK7rcmDyd2gGq3u54l5c9w72T/0+ju3HhLnGYVz3rUxM
      /S5ekBWi0LoZ132YJ1+MNr/sVvZxu+sxvxBNHxrZFJIEb7/p7qgh5SySovHzb4kGy1p/EVmS
      OToSbU0cKY6gyWpMNlwcpmGrMSMur/YyZssstBnnRiNNy1HisnqKlG7yhvGDoWwgX2G1mo0Z
      Z+nAAAOWFitbbVj096ZjZXuyBUZ6B2LPYQ2NcXzmbMyIXU/CUFV6MhExSVdU9g6NcvjB7wtl
      UmWAleWlmJ4qK1TMPOU2Y5c1A3dpAWc5GixL9nBnoi3Po376eTa+8Jivk0qR+dHvZ86VqDm+
      AWqORJ/r8kRmiPWc3+ZUJs+jrsvflG9gRfK/CqVygZ9wXT4wfB8rOd+gh/rz/CfXZU41sIMF
      wayqs8t1WVM03CCi82QV13WZ1FNhorOyarDH8zgTcJEuyQEaG6vU0UjJHrWmh6x4CEVB1zUc
      xwk5IYaziNnyP+OGkkGSJAbP/DfqG/64IFscR7r7HTx16gjVDV+vb3CIN0kSX3/xdpqN4EHr
      Y9whSZw4fyjMFTSk7OI2SeIX3vrekNKklnJIksxaNTKmWnMfuB7Ln/pYKNMPTZDb/z0YtWiZ
      X2ml0DSDR26K8nRKfQVk3YzL+ouQyfHzb42MzhjphVSW77v1gVDWM7KHYjofk/UN76WUyW2p
      r4clxYkZ9mChQn+hHCs72D9KJV+OlZUrA6CoZNq+rrKqMlbpj5UdrQxQMNMcfDBK3yj3DYMd
      P55UkiRuHt3PTQ9GHYhcGcBbXMJeisYoujNE7fg3WfsfUYrH3gP/nsazx9n4xD9Ev8Gv/jKf
      LE7wD2P+Vztt6vyhJPHR3mOc93yHymUtjkoSF3LjLLX8MWGukEaSJDSziG75lq0ZOSRJ4kfd
      Orbr9/yWayJJElVFxVYCnr/ic5IWNANX+B7gqprP/7LkkAohGbLPhwo2JV+SA2SKPYxaLSzL
      xHE9FEmArKDIMl5AxpIkiT3TH6a25s/JW9khZPndTC/ex0Ywj1sUFWRZ5m03PIDT8GM4q5hH
      lmXeftNDuMHycKpcRJZlxstvCslM5Xy/T5iqthlxSkORFX7ygehFS6UsEoLG6WiVVipnEK0m
      C3/9X0NZ6o7bKR3eTfWZJ0OZ7uzBHCrEZd5+rNEeMka70WnIus6RoWi1Wc6XkXRji6yEqFdj
      9Zmpo1T27Y0bdm8fkmnFy2bznQloJQl77jxrbc6dTT9CcWQXubaySiqL16jHjdjupTV1jo1P
      fTKU5Xu+H1lPxfQMZ5D5U89z7mPRPQ5ODPC5wl4+OvaWUPbvzSJTZi//nIvCth9TUxxiHiUI
      TzThZ8t7r7NB0/ZtQG3ZyLLMA26DVpC+XXP8418fcurYgUx3NWRZJi0ETuC2BgJZlrFuTKG2
      AsJd0fRlN1m4wQKeUfZl5hErHC8aZQNJkrBu+A6+AKqmk9X84HPr3pf2YY7nvAfP9gcswvF7
      lfceug1R9wfBctYfHPU//wxe1Q+L1P4+4D76j38bERyGpg4PAW/ioaE9bB4SJgcHUC/8zYfD
      T69x5DC9d97I8qeigae+fx+piXfz4d5ocHwgv5d3SQqfz0X7icdTvdzZarL2xU+FsrR0D8pN
      B3n+8a+Esl5LYeTgbmb+NMq+nHnwAXLf9V1Uvx2d1GKoh1FNEWtL6t670caHY/eQ+rPI5Twr
      bXrphx9EHexntU2WedvDSCmThT/9/VBW/BfvpZnNcXryfCjbXa0iTU/GnSL3TtyVJZbaHL7c
      /1NMtSS+thBxeu5teWiTJzn7sb8JZRN7evlKdpQ/G4nGAP/BKNLLDEfavh8pQFVTmG1ZnCVZ
      oUd4eEEyKjVYxNyQNWpBgttNUuWCqlMLdgqamsEEMK8ZNIIFz5RqsB+YNFI0WkH8rlvsA5bO
      PEUrGA94/UPAQ1QXJ3Fs3/F0xf974YlPhx2ou2sC7noTC8/77+yKzAId8yy8YN5e9vwec+kT
      H8ENNlKog4MMPnw7jbMv4AVfBS3YxNA4cxJR9/9bl/wfYeGjfxqu7hkTE5j3HvONOHCA/tQA
      Dwp4bCEipQ0N2NyBxLcy0aDVMIu0ZIX/0ZZz/+7MKEcUg3879tZQ9qbKbt6lmvxm28t/c3E3
      71ItfqEvGlQ/nNvL99drPPf1r4aygXKWzPBgrC1Hai4po8j72+7x7vxe7rI9Pt2md3Pdpdjy
      +Fyb7FjdRcpn+Uj+cCj7bqOEbZX47bb2/UR6kL3NNb7UVvbOpse5zDAfarvv+9IDLMt27DfY
      p+eYzSj8SVt9v2qWOOTN80N2NCPVL1x6PQfLbYSyIh7juKgiomBkEZxVNaaCOFvTdW4CVlSN
      tWA7rBEkN6gpKtVgKtwL0q430hq1ILiX0sHfHg05HdhUQLPW3Vlw/Q5UC8Y+3vJxRLC2JKzg
      VMm0Ha4EW5YDCHTXn+G6Ig7wwtNP0ZzzP6dGT4Vb+D4+0nMTq5oftvRUirwP+I8jD7C24Tdy
      bKDIB4D3j76ZWpClbM9AhV8H/t3Yw9i2/wAT/b28H38OeLMfujHfx/2SFHupx7ID3AOxFzjk
      NlCBO5zoBe73bAQStbZsa025+8+yVa8lqcxrGT4wHBnOOwp7uEdNxdoiUn3cCeTauP66JDGn
      ZWJ6ltXDLj0bk2WtCuOKwWzb+V811aJfuLHn6BUuc3qeL5aiMcVeI0/JcbipLRtyAcFut8mv
      NCPC3T7PZtxtMNAm2+vZLMgyKS16XlmSWW4zbIBxSaYqqyxo0eDbkWTUioq+15dphl+HcdDC
      Ggp6ZyPYF37IxNvwDdu0/M7S2G8i6sG8fTrYR15uQir4agXrBs4NvTi231m6Of/YVfemPpxg
      n7BbCGRH+8IxgFcqAhLOzf7s0hVxgD/qv40Z3Tf2vmKaDwHHrV4WbZ+8NWT5f+uyRi0YxNRl
      39NrskYtGMU3AkOsyRp2kOV3U3aH2wgnH8aDWLPfi9Y4i8EWycNeW8/kOWhC8IgbHRmU95pk
      8Ph3bS+/7PRQEHFZj1ujtEXW69RQhIjdNys8ysLlvW2Od8BrMSBcfsqOFqR63SZii95hr0XB
      c2Kyg57NgOfEyg64LWRU3uxFDjAsXFRPxPSGPBtXeDG9PuGypqjMthnxiKxQV7WYbExWkNIK
      cn/Eu5YMCW1Aw7ol0pMzCtrgFllKxrZXqDf8Q7Ed4RvxyuSzrM77Pa+ZzgJvZ+74l1id9xOm
      ZQoleNvbmHnqn9lY9tc0cpVeeOgtzD37Verrfljd7BuC7/4e3jQ3gRdQ0VXbD8HeMj0eMkQV
      x59Nu3/mUJgCX8OXve2CHwZfNTLcrV6T9aDHKgefq+91qjQDDy44fi/x860V3OCh0sFn8D32
      Rjiwqbj++OG72869SrsNZAQ/5kQD47xbRwDTWrR5w1V1BqW4TCgafUg0leincGQFV5KZaTMI
      XdWpSFJMZqo6e/Bi9+1zm2jAYNu4NQfYkhy7r6WolLfoZQBNkii2pfQ2JYmarPCSES0ephUN
      XVZiPXFZVlCVuF5eVhGq4Hwxoib06yqyCer+qC1yRkZGicvSCk5tnaYWjTM8qUl9aZrFF6Ix
      j/PGW1m7cIrzTz4Wylq3HYPGLGLlePAQfjt1sYju+cauB045OuJSywVfgIz/t+egRqbq20M6
      2HmlvaEXu+F/IdScv/nlH7U1mkE9FVXnUeCbRhlX8W0lpxe4BfiEthJ+AQbUNG8FnjR9HtcV
      cYCfbK3SDEhuRrAs/YBTx3E3R/b+w40LFycYKFlBqoKmouIGXwU9yONeUJTwlL9ssH1xRjej
      AzJUgzGk2It2MibjErQGo5fqlHSEIuEciIzEHTLxFInV4UiWKRmgCMRQ2+aPgoOkSzEjUXo1
      HE1hZjSaPrSKJhldjtVXyesIS4ndV1Q0HEOJ6TVzGmY6rueVNMgKpAPRV0YqekimhzIRfd3k
      gkA2VIxjUVmlrOLYDZTxaFwgpT2ai/Msz0Q8olbzCI3ackxmN28ipSzSY0T7C3S5SjZVZbgn
      2jugay3KJY+9e6PVddMQNMsVNvb4xDxd93+zRukQdcnvgYXlO0VGPoImDwf1B5z++s24wVS1
      ElC+H1jejxeMDVXPnwh5UnuRqvDHAKNanUeBz+Qv0AqmzEczLrcALxTCORTcwEQey/uzlFfE
      AdZzJvVgOdrK+V57vpChHjDjMvkM+4HzRUHTCOgMeTgELI8InJYv83r9vyu5OdxgdU8NlkBX
      hxbZJHmblTQg2FCiYz5zio0QdzI380+hzCrdjOfezMzJz0Qy8w147sGYXm6ggRD7cNajWSC3
      oeO5+2nOR2XtYRfPG2C1Fh052rBzCFHCbkb1eY6J56RjZZ2qhZ1VY/cd2Shg1kSsfSN7ixha
      hdaF6PQbtzqOJ7JbZHuxN/RYT7x71xCqYtOc/ELUltph9JxNcVf01dJTDnNNmK5En6OGLpGp
      9pOTolk0hRyKPIqu3BPKZCmPIo/HZJKUpdcp4DZ9w1aF/85czcUJlvJdzf97XLVZ04Ivvmpz
      EPhKJkMt6OgyGb/HfkxbpRYwPouazLuAt4z8CK0gMsinfTt7tLDXT9IAZAKC5Z09+8KTfMoB
      wfKunsuwIWZ+ZgpPtUibJo7rUsj7PaFdOU1LD9JPZ/3YzNEfx9GDDGB6P/Ao65nnacj+i1BT
      fh7HVfEMreCzpgifEz7Zs4YbbDX0CsGo31oJd/crRhkkGD8chQ7FXn9OefeN0YCyMjyKoqgx
      Wc/oCIqmxWUjw8iKRWHobaEsVdiFqhn07G4boFYGUXWNofFopilfzKNoOXL9D4cyI7sPW80y
      X4mOGxpNjdCXScfuW+jtJZXNxGU9FTSrL9YWIzNGS1dY7IuMrpnqp6iLWNlssYDrmLGymjWI
      1lilXI9mlXQvS6+icYsRDaDzcobn5Ck+q54KZT8s1ZjVWnw5FTnPkOJyVm/xeJtsVPZ4xmrw
      xaIfBZiawTEgO3IUUfZ7cUPzQ5vdQ0M0gl1aehDSDffqNINDFk3TD5eL40Okgs3u2ZRvZ8ba
      XyIHidV0MQz8G6zzf4UX7CcxynuB2+HFx8LcoPTthQO3Mnj2z4FX5QCCpi0QrTVeeu45Dt0a
      rcKuGL1sBA1vGf7D1SoHqaX8wZ2SC+aMM70Q8OZFxh+xi2wfGEHokfZlFS2NGzAB80EcvWj0
      sPkFMLQCAni8Ec2UjNsF9kjwhBr1antliXFcPipHe25vkUuMSR5Pp9oGrUaDQdnm2fzJ6HFT
      KYqM8t/dqOw93gh3Ycfqu1/exZ1KI1bWMiuMaQUa5egACzu1l3WpJ9Y+U4Z+xY21Jafa5LWN
      WH0VfReWnorV5xo1FrFi9VVkCfTVWNkR7TCOqvPscBS29ZkaGyxxZjA6EGOf0WR3oYi6K8qx
      WrZSqI1FbitFoWFW9RixXGiTZVSP/foiVto/J01V/d65OfdR6qv+mEKYOeAo1Qtfo7rmh1Rm
      ughveJi18x+nXvXpFqlsH9xyD9rUP+LVgw31+SG46QFmqkO0Aqdoqv67/5Z6FCeYPu9RBtgN
      GEMDYWY4LV8GJJ5R/eOzXoUDSDitGp5qsmvvHqprq+Qsf3DyfHGFRcOf8y+lPN4B5DKz6Irf
      I6QzvjeO9ku0gsWNTNb/5DWKNVpBZq9mfnOKVMLzfL18wf87Mp4Pt7mVCmlkBG8rRPFqOq2g
      SPDmgahnyhUbWBL8aiqKVw1doEoeR60oru3V1pA9j9JqxHlJ16uUt5S1dIEqXH6sfQbJrpOS
      nFh9A+oGadmOyfrVKiVvg7fUIxZqn7MHRU7F9HrUGtYWWUWto7geB6pR71xw1lAQHF2PnLFk
      V5GsVqxsQWlArcXR9WdDWd45Sml9mfxk5CjliSr16nnKs9GZxdr+e1ldbXDuXDTTtP+IS3p5
      jr4z0Yq7dmMDZWoV9ckgzjbScA/0NgZJ14I5fOF3fLpbwnWDjsz1O0t3owdvPVgbkPxOUFnr
      Qan5nZ8s+3Y2MvVt7Ib/frON8UD2FG7AEM0Fs2niq2eiNPGjKtwIA6f8Z31VIdD4nonYted5
      eJ7HQ8KjEXicKTxc12VoqYQdjOwNu4jruhQaHm7wqTM0F9d1uV1YobGbnu6XlQ28IO2KKWm4
      rovexspU1BKeJ0jPRxRfQx3CdVxOtr2sQbfG4C7BpBzNbRclhQEXjFa0v1Z1TFQEN2WjAW9R
      V2iJeNkKCmVZplWOUj06qRRNW+L8QlRfrkenVJJi91AcHWQZNRvtb5A0A8lVtuipqG6aUisK
      TwynQFXyWG1L/NLwTAQa50U5lI15Gl41z5nZKPQa3lvCaQpeWIsoGD2tElVh8rT0zlB2l+hh
      pWXyTO0HQlnG6SGflRgfjQ7h0LUUq4X9zI9Hq8N9Wo5qfj/Lwz5lQtUNXNdF6d2HGuSAVQKZ
      p+3HC6bMPc3y3232GEIOJkwy6UD2BtD8DlHLZnFdl2blYewgBYpRLOC6LvL4uxDBuEAOZO6R
      R0MqhFsq+szlCf9US0lcxkSOm0eYbj0lMZFdXlmYga+NI/RqZK+V57oWssua8X3ziNBNUlyz
      XqXp+DfznBZz80s0G3UcTwSyJgsLi8zOzvuHK8synutQrVaZnglOk5FlGo0GTqvO9OwCBHqt
      RoNmvcrUzHx43421VTZqjfD+sizjNGvMzc8zPbcQyly7yeTkJEur65Feq8709DRLK2sdz7G2
      HunVq+usrlepVquRbGOdxaVFFpdXQ5ndalJdXWRueSPSq9eprq+yvLoee7a1lUWWNjeFyDJL
      83PYrhcaqf9sy8zNzbG8uhG2q7axxuS5c9Qadiirrq0wMz1Ntd4KZVufQ5IkVpYWaLT833rT
      GFaWFlhaWmS92ghljXqNmZkZWrYTyur1OksLs9QaPqFNwj+wbn7mAtV6K5AJZmdngehdCOEy
      OzvL9PQ0XvAeER4z56eYnluEzSNmhcvszDSz84vh+95sd722geMG9mM3mV9cpl6v4QmCd9tg
      YXGRmbnIVrrZVL1ex2nWLq8DbDpBY32R4yde4PSLJ6k2XSRJYn15nobd4tnjz1ILZItzsyws
      LbO8ukTT9mWtRpXTp1/i3IWZsL6FuRm++e3nWFldClMALi/O8eQ3v83cwnyod2FuHqexweT5
      qOz0+fOcPv0SF2ZnQ9nUuXPMrayxMDsdlZ2awhFw7ty5SHbuNGcnz3Pi1ItRfdMztOobPHvi
      VCg7Pz3D8vIqi4tzoWx1aYGzp08ys1yL9KbOcfKlSebnZsIXemHyLMdPvsjc3FwoW1hZYWlu
      mrnFlVA2NXWeM2fPMT1zIZSdm5xivVZjavJsm2wSgeDc5GQoO3XiOS5cuMBL56ZC2dzCEsvz
      07x4djIuW1llZjrSm70wybPPn8TxIrbv6dOnmJ5f4vz5ycBJBS+eOsHps5PMLSz6Ms9laWWV
      qclzrFXrfoe4vsTpF08zdeE8KzXfaasrc0xemGZtZZGVmk+p31ieZ2m9wcLMFLWWbxfV5Tme
      f+ElTp06RcP2O4flhVlats23n3mWluMF7Z1mcWmF5ZUl3KDNzdo6p0+/xOR0ZANzs9N865kT
      V2glWNboqxSYm3fJmMGgJ5Ul07CppnJYuh/Pp7J5VNPmwuwiarBG4LgwV4sYAgAABhRJREFU
      PNjH2QvzeMLP3pzL5bEsi7mVaphK0kxl2b9nlPn1aPahlM8jhEe97cjMbKHMnnSGhfWIDpAr
      ltDNGlU7iv5006TlCW44Ek0PIqvoms6tN0cbY0zTwJVUjh29MZRZpo5qZSkXopmVpu1QGthF
      sW18YOo62UIPvZUo7td0ndGxXQz0RRkmNFlCMTNUitGuLcs0KfUOUi5FZQ1NIVXso68cbWQp
      FPKsrKySK0b3TadT1GpVeirRPTIpg2q9SaXUpmfpNJo2VjqqT9NN+ipF1tc3SJv+7F0+k6He
      csjmN9sikctmkFWdTDpYiJMVTFWi0WxgtWxIW2hmmlKphOu5pAIbMFJZUim/TEr3bcDM5BAX
      5pHNLKbmyzQzBfYCqWyJlOGXzRVKzJ2doljuwQj0ypUyq5MXUDQjTMggywqKqpI1IlpHX6XE
      eq15+b8A/s8hmDx3lmbLDVdrZQTnzp3Fdr2QxCbjcebMWby2JLmycHnpzDlULWqsjMtLZ6fw
      RJTXVxYOL52bpj0HsCYLXnxpEtdtS+jk2ZydvBA/zNy1OT89F0ux3XAEg30l5uajmZ+mK6gU
      0sy0yVoelHMp5hfasiYLiVLGZHF5LS4rZFlZjdKKOJJCMaMzvxRl13ElhXLWZGExkkmaQUaX
      mV+KygpVI2upYfgEIOkmWUNicSW6b6PRwBOCVlsnUK83aDRbNJtRJ9CoN2i2WrTsZqxso2WH
      m48AavUakqzQaERl640GLdtpu4eg3mjgCa9NT9BqtWi2WtSDPR+eY9Ns+inL7WBp1rVbuI6D
      bdvYwWxQq16j5UIubVAPtsU26jXqLRfLVGkFaQJrtSpN+/+v7dy62riBAPztShr5wtprG0hI
      INCT0///X9JcCPQ0KbG5BELaemNjJO32wfaulndevzMj+9gz0kiaGQV6HYPf6C4W67C71xE2
      iKIoeCwh6zeHGvN5QSB9HgfY9mSPGxNvjbKi6QldluW6O3C0Dw9lWLeOi1koSVTaevHQh0Ci
      Vd3vpf4MlbZeTA8hkKi0ToaKx6tCw3pG8e79J+bz5ti0q1PefTxtsY5O+OPTKfOiMUSrEt6f
      fmY+b5ik8OH0jCJiJqn48Pm8NZ6m5OPZOfMiKvCh5NPZOUXMqpLTJywtS07P/6Qomka0SmlW
      DwtUVLChlNqwZlJRWrNaPmFK87D81Zp8lDIb1px+aW14WBQRS9BKs1wu2nJqHWub7XhJAqXj
      sUzR2xkpSahKhytT1IYlqYLScXc/x6hk8z1SqvDIj59zdM0UpV9x/09BmjYsuBX/zn/Vxq2U
      wq+W/Fc0+WNKadxq8TwhkNKGbj9jPB4SNlfQ2gi9nSHjUdYwbehnOaPhzuZ0IsEYYWeQk2f9
      2geMMWSDEcOsqcYSEQbDEcPIq0WEYT5h0LMRswxHu2Rdacnl4112Og2zVsgne/SjZdJaYTTe
      p2ebn8mKZTzZpysxE8a7L+gY1WKTvZfYqCOCtZbdvQMkuqyy1rK3/6r+o7e6+y9ft5opWCvs
      Hxyhk6rFXh68QSWNI4sIB6+PSSlbcgeHJ6RViOQMr45+a/X2FDEcvnkLUQatFcPh8VsIriV3
      dPI7VRkz4fjkbV0HAgkiluOTF3VhTKoN3V7GZHdUz9hKC93+gMkkX98HGNDG0NsZMB4NaltR
      WuhnQ0bDjFCCUWu5nSwnf2I/2SBnmDXvUogIWT4mj2zFijDIJ8+0AgSPFsvt9YyHTR5/6T1G
      hKvLWb2EheAREWazab0keu+wInybTuteQMF7Oh3h68W0dgrvHN2O8Ff0XI93no41fIkqpbxz
      dETzNWbeYY3m6/SyJSda8ffsqjWe6JSLFnMYldab9O14Jk3qTdaaeXQC0+vmEso5h0qrFvPO
      oZKK2c1tSzel5PL7XaTrSavAVcS8cySV5+r2R0uX0nN9d9/SJThunrAqPHLz42ekGyj9iu9R
      iOa8X5+2xMx5wuOyFaL5EPAPC+5+xqzEL4s6RKtCIDWW+5sZv1ab1Jbg0Ua4vZ6x3CROBu8x
      Rri5mrGK7Ec29uN8YxfWCtPptHaoLbv4Nq1fhvTO0bWGLy1bWbP/AdwJuilHPbIJAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='feed 2013' width='192'>
      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
      /z8/JN6tJNZSoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='feed总量' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d2Y8c2Z7XP7FH7mvt5Sq7qry12+7ue+/cGWA0c2eQhoEZDSB4Y9heQOIJ
      iSfe7n/AEwgJCdAIJB4ADaBZ7mWbpbl73+622+3d5XLtS+6ZkbEHD1mVkemqtstuV9nlPB+p
      JMfPJyLOOXG+Z/2dk1IURRECwYgiv+kICARvEiEAwUgjBCAYaYQABCONEIBgpBECEIw0r0UA
      QRC8jscIBKeOaAEEI40QgGCkEQIQjDRCAIKRRghAMNKor+tB4YBPnQRIkvS6Hi0QnBivRQCV
      jscf3W/0r5fKJn/pfO51PFogOFFEF0gw0hy7BVh/+gDFyLG9uUN5cgJT8kmXJzEU0dURnF2O
      JQDPbrGyukGhEIEMjWqFSgTXxycJgmCo/w8QhRG+759IhAWC18mxBKDqSW7cuE6n7VNrVMgW
      xsgaYPsRCU1BfmbAK8kSqvraxtcCwYlxrFIqyQrpTJF0Biamxk86TgLBqSEGwYKRRghAMNII
      AQhGGiEAwUgjBCAYaYQABCONEIBgpBECEIw0QgCCkUYIQDDSCAEIRppje6xtPH2ApGbY2d0h
      X54irQp3aMHZ59ju0E/WNtCjFEvfvMLDmw9opBLCHVpw5jm2O/T1969j2yHrD1c4t3iBpBII
      d2jBmefY7tCZbJFMFsbGyycdJ4Hg1BCDYMFIIwQgGGmEAAQjjRCAYKQRAhCMNEIAgpFGCEAw
      0ggBCEYaIQDBSCMEIBhphAAEI82xfIHCwOfxoweYmQzV7TolcTq04B3hWAKQFRVTUwgcj0ic
      Di14hziWAALfoeuEpLIGhm6TEadDC94RjlVKFdXg4pUrAExPT59ohASC00QMggUjjRCAYKQR
      AhCMNEIAgpFGCEAw0ggBCEYaIQDBSCMEIBhphAAEI40QgGCkEQIQjDQv5Q5tJFLUqnVyY/un
      Q5eEO7TgbPNS7tCNvRpzVxfj06HHhDu04GzzUu7QpamJ3unQCxdIquJ0aMHZ56XdoScnJ080
      QgLBaSIGwYKRRghAMNIcEoDjOIRhiG3bbyI+AsGpckgAP/jBD+h0Onz/+99/E/ERCE6VI7tA
      t27dot1us7y8fNrxEQhOlUOzQN/61rfwfI/Lly9jmuabiJNAcGocagEymQxK4HDv3kMiVX8T
      cRIITo0ju0Brjx/hhqcdFYHg9DlSAJPnzhEFLiD8fATvNkcKoN1sEXgutiP8eQTvNkcIwMN2
      Q1RVx9CV04+RQHCKHOELJLP84CFKNotl+2RMjTDwWX70ACOTpbpdozQ5iSl7wh1acOY5UgBL
      l6+QHS9haL0GQpIV0pksuq5SkaFR26MSItyhBWeeIwQgkc0a3L59n2/+0i8BEPoOu3sVymPj
      GLrSOx1aj4Q7tODMc2Qp1YwEod2iZXlkTQ1FM3n/+g1AuEML3i0OO8NZDW7feYBiJEmIQbDg
      HeeQAIxkjulSDsd1cH2xGiZ4tzlyHSCVTRMhkzBEP17wbnOkAFzbQdM0wjA66r8FgneGIwVg
      Wy0CSUNTxRy/4N3mUB/HdzqsVzvc+PAXSRvaKz+4a1n8n+9/r389MTnFt/anVQWCt4VDLUBt
      c5WGZfG9//5HtGzvlR/sODb/70//pP/35Re3vlZEBYKT4FALMHb+Cn/9/JU3EReB4NQRp0II
      RhohAMFIc6oT/UEQ8vsf3+1fF7MJfu2jC6cZBYFgiOOfDv3wHn4AlutiJIvkjZDy7PmXcocO
      wojf+97N/vWlcyUhAMEb5VgCkCQwEhkKCviJBKuPNwgSBlMyX+kOHQTDbhRRFOEHz7hIR8Jt
      WvBmOZYAojCka3VIjE/Rbda5+t4ldDnEeY47tKIMDy8kSUJVnnmdJNymBW+W4/0+gKpz6cpV
      AMrFfN/+6stkAsHbgZgFEow0QgCCkUYIQDDSCAEIRhohAMFIIwQgGGmEAAQjjRCAYKQRAhCM
      NEIAgpFGCEAw0hxLAFEYcOuL23h2jZ/97CbLT9dZX1nGCcSxKYKzzfHcoWWFcqkIoYymBdSr
      dRRNEe7QgjPPsTfEtJt1ZEUlnc4xPjmJqUTCHVpw5jmeO7SicvFyzx16Ynysbxfu0IKzjhgE
      C0YaIQDBSCMEIBhphAAEI40QgGCkEQIQjDRCAIKRRghAMNIIAQhGGiEAwUgjBCAYaY55NmjA
      F1/e5eK5cb5cXsNMFsm9wunQAsHbxku5Q7u2w8z8LKuPNvDF6dCCd4CXcodWypN06w2uvHcJ
      Q5wOLXgHeGl3aEqFvl24QwvOOmIQLBhphAAEI81b0QF/9Me3CP3eoFlL6pz/9atvOEaCUeGt
      EIDbsvsCiEJx0oTg9BBdIMFIIwQgGGmEAAQjjRCAYKR5KwbBR9G6/c+J3N3ehWyQ/eBfvtkI
      Cd5JRAsgGGne2hbgKH728Z/SqFX719/5a7+DoihvMEaCs85LCcCza3z+xSql8TI6DuWZ03WH
      DsOQMAxfHFAgOCYv1wIcnA5dq6GoJ3U69IFt+Jm+7xM9854g8PnJyhO2W82+7S9fukJCE256
      guPxUgKQNZN0OsfYxCQJ9aROhz6wDT9TVVWkZ96jKCrfv3+XH6886dv+4sIS6zd/zObDO33b
      N3/zb5Etjb9MUgUjwksJQNEMFhcX+tdvaz27t7rM8s2f9K/f/5XfJOjsEK5V+jbl6jmqiQ6b
      1lrfNps6T8EonWpcBW+WMzUI/lr4IbgD3a0wZKX1iD/Z/OO+6a/M/k3sRx1u/cFP+7ZLv3od
      e97nX338L/q2X7/0G/yNhe/A578XP2/8GsHMr7H53z7um8ypEuVf/fAkUiN4TYyOAI5J4Pp0
      653+tWe7eIHPXme3b+s4HYgCcBrxjZ5F6PnUf3qvb0pfmaP0Kx8Q7QyEUxXkUuZE0yA4PkIA
      p0BwZ7X/bymdQC5l+Hd/+Cm2FwCQTuj83d+4AWur4Hn7ASU4fwE2N8C244fNnwdZLN+8LoQA
      3hD/65Nl2l0XgHIu2RPAj38Ijf3WQlbgH1yAn38C21vxjb/797m/3aLS7PZNH12cxNTFp3wV
      RK6dQf7rn93hh7fjwfu//me/xZToVr0SQgDvCD9YfszdgZbit69dp1i9RfD0R32b+t7voJSW
      3kT03lqEAN4Rfr72lD/88nb/+i+cv0Bu41Pcn/3bvk2e/pDtTY2HH3/Zt1381fcpTJVorMRT
      xOnJHH4h4Fb1k75tOnmO2dQi6416HE43KCVMqptxOM3MkStfZW/9R/21TFVLkp+4QRiG/eVN
      CZBl+dDi5rNrPSeNEMCIYbe71FbjGS2n3cVpdtn7cqNvk1UZO+Xy450/69u+Uf4lsvI0/+nT
      eIr4vYkp/uriPD/9w3/Ut5VmfpFv/9a/4ad/8I85UECmeIlf/tv/md/9D/+eerc3dikkkvzH
      v/cP8X/2ADpO/37tO9fhwR9BK44PN/4O/+X273N782bf9E9++Z8SrHvU1uK0zH1jCV1bx2/d
      jZ+X/wUUOQPWXvy8ZAkiHWrVlxNAFIVsbm5TKpdQCQkUA10cjSh43bS3oLESX0chG4017u7E
      LZcTuFQebLD8w7iwlxemUBIPcLf+R9+mmDMoVgT3YxuXfhv8cfjf//Pl3KHbu5sEcsgXX9zn
      7uOnaGI2TnDGeakirKgK9WoNzUyQ0mXcQJzgIDjbvFQXKFGY4FKqgKZpSECE6P4IzjZS9Oww
      /CWIoogwDAmCED+CKOotYCqyhBSFOLZNRG/Er6gKmqbTsb2BcDKmrhD5IVEUISGBBJIqI0U2
      ROH+/RKRnCAMAqIo6oWVJBRVxQl8vCCE/ZApTSMKfALf64dTdRNFkiGMiOi9J5QlQinAi7yD
      W9EkHSmUCFw/foemEsohjm/3bZqio0kKcuj204KsEqIQ2V7/HZIig64iB/F7kSCUJSzH77uR
      y5JE0lCRfR/2Z0okSSLUtJ4tCvvvCTUdxwvxg6BvSxgqfhjiBkE/HxKaihr54Nv9cJGaJIoU
      Am84fZIs9b7BQbxVmZAQD7efN6qkIkcKbhjG98oSqiQRuK3+d5ZkFVlNErjN/oyPLCvIagrL
      84bTrGnIYdSfCZKQCBUJOfQgitMXKiZu4OCHcbxNNYEUQOAHcXx0FVkOIHT78UE2IAIpjMtd
      JGsQSUiB//UEcEAYhsiyTNdqY3shhVy2bzsq3HFtge/StT0SqRRS1LN5jo2k6qiK3A8XhQEd
      q4uZSCJLHPsdktQTatf1SZjG0JRc17LQDBNV6U3VHXk/9D6oJKHI8nPTYne7GKbZK9j7Nt9z
      qDc7FAoFJHrvCAOfdscilc70bdDbd3EwbfhV74iiCMuy0HUDRZH3w0U06jVUI0nC0JEkiU6r
      AWqCdNIYKHzg71ckiqL03xMEAWEYomlanBarg+UGFPPxd3Zti5blUirm4+/nuXRsl0w6FT/P
      c6k120NpPjItYUC1ViOdLaAp0it804CEqcfpG5hePahEZVlG+e53v/tdviYHD//Rx3/CdsNm
      fnaqb7tz+xahpJJOJZEkCafb4dPPb7K9s8v4+ATKfiIe3b+D7UUkk8m+bfXhHW7fvUuqPEvG
      7PXWAt/h9u3bdAMo5rIAVLfX+fmnn0GiQCmbgihk9fGXPN2q0ew4lAu5XkTdOp98sUImk8Lc
      LwwQsbr8gLWtCvliCVWG9bVVAmSsVgNkDdPQAbj1+WeoRoJkwuwXpL1Kla7jkdlPH8CdL78g
      QOmnGaDbafDFnfsomkEmlQRg+d4tbt19zMS5eRJab2vn6vJDuiGkUmnU/T0VayvLLN//Atcc
      o5AyAKjvrLGyVSOZSqFrvbxx23v83x9+iqyolIv7p3g7db73558hEzExXkaSJKrbqzxe38VM
      JEiaBpIk0W1V+eTmHRzPo1wsIEkSdtfi7u2btBwoF3L9tHzyoz/n6V6bhbmZOM2f/YjPH+9x
      ZXGub3v04B6hrJJJp/qF9cn9L7h19yFj0/MkdYXQd/n5zz/Fbu7S1YpkE720bD5d4c7tz1Fy
      UxTTJgDNvQ2WNyokk8lemqOIrZW7PFir02y1GSv14k0U8eThPTb26pSKJRRZor67xq37T6k3
      6oyP9fKB0H99m+KDwOf9Gx9x8fzckD2VMKk3Wv1rI5FifmaSdCaLPDCEyGUz7FWqQ7vLcsUS
      5fEZCol4qOK7Ntl8kWKx2LclUhmuXLlKIZPoGSSZ6blFdCmkeFD4AT9UkQKLTjeedyb0sQOF
      mZkpVFkCSSZwLB4/eYpmpsikEv2gSVOj3hxMSxKiANd1h9KcTSWoVOtDtm6njZ7MkM+m+7bx
      yRkWFi70Cz/0dr49uxhUyGeRjQzZRLwDI5HKYHcaOO6+81wU4UY67y3NMzU5Gd+smPzCRx9Q
      GjjWfnL6HIYqs7sbz40n0nmK2SSGbgy920jmmJmI90gEgc+lax9wdfF83xaFAbNL1/jmtcWh
      e33fH94sFYWMzZzn/WvvkTF6aZZVnasXL2BHBoWk2g+XzhW4+v5HTOVT/dvNZBqn08Q+cGuX
      JMbPLZJS/aHy0Gk3SebLXJib7fsN5svTlDI6+XycD81m4/UJoNNqsrm9Q7PVHrK3LZuu1Rqy
      7e5VyKTTQ7ZGZZuV1TVsPxZAvdYglXkmXKPF2vIdWs5Azy0M6HQsBrcLO+0adqhh6gPbdmQV
      RQrxvMF9AT6WZRMho+wrcn7hIqVsio5lDb370eNlKtV4U76m6dRqVbZ3dofC7W2v8Xh1ezgf
      WnU2tnZRlDg+1d0tllfXcLw44mNjJSo7ewxuKFVUjYQS0XbieHfaLbY3N6g04vy2rTZW18YZ
      FKQk0WpU8YceqFPMJIcKDfT64I16BWffS9VMJNGkgJ292lCoer1JJpMaurdrdanVakO2fC7D
      6tr60HexrTa1emtow+v29g7pXI54SSlia2OVdqPCZi12Tbc6Lba2NqnU4y2wfrdOy5VJGHG+
      SrJCdbuXN30BBg7VRpdUMq7Qsrn86xNANl9EliQ8N/ZSDDyXdCqJbg5n1lgxy+On63EmRBHJ
      4jQfXllAPciEKCRXKqM908/L5XOMT18YahVsu4ukJUiZcSYYqTxue49GO46PGlls1T2sdpyB
      KDqqHNBsDopUQpJ6/e5BLl+6SLEwXGjcbpuuG4eLooix2SWuXJgcCleemGVhbmrIk1lNZPn2
      N79ByoiN9UaLlAktO36m1W6Rm1lkOm/G9+oGN27cIGXu19iSRD6XRjNTmLoe543jYSYM0vvd
      roP0ybpBQh84UUOSyGZTpDP5ftcL4PHyMtu7scAVRUGRAqq1eI+DJCvYVoPgmUnFRDKFQthv
      1T3X5vGTVaTAoj2QvvHxMdafPME+qAgkhenpKR4tr5IaaPUUzeDGjeukEnErpZo5IrtGvRkL
      JalHbNZsup2BbyrrmIrPbmWwZZZe77lApqEzPh5/eFlRcEMwn1kxazUq1JvdeN97FLC7u0PX
      C9HU/bCSjBwGbG1u4O2fGB0FLk/XtpBkGXmg/5RMpnHtDt5ANedYDVp2gGXFGYOSZH6qSDaX
      j22hT4hKFA0UdgnGJ6cpFbJD8a7Wm+xurdId2Fk2M3uec9MTA49z2dnZBemZNDebWF17yJYw
      NJaXn3BwfkDou1iOj6poGGp8fzKV4tGdWzQsr2+rVytU6k2SB4UhCtne3sGxnaGTM0xVYnOr
      MuxzE9h88tlNVtY2h+LjeT5pU6bjxHlx/f1rjJXLQ+HWV1dY29obsgV2h+5gMxN4eKHExNR0
      r2sJaEaSS0sL5IoTZMw4fbt7NaTQouPFcXTcgNmZCcKBtaZGrUKl1iSZiCsC325Ss0KsTtwS
      eo7LwtJSf+zWy1yHzUob14krRHjNB2N5ros/UGtGYYjdbtC04ibZtlromQmuXz5Pv3soqyQ0
      2Fhfp+vGmWh1bQxNwt3vFkmKznQ5R8DwWUDtTovVJw/ZqbcOXkzTCli6MMt4Oe6/RqGH7YVs
      b28OjTUSyQT5/IAooojtzQ32qgM7uYBu18JM5UkM+N5vb29jDNS4imYgh11W1oa7QIqqMl4u
      Da2c1JttEhr9mk9Wdcr5LEjSUPx2d6sokU17oGCmUymquzvsDaRZNvNcu3yBjjXQDVV1srkM
      gTsovojLl94jMdBiEgVs71a5/dlPaQ28Z2tnj2x6sPWA8fEJpMDBcmJBZvKlobEMiobb7dCo
      7rKxEzva1SoVpIGDEELPQdYNpucuUUzExTHwHJL5CfKpOG/TqRTVvV0qtWY/zbWWy5WFWSYm
      4kMPGq0OVqtGvhB/+2qtxZVLC0PhIHp9Amg3ayQzuX4/GkBWNQLXYnegIJnJDI5toWkDzWXo
      UxibZmFpiYQeR8l3uxiZMqkBm5ZIofgWzkBto2sG73/4LWbH9guxJFPIJuh0bOrN/cIQRaxs
      VjEVj1wuPzA4i7Aspz/zBGC7Hpl0imwmbgHCMGR2eoZCIRbK2soysmZQrcd938B3mZxZ4MrS
      +aH8cbpdbNfrN3put01p8hzl8himFudZp2thWy3uPVzef6AHqsbU3CXGMnFh0JNp5s+fZ6KY
      7afZbtd4srKKpsU1JIHH9tYWTWtg4K8YuK0d9ES8h6DR7jI5UWbhyodD7/F9j/CZ32xwA4mE
      4g0V7N1ai6mxeIAZRRERoBom/kC3WDd0/IF8kDUDJbDpOMPH46RSSVzXIRh4t5FMcW7uPJMH
      75FkSoUMaztVmo34G6QL4yzMzQyNC4rFAo+Xl9kZGPj7/rOdtq9BOlsgnS0cshcn57k2Pd2/
      jqKIdDKBOzgQlVUUCTzP662m7deT+dIYbrXRrw2jwMP1QxQpivuLUYSZMNmo7JAf6J8ruomh
      q6QHZnE0ySc7c4HQGygMSGiqvD8H3qPbadG1bZJGPHZpN+uoZpJ6qwVM9V5Nb81h8HQ6RdWR
      ogDPGx4/oKhY7SZRNNVb7FMUHnz+CWp2gtJY3IUqFgoEKGST+4VT0UiZGuvrq2jZsX7rE7g2
      bjCw5iHJLCxdOpT/EJAvlCkVBr6Nb9N2JSYHJgjWnj7Bsl30RIr5AQfHcnkMVY3T57kOpVIJ
      j3FmJuPaNJdOsr61w8RYr9Z17Q6RpJBKZZiZGu4WO50Wjh9x0GDkCyWcSg03lDjo3TdbbZ7c
      u4WaLrFg5iAM2NzYxI70Q4JUpQgzEU+WmInhFusgf85Nz6CnYtF3rfbJu0NHnsW9R0+5dulC
      zxD6KLqJNDDz4dodWq0mri9z0C8KXJtao4XrBf3aOuzs8NmDOrPFFFlzP/fsKsvrdeREjpS5
      X3MFLl/ceYCeSFPM7hdiSWJm7mCabmBmSVIIg7gpBygU8qxu7GK520yUejV+Nl8km4eSE4vn
      3PyFQ+m1Wg3anTa+Ojx7lUwmCSS33+2TJIX3P/wFTHN42nF3exs1W2KiFIvZNEyCSCE9OMg3
      E9CwX3xSXgRBEA6NmRxfYm5mHGnAdu39G0feblkWRipu9Rzbotu12G3YQwJoWQ7SYG2dSONU
      b/GwqTI+MYEhS0RRiK7r0PWGvIg7VofNjTVyk/NgyBB6GMk8N27cQE/tt2aywrm5Oe49fDIk
      gN55Uxr6i7aEhh5fPlrh0sI5oBfvTLZw8ofj7m2tsTowYJIUjfr6fT7+5A4H6dDNFH6nxsbW
      9tAYQJIV1MjD2R8DyGaeD65dYnFxkaSxn2AjRz6TIqP6dPt9UolCPo+hSsNz/kcReazt1Kjs
      xrupqpUKnVYNZP1QcMMwDtkGSWZyNPc2+OLuo77NttpUqxXWN3c46No7VouffvJz1jc249Yn
      iihPTODZVjwGcGrcvP0A17WptuN+vN21WF9bYbs6MKN1FEqCrBlSqcczIrpxuBb9KlbXN9ir
      xN/PajXZqTSZOxe36rbVRtV0ksm4xQx9l0RhkkLSQNsv7IHn0rG6dCyHweWBruOyOD+DZe9/
      v8BhZWMTp2v3p2QJA3Z292g2anSd/TFlFFKptRkfKxw6nO1ZdmstvnFtCTM5sHU0Ck+2Beh2
      WqRLs6SU4SO0UuVZFrzaUCYUxybZ7OyS3J8SjKIQ13UJoyiuNfUU+WfLpKwyMTk85YiiMT8/
      f6w4RnKCGxfPkSoMdEPKE8zZLrv19nPuPJpuu4GcLPHN2bG+zem26foSSwvn+4t/qVyJxblp
      Wq0GxbEJVAUCt0u94/S6N36IoSkg6ZTHe61Bxog/VyZfJJ1MUsw9fy/wnds3Wdlu8J3vxD88
      KCERBj7Pnr53mIjLS4vombg1Kk+dozQ5O3SvmUyjqzIdN25JV56s0HUc0qme71JCV1B1E9/z
      SOgRHTckvz/oVY0kaT2kdTD9qqX54L2LhNHACYOyQtJQ6ToebasLpSxIMuOTUy9IQ4+d7S0y
      2Rx79QpzM/vlRZJPVgCJVAZVlel6w12MRqPN3NxsPws91+bBkw0yhorlhGRMBdVIsri4ePih
      r5kHjx4hRQHNzXVK+cv7VglVVY4tokFW1zfJJ2U6QdxvzpUm+bA0eSisYRhYbsDBN5YUldbu
      Opac4cLBHL2eYumIfGhVd0nky+jq8xvxK+9/xPRsBcvqYub2u2WhS7Vp0bK3KOa+eo/wo/v3
      KIxPsrm5w9RYTwTP+t8cEEYRpWI86zI1PUW13gRJ6U/pWq0647MXcFoV9INERyGV3W38bJby
      TFxRyop6qHtiGAmuXn0PWX9+K3wUV69eIwImJuKxZ6vxkjvCXgnPJlKG59MVWRpajVVUjUw6
      2TsK5Ov75r0U+XQCy/HIZweORAxd1jb3CIItPvrGN9CU4/cUl5Yu7k8Fv9hVXFJ1psbN3kqp
      0hPA0nsfAAz12Y8iCAKiSHrhWx7d/glNdYKLc8PjHkNTmJg6LMpBkuk0TrdLKp16bjgATVGG
      vqmZTDOdHB4HSURsrK9C4JMuxu+enZmhY7vxIuhXEAIyIe6zEwzHQJbg7p3bqOkSS/MzvTgm
      kicrAMd1CaMQ1xnuh1+6em1o8CZJMhPTs/iujf6iXHjNjE/NHjZKCrZjMzUxgfKSm7RlRUE/
      5m8WhJ7DZs1ibr5XQUSBz4MHD0gZCrnppdg35gjSuQKGtYPt+iTNw2OVAxYuX+fuw1Vsx4v9
      mqSet2UYPH8APTV9RN4cQbfTQtaMnvv3c0hkClxK9wbUfX8nScbQFB4/2SJfnsR4zoGzUeDz
      +ec3Wbz20bHi9czdhNFwtRT43skOgp88Wabjy1w8PzNk95wuWxvrNDu9QZ3vdulaFjs7u7wd
      m8yk3hyyrL6wJn5VosAnkmQ0zeiPC2RVZ2aiTCirqM/bax36bO9WaDTb6NrzxSZLEX4IjYHT
      HO7fv0cgqYdWul+VRCrDzMwM05MvPoFbkqRDzn6B7yHLyvNbs9DHjVSuXFokab58FwgkZM2k
      nI/HTGYidbICWLxwgaWFhUP9xuW7n/LDW8ukk70prjAI6Xa7aEbyhX3a0+DRowcoqkoy9eKm
      /1XxfQ+r06HVGXa4szotKns7WO5zamdZpZhNouiJrw5zgJbm2tUlFubP9U2GmUBTiBcJ3yCB
      Z+OGCgnTRHuemCUZq7HHZrVDMZf+6nBfReSxsrrKxnbs19Ro1E+2C6RqOutrq5jp/LAX3tgc
      11Nuv+YzkmkWF18hUSeEphsYAej6yR0ALysqzWYTRZXouCG5/RkRw0ximkkSLzhxQE9mSKlV
      WpZDOvGcGtGp8ac/fsDMdJnLS72j7efnL9CxOqjaq9Skr5fAsXj06DHnpseotD2mc1/dnSuM
      z5Afi4a8DY5Ltdrg4oU5QjVeJVcU6eQHwWEQ4D3zKzD1Wo1krvwVd7x55ubmaLS6wMsPto5N
      FJFJJ9mutmLHtyhkeXWNYj6PxHP6glFEGB7eTXUkepbZySKlARcOgi537j5m6eICxgmK/Djo
      6SLf/sVv9y6eN96SZNLpV68ku90OXiAxOx2XO8uyT34hrNuucvdRfDpyFHgUxyaGViHfOiLY
      3d6g+grrAMdF0XSKxSKGEuENDHyWFhcxEukhb9BDOA0+uf0QFO35tT+A1+H+49jfHFkAAAPz
      SURBVBV2BzfoSCqt+g6r61tffd8pcjAuOMkSUSiOMTFeZvCnt8Ynp0+2BYjCkHxpkkCP1wEk
      RcNzuqj6Ef4abwm265JOp1CNk+2WOY5DKlvA0GJ/nla9jmSmnl8YFJ3FxUUmiy8+ENdzbC69
      dx1DGtgkE4VkC2OxK/UIkExnOKrEnWgLEEUhyXSWcjHeltjtNNmt1HGfWRx7mzB1lcYpDBAd
      28F3LXYrPW/ZKAzRda23u+15s2Fa8liFH8ALJXbXH6MNOPYhaxSzZm/dZcQ5UQHIisqTh3e4
      fX+5b9vb2eO9GzeIfOe017xeCsuyD/3Q3+tGwaPjQm7fnSEKfWQ9ge63qXef/fXMVyNpKtQ7
      Po1aZcAaYrveC/1nRoETHwNMzc4zWY4HYFPTE6ytrCCr5qmfBHxsJBnParC2tfvisK9IFEUk
      Utn9c4Z6+RCFAc1mk0BLU0q/nsFpEMD1G++TSsazH2EkkcsXmZ0Sv5x54rNAnuuQSsfNtWqk
      WLhwcvPrr4XQp9p2mC64Lw77itR3N9jcqYKs9af1FD3x2v2f9qp1trZqLCxd6ds836O+t43l
      wdL89HPufvc58RbAMBOsra++OOBbRKPZ4vr77zF1TE/DV0E3k2RzPVfuk2wHdyo1Mtk8lZ34
      uHFDDniyWcO23vxC2JvmtZwM91WEvsu9+w+Q9UR/EeYsEPoua0+f4mspFs6dnAhOg8D3kRSF
      KIz6Y5rNrS3Gx8pESKjH9Ft6VznRLtDj5WUKKY0ab3mX5xlkWabd9cinzn7haOyust6ISCd1
      Lsz1nNs211awOh0y+RLjpfwLnvBuc6ItQLtVp9XqgGoyNX5GfoE9Ctnd2cH1A8xkmkw6ia69
      2dXSr0XocvPWXbLFMuf3d3H1z+4MgqH9zKPIibYA6UyedOas1TC9Q7Fc1yEIwhN1iDsV/C7L
      G3tcMmNfLFmWaDZqVOstzp0790q+Ne8K4jfCnkWSKI9NYJgtFN0YOgPoTCKbfPubN4Z9fjyL
      P/vBz5ibG+3CD6cwC3QmCT3uP3iEbb9gQ/0ZoLG7xsrGLrYzMKWr6FxemGN8XKwDCAEchayS
      1KVhB7IzipmfoJRU0Af30YYezY6Npp7x1u01IARwFKHP1l4dzz37LYCh+NTaXv83BABsD6Ym
      Sm/vSvwpIgRwFJLMubl5Li6cf9Mx+drYnsJEKc3QMSaaxF6tdWLbPc8SQgBHYFkWUuSxV2u8
      OPBbjuv7pFMJ1jfileCNrR1MXaX7Doxxvi5CAEegqBqTUzOU8q9n0/ibpN1s0mi2mJqKV7Qb
      LYsL5+do1KrPuXM0ONGFMMHbidNts1dtMjYxga6O9kKYEIBgpPn/H3Xi/+PAgssAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='food-area,item group' width='192'>
      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
      uwskEBwn/z9Wk18G/yTElgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='food-item,area' width='192'>
      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
      eeL/BxiFgCVFdJkyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='foodfeed' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='food肉蛋' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif area' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif continent  food' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif continent feed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif group' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbr0lEQVR4nO3d15McyX3g8W+ZNtV2enqmZ3ocvFusNyCwFK14hgwpKIkXiou404Oe7i+5
      /+Ei7uLMi04hXZwkUiS1vKN4yyW5uwDWYBfAwgww3va0r67qsnkPS4DEYna3C8A4VH6eJoDJ
      qeyq/lVWZv4ySxFCCCQpptS9roAk7SUZAFKs6XtdAenz+f0WS2sm5fEKBSP54P85JnMrdfTA
      RTfSaMLH04scqg7vUW0PJhkA+1jQ7/DBO2+jV49hzl1meHwK201w5uQoWVWQLB5hc+4WqUKO
      8eo0i7dvcKj6lb2u9oEiA2AfU/U0R0+fpucpDB0+QamYxRVFJqZL9OsNmrZNqTyCltLxHQtF
      S375H5UeoDzpUSAhBIqiPMk/KW1DhD4bW03GK6MA9Dp1PDXLUC69xzU7WJ54AARBgKZpT/JP
      StKOkaNAUqzJAJBibaBOsBAhjUaLYt5gZb1OpVygbfmkVR8llSWlJwhDn0wms9P1laQnauAA
      6JomuayBFrosbTRJqgJHURDdNpsrdU69+BJBEBCGITK7QjooBhsGFSG19VU826TrKZQyCTpW
      SFpxUdNpKmMVer0exeynkzCyEywdFHIUSIo12QneZ4QQdLomq+ubhGG419V56smZ4H2mZ1n8
      1Rvv0XUE33p+glefO7nXVXqqyRZgn7FtB9MRBEKj0e7tdXWeerIPsM8IIfj45hybjS5fef44
      +Vx2r6v0VJMBIMWafASSYk0GgBRrMgCkWJMBIMWaDAAp1gaaCAsDj1uz8xyeGmd1q0Va9Wn2
      AtKqi5IySCkJ9EyOsZGhna6vJD1RAwWAqiUoFnOks3mMronvQd7QQE1C6LI4v8rZ116T2aDS
      gTNgC+DSbjQRoaDV7jBeGcFyBWnFRUmP8sIrk3ieg2bkAZkNKh0cciJMijWZDCfFjhCCu4ur
      rG42ZQBI8dM1Tf7x7dvYviaHQaX40XUdI6GiKKHsA0jx1Gp3qLc6MgCkeJOPQFKsyQCQYk0G
      gBRrMgCkWBtwZziBbduk00m6XZuskcT2AnRClEQSXdUQYUgimdjp+krSEzVYAIQByytrFIwE
      lm2zSgKVEF0JQYVey2bi2DGGdQ0hhNzPRjowBnsEUsBzLGzHwwsCFARhKBBhgEBB1zUCP5Av
      xpAOnIHmAUQY0O2apAyDIAhIJXS8QKASomg6qqIiRIiu63IeQDpQ5ESYFGtyFEiKNRkAUqzJ
      AJBiTQaAFGsyAKRYkwEgxZoMACnWZABIsSYDQIq1SLtCNLc22Kh3KebTdCyftOqhpAwMPQV6
      gtGy3BpROlgiBYCqKPS7WwTaJMWUhlB0CB1ufTLHixdel1sjSgdOpFwg22yztNFkpJimZQWk
      FQ8llSGbSuMFIeXhIZkLJB0oMhlOijXZCZZiTQaAFGsyAKRYkwEgxZoMACnWZABIsSYDQIo1
      GQBSrMkAkGItUi7Ql00ay42xpIMmUgBsLs+ztNGgUCxgO/delJ1G81Wy5RHGykXgywNFkvaL
      aC2AopLQFHx0ClkdRUkhhMdWo06pOkkYhjIbVDpQIiXD+W6ftVqTynCejh2QUjyUVI6UrhEE
      PsZvt06UyXDSQSGzQaVYk6NAUqzJAJBiTQaAFGsyAKRYkwEgxZoMACnWZABIsSYDQIo1GQBS
      rEXKBeq26qxuNqiOV7Cce6kQWdKJBEEQkM1mdqqekrQjIqdCrCwv4QUCRIiiKAjhsrlS59SL
      L5FL64RhKNOipQMjUgsQeH3UhIHut2la99KhDSrjY/R6PYrZYQCZCyQdGDIZToo12QmWYk0G
      gBRrMgCkWJMBIMWaDAAp1rYNgLXFO1y89CH+btdGknbZtgGwvLS82/WQpD2xbQCMjI5g2TZy
      Pld62m0bAEEQIMIQubuP9LR7KADCoE/PdNFUTQaA9NTbNhfoxic3KI5WHwqA9tY6660+2aSg
      ZfkYqgcpgxQ6iWyesRH5omzpYHkoAFQtzYvnXiOXTD30y51OF8eyCEWRgpECJQXCZWlxjbOv
      vCpflC0dONu2AEkcPri1ynePHn7g36tTU3grG4yUCnT799YDFHnhlUl830HL5AGZDSodHNsG
      QBiGtBqNhx6B9KTB0SOHASjsbL0kaVc81AnutWrcml9jbKQsO8HSU++hAMgOjXLq6BShEHIe
      QHrqbTsP0O32EIFPuNu1kaRdtm0fIG2kKFdzJHa7NpK0y7ZtATRCXNcj2O3aSNIueygA6ouz
      3FrZ5NCR49FWzEvSAfRQAAShQiqV4NqHV2Q6tPTUk7tCSLEmV4RJsRbpMd+12sytNBgfLdCx
      AtLqp1sjGokkgQgp5HM7VU9J2hGRAsBstQgUhVbHQkFgK4C7xe35TZ4795pMhpMOnEh9gF6n
      wdzCCplcjr4bklZclLRBSkmgpAyqlWHZB5AOFNkJ3occx6HvuBTyObnR8A6TQ/37jN3v8zc/
      u0yz5/MvXjnM2ZOH97pKTzU5CrTPdLomm12ffqCxsN7Y6+o89WQLsM+MlIe5cGqUjabJuWeP
      7nV1nnqyD7AP3bsk8vl/58kWYB+SX/zdI/sAUqzJAJBiTQaAFGsyAKRYkwEgxVqkUaDQd3j7
      8hVmxoYfeE2qHqgYpWHG5daI0gETKQDWlhZxXJd+oFHI6KCmQHhsrm9yYnxCZoM+IetbazQ7
      TU7MnETX5Uj1Too8EWbbNorwaFufbo2opnOkdB0/8MlmMnIi7DG1Oi3+6tL/wFH7nBt5na8+
      97W9rtJTLfLtxTAMwCCdefDfUySfUJXiTQhxvwUNQrkvx06TqRD7jBCC5Y0lGp0GZw6fIbnN
      Lt3SkyMDQIo1OQwqxZoMACnWZABIsSYDQIo1GQBSrMkAkGJNBoAUa5Fmgh3bZG2rQ7Wcp/V7
      WyOmdJ0gDMgYxk7VU5J2RLRUCEWhW6/heR4JRWCrQKdJbbXJiRdeICWT4aQDJtrmuH0b33cJ
      fBfbC++nQ5dHR7B6FkPZYUC+J1g6OGQqhBRrshMsxZoMgB0ghGB1o8blj27Ss+y9rs5AhBC4
      rksYxuvluHK50Q6wbJu/e/M6XVdlrd7lj775yr7f7OrO4io/e/c246UMf/zNl0kk4vHVkC3A
      DlAUBV399AuvawfjFF+/s0rH1bizadFstfe6OrsmHmG+yzKGwQ++/TwbtQbHDk/u+7s/wIun
      Zqi1b1IdLjA8HJ/NDeQokHRfEASoqnogAvZxBWGI73myBZB+Jy43Lt/3+fEvP2S5ZsoAkOKn
      0zWZXTfxhC47wfvR7+8MIT15xUKeFw+XqGRD2QfYb8IwYPWj/0fQXmH4+X9NvlTZ6yo9lYQQ
      hGEY7RHI6rZYXN2gNFTEtP3fZoNmyCRTBCiUS8Wdqm9stOs1jIU3MBSX2o0s+Qs/2OsqPZUU
      RUHTtGgBkDay5DIZbMcnpQlCJQGuybVPbvHi66/LrRGfgFQmRy09hdvfJFk+gu/7e12lp1qk
      R6CttSVqXYdiNoXp/PZF2aksmUSKQFGpjJTkI9BjEkLQrtfpNOtMHj0uz+UOk32Afcbu9TDf
      uUwuhPb0OOOnTw1cVgiB47homkoikdjBWj495CjQPuM6DulQkFZVgl60RLqltU3+24/e4a/f
      uEivZ0UqGwQBS2uLtLvxSYMAmQqx7xRKJWrHDtHpdCmfPB6p7N2lTdqOSsfx2aw3OZLNfHmh
      33rv5iXeXnuLnFLg357/92Qz2ahVP5BkAOyQrtmj0WwzMV6JlFmpKAqlmWk81yNlpCMd89kT
      06zWuxQyGSbGRyOVbdstQjXEDno4rhObAJB9gB3Qdxz+508vUesFvHK0xLfPPzdwfk2/7/Df
      /+6fWa33+PPvvMSzp49FOnYYhiiKEjmfp9vr8v7sZcaKY5w6dCYW+UAgW4Ad4Xs+puMTCo12
      rx+p7Mr6Bu8vWHjovPPx3cgBoKqP1q3LZ/N844VvPVLZg2zXOsFBELCwvEaj1T4w8wSWZXN3
      YZm+40Qql81m+O75E3zleJFvvXo60t20OjbK6arBiBHyypnDEWssRbVrj0CXPrrJLz5eJ5uA
      v/juKxTyuSd52CcuCAL+5o13WWx4nKpm+P63X921xwLXdek7LvlcNjaPIntl1x6BOr0+oVDp
      ewGO40J+t478aMIwpGt7CFQ6loMQYte+jMlkkmRSvnJqN+xaC9CzbN6/dofyUI4zxw/t+zub
      EIKV9Rq3F9Y5e3yaykhpr6sk7YBIASDCEMfzSKgKfT9EJwQ9ga6qhGFIIpGQo0DSrgmCAMvu
      k80Yj9z5j7gznMVarYkmPCwnRFcDFE3B7jiMHz7CcEG7n2YqHSw9y+aD63eplIucPDK119X5
      UmEY8savrnB7rcNrJ8e48NLpR/o7kcJG1TT6do8gFPDAE4z80j8pQghu3v2E37z/Fj27t2vH
      /fUHN/n1rRY/fufOgdgVwnFd7q53sAOd28v1R/7+RewEK1QqFfLZLF4oHnoEUlUVIcQjN0cS
      bG5u8E//66f0rRCrbvEv/9V3By4rhMCyLXRNJ5WK9nrVQjaNpnTJJFVSqdS+v4YZw+D1Z6e4
      Mb/JubOH0DQtUr/S8z36/X60AEik0pRTn07Pf3aMQj73P+jeCc5ms6jK4F+mZr1Jrl9jQu+y
      tRJtNdjC2jw/++QnZPQs33/1B+Szgw+1nT0+za27S5w8PEE2s/+3uVcUhZfPHuelZ45Fnvl2
      PZd/vPQPrFtruzcM2rN7fHD7Pcr5EU4ffrqn2j3f4yeXf8SKucT5ma/y0onBd4bLZVOczMyh
      Cxe1GC2jc2lrkZ5qYgUW9dZWpAB449dXePNGhw/nO5w4MsloeTjSsffCo6R8APSsHqvWMp7u
      7t5M8MWb73Cp/jb/9+4/sdXYilRWCEGna+J50VdHhWFIu9MlCILIZR+Vbdssm4s4ep+5rbuR
      ynYth/mgypYosdCLmAx3+HmOpI/x7NALTFQmI5XtNBpoQUDQ79Mzd6/vsReK+SKvVM8xpR/a
      vRagYBRQ6yppJR3p+VQIwfvXZnnr4xUmywZ/8q2XB17sIYTgrcvXuXhjnTMzJb739Zd25dk2
      l83x2uQFFupznDt6PlJZxwt4034eAZztR8vILBVKfP/8p2uIo94Zz52YxFl7j/JQjsrI/r/7
      Pw5VVTn/zOvRF8U/jhePv0ylMEYuk4/UNAPcXanTD3WW6zaWZVMsDhYAYRjy7tV5bm56tDtd
      vnP+LOl0tLvqo1BVlbOTZ5gxxikPj0f6MmqK4JvGFYpKh452IdJxwyCgvrZOIp2iWC5HOm7B
      7fM9r4Hr+BBxbrTebHPlxjyHJkY5OlPdtcfbdqfN8toKR2eOYER4PVcQhrz59gfMLW/sXgCo
      qspwfphkMhn5BJ1/7ijBlTscro6Qj5hDlDc08nqPgpHetQvj9Pt89M+/ptPuM31ykjPnXxv4
      2MVsmulEDR2f4YIX6bi1u3MUF1boA92XnqMQ4Tm+0Wpxta9SFBZjjkMmN9h5FkLwi0s3mN10
      ub7Y5C9Hh8hmBl+I86gcx+E//e3/ZqHR45UjVf7yz/504NZ9a6vOT9/6EN9zdy8AaguLND/8
      CC2bZfprr5Ma8E6sKApT1VH+fHwkcqdHVVXGxwWL3TqVsVF0fXc+bs+y+D9zDdqu4Ky2wemv
      DJ5H1DO7lJQOQ0qb271o4/GB66GjkBAhjh8teK5umNzsJNES8GLXZKhcHrhsMZdGrfXJG/qu
      nWO732e94eAEOssbnfv7mg4i8FwuqBcpJpu7FwCzH7+Ld/OHOPoQmVPHmJg5NHDZR+3th2GI
      qW4yeqKLGwp83480XOu6Ho1mk5HycKQLKwC8DSqBiR9GXNASeBSUDjl6JIJonVF1ZIT//O4N
      inmDPytG2+FZhA5hUkFXA4IIwaMoCl9/9QxjxTlmpqqkIibxrW1scXV2mTNHJ5gcH40wWpbl
      aGWc28t1Ts/MRLs+IqSiNhhla/dGgVxzjQwdMv46dsQZzjAMabVbuJ4bqZyqqpweegZnQeW4
      cSpShmUQBPzXv/0J//G//JC//tHPI61hMDstvqm+wx8l32LKvBJpBMrzA+bDGe6Eh2l50Saz
      3rt6ixurW1yeXWFheTVSWZSAieIW+WyPMMJnFULwwbW7/PyjNX5+8UakfYyCIODHv7rKL65u
      8MNfXo10nhzHJdme5YL+If2t+UgzwbZl0QgLrIjxXUyHDtNYWhlHpBiNMGsthOBXFy/y5m8u
      Ua1W+Isf/OnAd5kgCHj37Wt4dcHlxi0uvPTVgTtLpmnSXLzOGa3L2p02jvONgTvQrtNHQ6Aq
      IHwn0sXxPZcZZYWc0qPhHx64HIBZW+ZUYgFfaLQaW8CRgcuWnRv8YfqXNEUB24w2+3x3bg6x
      MctKt4R94RnyA/YfANY3N9nYtNCdaC2H1TOZdq5iqDa9zkd4njdw6+57LhNajRLtx2sBamvL
      1BpNemaPdqf7xQdtLnJGneWQukynsTnwMYIgYOO9n/JvxD8wvfJjVpaXBi5rmibTvcv8O+PH
      PB9cpFGvD1y2Z5qc0ee5kLjCEWWBfn/wpY2e6zKsNBlXNkn57UgBEAQhfVIEaNh+tMuTMBf4
      Q/03/EHiPdzO4OcYwHdtEnjohLjO4Nux+L5PfuMtvhf8Pc90f4bZbg1c1nVdjvQ/4D/k/p5T
      7nuRzrFl9UgqPjPaOmHg4bqDPx04jo1GQEaxHqcFEPR9gfDqzM5v8Ny5cwRBgO/7uK57Pyfo
      3k7H6bBLmSZJxWPBdbCsT2c5NU273/T9/s/qb/OLXNdluH+HKXWdlHBp12tY49X7/YJ7i8CB
      h45pmiZjrFJR6thqim63g2VZn3vM3/+52+1yXJ3nkLqCHybodrukUqkHjvl5x+/3+zgU0EVA
      T6SwbRtFUe7X695n2+74nueiEmIJg6TiYVnW/d+/d8x7i3M+Ww8j6FBVNumT4hPPxrbth87J
      5x5beHREjhAF3/e2vT6frUcYhliWRcGaY1LdQAtDapvrFEvDDx1zu59rtRqnw6ucVOdIh33W
      19aYmJz80u+Eoij0zC4TygYVpc5GuIlpmiQSifv1+qLju46DgY9L8nECQMHrmyipDIeOHsHs
      dsmNfv6Lsounvs57H29h60O8fOosmQGHytLpNNrhb3B1zqJrzPDasRMDl00kElyrfI0PNxKY
      hdN849ChgctOz8zwTuFlwo6KWTnH+Pj4wBNwx06c4s2Lp2ja6+SPvMbQ0NDAIxSnnn2RSx+d
      JONtUX7mWwPXF2D0zB9w8eI8npbl7OkXIo2Nl05/g43rW5iJUV6NcH1SqRTB9Ne4uujQzR7l
      /NHjA5etVqvMlV9lud6nUXyZk9PTAz9mzhw+wi9zX6HevUV/4nUqlcrAHeHjp57hl5dfIOFs
      7d6KsDAMWVqYJ18oMFweifQ3fd9naWGe8sgohWK0Hagdx2F5aZFqdYJMNtrMqmX1WF9dZXJ6
      mlQq2gRat9thq1ZjeuZQ5KHBTrtNp9NmYnIq0sy1ECHLS0ukDYPR0WiJdPeuT7FUYmgo2uo3
      z/NYWlxgtFIhny9EKtvv91lZXmJichLDiDZ/0OuZbKyvMTU9QzIZbcCg02nTqO9iAEjSfrS/
      k74laYfJAJBiTQaAFGsyAKRYkwEgxdoTT4UQQuzq6itJehxPPAAURXnkVVf3ZvAOStl7I8iP
      mqm6FzsvHLRz/DhlB7k+T3we4HH20DxoZR8nAB6n7OOQ5/hBTzwAAGZvXKPjCI4fqhKQIJ9N
      03ccbCcgrYe4XojQEmhBHyWVZyi//Qzgwt3b+JrB2FAGO9DA7ZHOFeh0TCYnxh/6/V67zp2l
      TSarIwg01lZXmZocB93A0EJaloehBQRaGt/u0PdVZqaqD9f/5nUyxRGMlE7Pcgg9CyNfZrT8
      xTn2d25eJ10sYyQTpI0MmqLQbq6y2QwZK2fIDY1ipB5udFcW7tLzFGamx7FNC7Pvkc+mUAlx
      hY5vmwxXqiT17e+Ct659SLk6w63ZBU4crpLJFWg0O/R7LUbGpxkqPDgDfunSRWYmR2k0HbIp
      AzeTYLI0TDqdRlHg7q0baJkiYyMlIKTeaBN4PjOHpgEQgcf1Tz5B0dMI38HIZslkC6R1gZbM
      4bk2ntunODxGOvnwpKjT2eLK7DJnTp6gZ9lkkgoksljtNXwKTE18/mKcuVvX8fQchyYrCBTM
      VoNktkiv26FUKuB6gkL+d593aWmJhKaQMjIoehq31yJTKNFpt+m1GzuTDi2EIJlIcPPmTYql
      Mou2hwhdlEQGI6WR1hWWtzqMl4sILIby26ft3ovNWr2F5/ZJJBPUmi0cF8Ynxnn41AoECq1G
      g622RbVSxuy0CDQPR3GZXVhnamocnQZOmCf1ORm4QggUBI3aGk1TMFzO07d7wBcHgECgCpet
      lk+i0yHwAxK6SyE3QrOxRqhlMFIPp3I4gSDomSytBAxlMszdmKVyfAYDBVVV6DTrpHIlkoXt
      bxT5UpnlhQWGi2lu3JxleLhEvdGgMjFDPvdwPtBwPs1m18XwupikQTFZ6DkcnijT8xTEp0t6
      WJi9jkjkGZ+aol2r/e5zhiHZwjCh76BniyhC4Do2i7ML5ItlMsNF+o1NlFSBdPLh1GjdKFDJ
      61y9eh09nYZ+h6FiBiU7TvpLvpFj1Uluzi2xth7g9W20ZIrm3F1sJU2p1eb4iQffq5ZNamya
      LvbKLYxshkS2wPz7V/C1BCPj5Z1pAbY2VnFEgqwe4qkGKR2SGtTaNpXyEI7VxQo0VmevUpg8
      xsRQDlJZMp+5W3SaW9Q6fbz2Om6iiLm5wNTJ5yAImJ6a4LMNW+B7CEXFbNXxlCTCtVE1BTWZ
      I636NE2X8nARBdja3GBopEJ2m/dwOY5DMpnA7pnUGl3Gx0YgDGh1e4xVPv/dW47jkErqOJ7A
      bG1BIkMmnaDVbEHoURydILNNC+A7FgtrW0xWx0goIcurdUbGyuiqCghqGxuoepJKtYq+TWvu
      OM79fPh2o0YqW6DbNSkVc/gkKH2mBXCcPp7noYqQUEmi6goiCMlkDBRFobm1QccOqYwMEYY+
      9UaH0ZEyxr1zJQT12jqaUSSwOySyRVK6itluIDSDYjFHbX2V4coE6eTDnzf0XRaWVqmOj7Je
      a1HM6PhqGsdsktB0CmOTGNt9UMBsN+j0Q1KKj9DTzF57n+qx5xBuj8rYOJnPXE8ReHRtD7we
      tq9w+9qHHDnzMq7VpTyc35kAkKSDIhbzAIHXZ21jA8//4oUpG8t3aHS3fx2SaZo4lsVODfAu
      3L3Njdm5B/4tdEx60da2Pxqvy/pGG38P74Wmae7JcZ/ul+R5Pd6/dgdDCfAyeYZLX5CGLQQr
      a5vobY81v4fn2oxOHmWz0WZldZ2J4Ry5XIkjp49v0/d4fI7bp+8nuHHtIwJNwzUdlMBEGzlO
      fe4jXv7qdygYT/ZyLS7M43abWMLH84fo9jYxTYdsQsFF59kzg7+lPqqV+TtstC1KQ3mUwGF9
      s0M+o6Dlqpw+Gm1Xu8fx/wFKom5iYQjUHQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='gif pie' width='164'>
      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
      5X9OV1rzvRd4RAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map点' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='milk' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYxk2ZnXf3e/sUdmRlZmZe1d3W7bvblt99gee2x5PNIgVokXhNA8MPDC
      gIQQzBPiBaHhCSSEYAYGhNAMPAASwysaNBtj3G73tN3d1V1dS2blEhmZsWTsEXc75/AQkRGZ
      XVXdWd1ZlUucn5Qq1Rfn3nsi7vc/5zu7oZRSaDQzinnSGdBoThItAM1MowWgOR6UYnV1lfWN
      9ZPOyRNhn3QGNOcEwyBq7VKTGd78o//A5S+8ykc/+yk3X7jGq298j2LWP+kcPhItAM2x8dxz
      1zD7PvTrFD24fPUSpeXLp9b5AYzj6gVSSmEYxnHcSqN5ZhxbG0BKeVy30mieGUcKgYa9NmsP
      1plbXKbeaJH3ILE9sq6HshyWLyw87XxqNE+FIwnAcRxyxUVyaQ+YR0RDTJXw4N5dvvi1byCE
      QEqJHlPTnDWO1AZoN6rs7LXJ+B5BrMinLaSVIpvyiZOEuWIBIQSWZT2LPGs0x8axNYK1ADRn
      ET0QpplptAA0M40WgGam0QLQzDRaAJqZRgtAM9NoAWhmGi0AzUyjBaCZabQANDONFoBmpjnS
      bFAlJf3hkLTvEcYC2wRlWFimiVIS29YLyzRnkyN5bjjsU15bQ/lZRJzg2wppmsggorB0iaWF
      AkopvShGc+Y4UggUh0Os7By+ZWBbJoZpYhoGcRxjGIZeB6A5sxypBvDSWXIxFIsXCGOBayqU
      5eBcNZFSYpomSilMUzcpNGcLvR5AM9PoIlsz02gBaGYaLQDNTKMFoJlptAA0M40WgGam0QLQ
      zDRaAJqZRgtAM9NoAWhmGi0AzUxztPUASjIchri2QS9I8G2QpoNrW0gpcV33aedTo3kqHEkA
      cTBkt76HmQTUuyHzWR9pwLDT48LV5ygVbZRSCCGedn41mmPlaEu5DINuu0XKc5CJQMgEZVo4
      jkOSiMnRSPqIJM1Z40jToUUS0R+G+J5HIiSOZaBMC8uYLonU06E1ZxG9HkAz0+heIM1MowWg
      mWm0ADQzjRaAZqbRAtDMNFoAmplGC0Az02gBaGYaLQDNTKMFoJlptAA0M80RzwcQdPtDMimX
      aqNNPmUjLB/fsZFS4Pv+086nRvNUONp6gCik2W5TKzcxMvOEgx4SQafe4vIXvojrSn02gOZM
      ciQBSJGwW6lQmivQ2Nkll3cxLJdcIUcwDDHyGUzT1Nuja84cR5oOraRESIlpmSipxgtfDPbX
      vxiGoadDa84kR6oBDNPE3i/dtY9rzhE6ZtHMNFoAmplGC0Az02gBaGYaLQDNTKMFoJlptAA0
      M40WgGam0QLQzDRaAJqZRgtAM9MceTZou9unWMjTbLawDYGwfNKeixAJ6XT6aedTo3kqHEkA
      Ikno9ftYMmSjvMdcPoVSbVZ3atz48qt4QiCl5Jj22dVoni5SAApM+2gCSOKQ8tYWUWmefqdF
      yhHgeJQuXGDQHzCfH9UAejq05rSikhBRfpvk3u8jG6tgWmAYent0zflFKYmo/Izk1v9Cdraw
      Ln0N++YvYi2+OPo8CY54QoxGc4bYd/zox7+NmVnEef1XMBduPnSCkWH7ugbQnC2UUqhOmeid
      30X1apilF7CWXsJcfBEjNY9sbxD96DfBdHDf+FtYCzc/8X5aAJozg+xViX7yn5CNe7hf/1XM
      +RvI+l3E7vvIxj1U0MFIz+O+8bexSi8c6Z5aAJpTjZIJatAkvvU/EeW3cV//G1jXv4NhHM8Q
      lhaA5lShkhBZ/QCx/VNE/Q6qt4uRXsB+/pewn/8Bhnm8zVYtAM2xo5IA2d7CnLuBYR7NJ5RS
      o4brn/4rrKWXMS++grX0MkZu+dhK+0ehe4E0x4ZSCrH9DtGbv4WRmkcNm3jf/DXMi698ohOr
      aED01m8jmw/wf/k3MPMXn1medQ2gORZU0CZ887dQ/TreL/xDzNwyslcjevM3kb0qzpf/CvbV
      b40HoMzxvxay8jPCH/5rnC/9Rewv/eUj1xjHhRaA5nOhRESy+ofE7/wXnNd/ZRSnf6y/Xfaq
      xO/9d8TuB6Dk+E+ATDCyS3jf/vuY+ZUTyb8WgOaJUEpB1B9NK1j7Y2R7E+vCl3Hf+FUML3/S
      2XtitAA0R0Z2dwj/379B9etYSy9h3/z+aADqmHtmniVnN+eaZ4po3CP8g3+O+82/g3356yed
      nWPjkQKobKyysdPmaz/3OjYg4pBmd0DGNam2BhR8E2GnxusBBNls5hlnW/MsScp/RvSjf4v/
      g3+COXf9pLNzrDxSAOWtLbBzk/8rDIJgSC5dRMQhHWmgVI/VcpXnX30dodcDnFvk6h8Qv/c/
      cH/pnyEzJWSSnHSWjpVHCqBUKrFWabHflo/DIeVymUG7ibDSyHiIsj0uXlph0Osxly0Bej3A
      WUcpBTKGOEDFA5L7f4Aov036L/0LDDd70tl7KjxSAIkQICX75XkqW+Abb7zxDLOleVYoKRDr
      PyT+4PdQQQcME8P2wUlhLb6I/+d+A8NyTzqbT42HBCBlQL8XYpoWOqA5vygpEBs/InrndzAX
      buJ999cxMqUz3aPzWXjEtzW4/eFt8qVlLYBziFJyNPr61n/EzC7hf/8fYxavnHS2ToyHBGCa
      Hl/5uTfIuZ4WwDli5PjvEr3zOxheHv+7v445d+2ks3XiPLK+84yQtz8q8+efu/6Ms6M5bpQU
      iPLbxD/9rxjpEu63/h7m3PWHpivMGkop2oF4tACkVLT29pDoI8FOI0rEqG4FbH/cYE1jWKNX
      qaI+snEf2XyAinrIzjaGYeJ95x/oEn9MEEvu1oe0g+RhAfRbdT5a22Z5cUGHQKcIJWJk7Tbx
      3f+N3LmFkb0AKFQ8hHgAGGA5oBTm/A3sy29gXf3mqGH7FOfTnzWCWPLHa21eWc7wysXMwwLI
      FEu8ePMKd9aqzHYleXIopSAeIns7yPo9xM67yN1bmHPXsZ//Jaxv/hqGkzp8jYhAxKPaYMbD
      m8cRxJI/vN/ia5dzLGYd4DFtgG63hxKJrgGOgFLyM5ewKglRgwaqX0e2t5DdCqq9hezXQMSY
      uYuYpRewb34f61t/9yGnP4hhuXCO++s/L7GQ/NFqi9dWshPnh8cIIOX7LFzM4DzqwxlFKQVh
      B9naQNQ+QlY/RPVrqKiPWbiC89pfw1z84pFKX6XUqA/+x/8OI7eMmbmAkb+EVXoB8/kfYKQX
      MLzcp95HczQSofiTtQ4vL2e4mD9cSDxSABaSKJSIxyWYEVQSImu3STbeRO6+jxIx5sJNrMUX
      cV7+q5jFq+BmkdUPid7+zxAPcL/+NzEvfuWxQlAiJvrxvx8t//sL/xIzPf+Mv9VskUjFn6y1
      ubngs5J/uIZ8aD3A3uZ9fvTBHV5+7dtcXT76AofzsB5AJSFybw1R/gmi8jNU0Macv4l97eex
      ll8Bv/B4x1YK2bhP/NPfRfZr2Ne+jXXlG6Mux/EyP9ndIfg//xT72s/jvPbXn/nyv1lCKUWt
      H/Nupc9z8z435v1HvruHBFBbv8+7aw+IQ4cf/PJ3jxwGfR4BqKiH3Hswcrqoh+EXMdwMhl/A
      8AuosItsbSBbG6juDirqge2N1pFe+/Zjw4XRnjINVHcHubeG3FtFdiuj3YFNexRTuxkM20e2
      N0cOX7yGdfnrWBdfw8gsfiYnlb0qYustxOZbyNY6ZvEq5uKLJHf+N953/xHm0ku6ofoU6YYJ
      P9vuoxR8ZSVD1rMe+3sfaUVYOOyx2+iScaHWCck5ksT2yfkeQhksluYnApCDPeTOu1grr2P4
      hUfeT0V9ROVdxNaPEbU7oATm3I2R06WKqGETFfZQYQeCDngZzMIVzOK10TYZXhbVr5Hc/X2S
      zTcx/OJoLaqXQzbuIffWUL1dVDzE8PMYuRWs0vOj6/Mro+5CEUMyREUDSCKM3NJndvhPQiUR
      srmGrN3GvvE9jFTxWO+vmRIlklu7A+r9mNdWMixmnE8taI68JLKyU0EkApRCGQaohPLaBl9+
      41tkXBMp5ehhUZ/kvf+G3HoL3DTmtV/AuvJzAIjy28gHfwJhB3PlqxgrX8UsvfA515IqZGMV
      ef/3R4ut529izt/EyF4YTeHVJe1MsNmOuFMPuDnvca3oHfm1H0kAw16bO6sbLC0u0A0SMrZE
      2j5Z3yeWksWF+YdCIKUkqlclefB/Ees/BCWxrn97FLJkl3T8qzkW+pHg7a0evm3y2koGz36y
      Lmm9KF5zJpFScbcxZKMZ8spyhqXcp4c7j0ILQHPmGESCNze6zKdtXlrOYJufPcyd5W5+zRlk
      ux3y7k6fr17KHqmR+2loAWjOBIlUvF/p0w0F33uuSMo5ngl+WgCaU0UiFUEsEUoRC4WQikgo
      7tQGXC56vLqSwTzGnj3dBtCcOLGQ7HRjNpoBvUiQcS0s08Axjcm/l4sexdTxl9daAJoTo9GP
      ubU7IBKSpazLlaJH3reOtYT/NHQIpHnmKKVYbQQ8aAZ8/XKOvP/4qQpPGy0AzTNFSMWflXsI
      qfjezeLn6sI8DrQANM+MIJb8cL3DSt7lxcXUqZgQqAWgeersN3Jv7fT5ykr2M4/aPg10I1jz
      VBBSUe/H3K0PGcaS5ZzL8yWflHO6fETXAJrPTZhIOkFCKxC0hgmdICGRilLG4dWLGXKfMB//
      pHmiGmB3e5NGNyTnQmJ75DwfYVgsLT48G1Rz/hlEgncrffqRIO/bFFM2cymbnGfhWMYz7c78
      rDxRDRBFEWEYkssUsFXCvdsf8qU3vqXPB5gxIqG4tTtgbyh4ZSnFhWz6YykkUoA8kdw9GU9U
      A+xVK9Q7IfmUOVoPkEoRJwkL83O6BpgBpFLcqQ1Zbwa8uJjm2px3akObo6IbwZoj0QsFP1zv
      cDHn8uWlNNYJ998fF7oRrPlUVhtDPqoN+cbVHHMp+8yX+gfRNYDmsURC8vZmD9OAr17O4ljn
      b49RXQNoHkknSPjTBx1eWkpzpXj2Y/3HoQWgeYjmIOGH6x2+cyNPwT/fLnK+v53miWn0Y97a
      7PILN/Lkz7nzgxaA5gA7nYg/K/f4/vOFUzdl4WmhBaBBKUWlG/F+ZcAvvlDEf8K9dc4yWgAz
      jlKjUd1aL+b7zxfOZU/PJ6G7QWeY/f11ShmHl5dn82QZXQPMIEoptjsR71b6vH4py3Judk+W
      0QKYMRKpeHe7Rz+S/OCFIu6MhTwf54lCIKXUdBdojMkOvIZh6BDolKOUotFP+MlWl+cWfF4o
      nY4liSfNE9UA5fVVItNHDlsI08VRCr9Y4uLiHICeDn1KkQreq/RpDGK+fSNP1h0VVPp9PaEA
      wjCg0WmzUJrDRdCqt8gtrkxqBs3pozVMeGuzx42FFN+7kccw0O/qAE8UAok4oNbsk/NH6wE8
      20ZKge/7OgQ6ZSil2GiG3KmPZnHOwqjuZ0F3g55DlFJ8WB1Q7yd881pu5hu6n4QuFs4Z+xtP
      GcB3buTPxLrck0QL4BwRCcmP1jtcyJ6ejadOO1oAZxwpFZ1QsNUO2e5EfOlCiitF/6SzdWbQ
      bYAzSCwklU5EuRPRCRJyns1K3uVi3n3iQ+JmHV0DnBGUUuwNE1brAXvDhIs5hy+UUsylbR3n
      fw50DXCKUEohFCRCESSSMJEEiaQXCrY7ERnX4rl5nws5Rzv9MaEFcMIopUjkaHLaZitkEEtc
      08B3TDzbxLdN0q7Jck6HN08DLYATQkhFpRPxoBkQxJLlvMvVoqcHrJ4xWgDPmEQqVhtD1vYC
      lnMu1+f9c7/w/DSjBfCUUUoh1aiPfm0vYLMVspL3eHExhatDmhNHC+AYUUrRCwUPmiGdICES
      ilgqDMA2Da7OeVwr+tiWbsCeFp5QAIooijFQKMPCMk1AYVnWTAtAKkW1G3OvMSQSihdKKYop
      C8cycc/INuGzyhMFn8Nui/fubLKQd5GGhQwjCkuXWFoonPsp0UKN5tUnQhEKSZiMuioHkWC7
      E5J1Lb58IfXwWbZKIfW8+1PLEwlgZ7dKNOwjC2lME8I4xjCMycKK87LAIhKKu/UhzUFCLBWJ
      UJimgWMZOJaJYxn44y7KrGfxnesFxmtMzs1vMCs8cRsgjmNEHCJNF9c2kVLiuu6pD4GUGsXj
      /UiSsk185+EGqJSKB82Ae/WAGws+F3MurjVyfD2x7HxybhvBUilaw4RKJ6I5TBhEEsuEtGvR
      jwQGcKngsZJ3yXkWtX7M+zsDiimbl5bSetBpRjh2AcRC0hgkWAZYpoE9/jMNA8sEyzAwn+Lh
      CpGQbLZC7jcC8p7FSt6lmLJJO9ak90UpxTCW7HRHo69BIkk7Fq9czDwcw2vONccugCCWfFQb
      kEiFkKOBn0SOGoJCjua6oMAywbEMMq5FzrPIeaPD1Tx7JJhPCjnE5J6jkn6/YbrZCmn0Ey4X
      PW7Me0fe31JIhWmgw5wZ5ERCoH0xREIxiASdUNANBb1QMIwlCkg7JjnPopiyEXLUv94JBWEi
      EZLxKYRgGga2ZeBaBktZl5W8+1RrGM354lS2AYQchSjdMKE1FBgG5H2LrGuRcsxPrSE0mqNy
      KgWg0TwrdFeHZqbRAtDMNFoAmplGC0Az02gBaGYaLQDNTPNE4/5JHNIbRPiOiTIdnAOT4TSa
      s8gTCSAYDtmu7OI7JhKDsNtn8eoNSkX73K8H0JxPnigE6rQaeKksUo6mK1j2aCWYHpXVnFWe
      aCQ4DIaEsSDlOZMlkUpJbNvWI8GaM4meCqGZKZRSDMKYSr3H/e09vTeo5nzT6Yes77ZYq7RY
      3W7S6gXYlsnyQpbnV+Z1DaA5m0h5eLMB0zQwgFp7wL2tPW6tVSnXu6RcmytLBZ67OMfV5QLz
      uRS+Oy33tQA0pw6lFP0gpt4eUK512Kx2qLcHdAchQiriRCCkGm/LM0KMeyCzKZcvXi3xpeuL
      XFsq4DnWJ3bSaAFonglKKYQYuVoiJYy9rh9G7DR6bNW6VBpdKo0egzDGcywuzGVYKeW4sphn
      sZghl3axLXPydxy9j1oAmmNjv+Te6wzZbfbYrvfYrLbZ64x6D+3xYX2WZWCMD1pPew6Lcxku
      lXJcXsxzcSFHyrWxn9GmBFoAmicmEZJGe8B2o8v6bptyrcNeJyCKE1Kew0IhxWJhVHpfXSpQ
      zPl4jnUoZDktaAFoHskkDm8N2Gn2KNc6lOtdWt2AREgWCikulfJcuZDn8mKe+XwK95Q6+Seh
      BTBDSKlo9wNqrQGDMGYQxAzDmH4Q0x1EtHoBre6QWEgSIUeleT7FpVKOS4t5Li5kmc+NHP28
      jP5rAZxyokQwCGIAXNvCsU0ce/Q7K6VIhCSMBXEiCONR2n4Q0R1E9IYjp97Z69HqBoRxQiHr
      s1jMkPUdUr5D2nPI+A5p32Ehn6aQ8XAcC9s0Z2J3jc8kgNpOGWH5ZFM+iRAUC/nHCmD/Je0j
      lULKRz8yFtPegaOk/ziWZYydxJo0uB6HlGrSdbafPyGnz0qERDHNuxBq1JMhx39CItT4XyHH
      +xPJ8Qa6EiFHpagcpx3ZRmmScfo4EZNrolggpSQWkk4/nKS3TIOM76JQxLGYlM772JaJ51jY
      toXvWPieQy7lkk275FIu+YzH0lyWhUIKx7JmwqmfhM8wEqwIY4mKOtz66EO++NVvHPq0XO/w
      m7/3E/ZlZRgcckbDMLAe8xJsy+Tjn5imgXnEuDIRkjgRRImYOPLBzXsn30CBaTKJV63xcy3T
      xDRGmd7Py6TnwjQwTAPLNDEMcCwT0zSxLGNSWu53zdmWiWUakzSObZHynFHacReeaRg4toU1
      vqfjmFjm6LNc2sOxzceWwkopFGCgN/P6vHymGuDB/TtI2yPjugjTYWWpNKkB9m930i9m30n2
      PeVgbk46b5rTw7G0AaSUCCGOXFJrNKeFY5kMZxijMOXjApBSatsx2pQatUM+boPDtdpRbafl
      e52k7ViK7H0BGMZoy8Io6BMmo4dJEVOtNYiC4figCROZRNTrdXZ3ayiMcbqEfr9PZWd3lDHT
      JAgCkiigsluHcbooDAiHfbYq1clze902vUEweb5pmiThgGqtRqVan9hEHLK5ucleqztNFwVU
      KhX2Wp2HvkenO00X9Lu0un36/f7ENux1aew1aDTbE1schfTbDarN6bXD4ZB+t02zfeB+QUCn
      tUej1Zl83716lUjIiZOapkmv06JarR66dtDrsrmxwSCIJnntd1vs7FToD8OJ7ePfwzAM2nt1
      huHot953htZenb29Bt1+MLEFwwE7OzuEcTKxDYdDmvVd+kE8+p2AIAio7WzTH0Zjm2J3dxfF
      9F2gBLu7u1Qq20j2bZKd8haVagMOptupsFtrTN73fr6Hg97Uf+KQWr1JMBwgFeN3G1BvNNip
      Tn3lUT41HA4R0ZBKtTHK33EIYF8EYW+PDz66x+q9u3SDBMMw6DVrDKOYWx/coheObM3aDvVG
      k2Z7j2E8WlEWB31WV9fY2K5M7teo7fDT9z6g1dpDKIVhGLQaVd5+5z1267VJuu3dGknQY7M8
      vbZS3mZ1dY3t8Zc3DIPyxgbVVoda9UC6rU0SBesbG1PbxioPNsvcvnt/aqvsEA17vP/R3elz
      Kzs0m20ajerE1m7WWV+9w05zMH3u1gZ31japVXem126t88Gde1Sr1clLrjdbtKoVqo3WxLa1
      tcWD9Q0qO5WJbWNzk+5gwNbmxtS2sYlSio3NrYnt7kcfsr29zdrG1LZb36NVr3DvwebEVq3v
      0Wy12akcSLe9ya3bdxBjQRqGwerqXbZrTba3NicivX/3I1bXN6nWRw6FFOy12pQ3N+j0hxO/
      WL2/ylZ5m2Z/dKrQoF1js1yh02rQGox9pVWj0Qlo7GyNznAwDAatKrfvrnL37t2JrzTru4RJ
      zLu3PiBMRvmrVio09lo0W3skcuQr4aDL6uoam5WpD1R3K7zz3m3a7T3gmEKgCabNUqlItSrI
      +Q4AbipLzowZpHOkvdHjUtkCS17C9k4Nd9zLkgi4vLLE+nYNqcAyIJ8v4qdSVJs99jtDvFSO
      L9y8SrUTTh47XxidUTYIprZccZ7nsxlq7eHUNjePkxrSD6fdiI6fIpKKV19+aWJTpo3nuLzx
      +lcmNs/3kFh8/SuvTmy+72L7WRbmChNbGCXMX7zB3EJpms5zyRZLLJXmp891XK5eu8HFpcWp
      zTQwvSyl+en9UimfuQsrlObnpnlxLNLFCyyVprZisUCr3SZfnD43k0kzGPRZLE1t2bRHfxhS
      WliYpkt5BGFEKlOc5sXzWSrN0e31yaQ8AAq5LMMwIVeYPjefy2LaLtlMZmQwLXzbIAgD/CiG
      TArbzzI/P4+Qgow36ip3U1nS42tS7sgH/EwByjUMP0dqfIKP46UhqZPKzZMZ+0++OE91fZO5
      +dLkpJ+FUonWRhnL8difRmSaFpZtkfP8SX6XSgt0ByGeO7Ida6vVALY21gnjZNKdb6DYWF8n
      Tg7M3TYUDx48QGKw3/FvIFh7sIHtOJNrTSV48GDr0DiAScKDjQoHBwxcU3F/bQMhxTQvMubB
      xjbGwW5EEVPe3p30/wMEieTS0gLVWn1iC4WiVMyOq9MRkYSFQoZavTmxxcpgPp+i3mwfthVz
      tNpTW4LFfNaj1mhNs2JYLORSh2yG45H1TWp702uV5ZBP2TTbnWk61yfvW5PwCSAIQqRURGEw
      tQ0DgjAiDMMD6QLCKCKOogO2IUEUkyTxxDYYDDBMiyAYHrpfFCeEB58RhEilGAZTWxxFhFFE
      MC6QZBIRhCFSSqL9cZUkQiQJcRyTjGeJRsGASEA+4zGM5fj+A4aRIO3bRMnINhz0CWNJ2neI
      x9f2+z3CRJL2XfaHSXq9HpGEXCY1yVu32yXBwBmr5FgFIKUYdz8ak27H/Z0iDnY1CSHAMJj2
      ZoMQEsZrjA+ls0bx4iGbbcIBZ0/20x1w7ERIDMuEA4NGQo5tB9JlXIufvv8BnW53Yks7Ju/e
      +pBub2pL2SbvfXj7kM2zDN778CN63d7E5ppw6/YdugdsjqG49dFdur2pzUbxwZ079A7ZJB/e
      uXvIZinJ7Tv36PX6E5upJLfv3j1ksyyLMBhi2s40nWUTBgOsAzZr3+YctgXDPvZBm+2Mbe5h
      26CH4x60WQSDPs6h+1kMh8MD9zMwZEwkR1vbAxiGiZIxsZyOC5mmCTKmvtfBsfZtFkpENJpd
      rH2bZSGTkL1WD2scilmWjYhDWp0+++18y7JIwoBOdzD9jW2bJBzS7Q/Hv/kxYtkOqUyehfki
      ybjUtm2HdDbP/FwesW9zXDK5AnOF3Kh0twwcxyGbK1DMZ8c9FgaO65LLz1HIpRibcB2XXGGe
      QmZarXmuS764QCHtTW2eS35ugXxqanNdl8JciVzKPWQrzi+S9Z0DNo+5hQuTkG0/3fzCBVIH
      VhN5nstCaQn/wEk0nuexUFrGO3AIn+d5lBaXD50M73kuixdWJi96/3ssLl3i4Pl9nudxYfky
      tqkOpVu6eAXLOFALui7Ll65iIQ9c63Dx8nVMJQ6kc1i5fANDJYeuvXT1OQw5tXmuw+VrN0HE
      h669cv0FlIgOXXv1+k3k5FoD13W5dv055PgZpu2QSmdZKM1PSnvTGvvKQnFkc0b+M/EVocAe
      +U8mW2CumBuVW9bIf7K5IsVCdrwqbOQ/uXyRYi59KG+54hzFAzWA67rki/MU0k8hBJJCYDse
      tZ0yw2j05YVIcFyPne0yYTx6ETJJcF2X7XL5QJWY4HkuW+Wt6cKJOMb3HNY3tybdeEmSkPYc
      1ja2Js+Nx9Nw1zbLB2wxKfewLYljfNfmwdb2AVuC51isjxvQ++lc22TjoC2JcSyTje2dQ9c6
      pjFpZO1fa5uw9TGbZcLWTvXA/RIsQ1HerU3znCRYSLYP2uIYE8H2gXAsiWMMJajUGofuZ8iE
      nQO2OE5AxOzU9w7lWYmI3Ubz0LUqiajutQ5dK+PwkC2JE0Q8pHYg5EsSQRIOqE/CsfF0j2GP
      RnNUWyohMB2PvWqZfjDyCykTLMelfsBXRv7jslspE4x9RYgEx3OpbJeJkrEtSc0J958AAAAk
      SURBVHA9l/LW1qSg3fef9c3ypKBN4piU57K2sTWJQA7aAP4/Y1N/m7pKrFUAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='rank' width='192'>
      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
      ZPM5ZKlQ9cf3xZmYQmu8k3Xr27Fsi5GRJC4ijmHgOi6m5SLJIc5afDs3XTSVbUvv5aHX9iKK
      Ip6eR3c98ukdrFpv8qlvfpfbLptN6Jh5tiBnXftF7rz8DCKqCsJRb0oKgq1jWm5h8fOh1byw
      v4K7/vZ73LqoxZ+wO83x8EjnMgQDQUKBIKJwZDBrmAbBQGBsTYQkSQQDAUKBEK7rIooiAU3D
      9VxUWQU8QoFCXpDnFRb1j3MQnOCym6/hid/ez/dfcqk94zJuOec8yp54gn/6wTOEa8/gUy1l
      7F37HC++vZ+MHuLcugjB+hZa0r/k+z8c4dabL6BCPcgvfnovlXKOeO2R2BMlGVmWmHnxDQje
      Ezz4m5f54tURZEVCKJ/FJbPW8sAP7yFQN5ObF59FfW4Z//WfQ9QJBqEJfufndMZ1C2sBkpl0
      4RtekqmMV+C6xQosSWP/lUSJnoE+EATikYIfyHEcHMclpMlYtkz/8CCaqiFJfyAZzjAMfybY
      57QnHA77Vgif0sYPAJ+S5rhjgNEBhY/P6Y6/HsCnZPHNcD4ljx8APiXN+APAzbJh6cP8173P
      0WsWX/MyrH7qF/zTz59mIG0ce7yjs/nl5Ww+PHzqSutTcoxOeB3u7aa9q5NsLgsUnu/3DfTR
      3tVJKpPG9TyS6RTtXZ109/diWRamZdLV18PA8CCu62LZNpni+aOMOwDMwS5e3deH2fUqm9uy
      eEB+9+s8vq+ML97xCRJh9dgTXIv2HdtpH84e93p/4Ddmz8qn+e2be96tPhnez7/+689py5nH
      PdXn9MP1XLK5HPFYOTWVVSQzaWzHYWhkGEVRqauqIagFsG0Ly7apraomqAVIZdNkczki4TCC
      IKCbBnk9jyQeW+XHnQ49NNCBGpjAnFaH7bv2c151Fc//9in27gjx68eDfGHxAna+9jzr27NE
      66Zx1ZXzAIMD617kP18cpnLBtdz+sQlseeEZlm9pQ020cvOdN1HZv4aH3+xCTB8iHW7hhmuv
      QAkkqCkrw0x28spzv2Nrt8n0C69jQvdvWbt2AyP/X56LF1/PbHUfT7+4AV2r5OKrr2NW3GDl
      6pWk+4Y4OCRx+S13MK/Jdyp+lBEFkXisfEyNKEsynuviuA4VkcQxef4V5YWdaUTRQBCEYjqE
      hCg42LaN67poo7qU0euPtyCdO7Yi17bQPLuVkd3bsNVKLrzgAiYtvJKv3HQpPaseZlW2mTtu
      XYx1eDsdSR1wCdWfye3Xn8OeZ16l3XFQ4o3MXTif6OBKfvP6QeyBvaw5aHHhdbeTGNjI2/t6
      6d27jV2dwxzctJJtQ3GuWXwl0+tjTF94GdOnz+XWL36KRTPqkZUI0848i0llgzz/3AqGh4dY
      t34Hky9czMVNwyxbt+/U/SV8PhCEYuZnNp9jJJWkPBrFw8O0LNq7OznQ0cbg8BBecQONVLGF
      KAuXEQoGGRoZxjBNXNfF8zzauzroG+jHcQuZDuNsAVJseOttNgkjDK/PsLFNojd/PTWhEEqw
      jESsjHf6uph+9l00VDoEVanYfQlS21BHdXWSkOOSH+pkxRurCTY2kNdN8qYFCJRV1FNbU0k8
      EiDtHtmhpG7qGUxqe53lzywlMudSPnd2BE0NEo3HCAdc3lq1jC35RiJWBsM28TxQowkaq2vJ
      xsO4ST+d46POqBrRNE3isTiyJGHbNpqqUpWoxPU8BocHMS2TvKEjSzLRskhhlZiq0Vhbj24a
      2LaNaZrUVtWSzWWxT0SN6PRsoUO+iG98+8+56ytf5sZpCpvbUsccU9cwiZ1vr2DDtl10D2WO
      ex07O0inrjJn5iwaEsE/+rl5Xadu8jzmtFayY9cubEmjWhxhw4adHB4aZqBnkOqWOUxprMBf
      NHZ64rgumWKOv2Ho5PJ5RFFElhVGUkmy+RxQWCKZ13UEIJfPYZiFhzKu56EfpUbMF9WIQrHr
      JN199913/7FCWJkMUvMcFrbWE4mUU1sVQghV01gZIVheQ3NNjEh5JcbAITo6uzk4lGfBOefR
      WBmjsrGBRCiAEozSfOZMJgppdnemaGidzuTmKTRVRgiU19BcG0WRVSrrGqkuLyNeW0+lZrJ/
      1276jCCLLrqYiY01TKwJsX9nG3JiInNaq+g40E6wbiozpzYzoaGacCRGU309mqpQlmigsbLs
      j/16Ph9iPDwsy8YwDUyroOsJaAECmoZu6liWRSwSQZblsWNMyywYojUNz3URBBFVUZFlibye
      JxQMEdA07rnnnntO2Uzw4I5l/PThV8m4AWZfch03XDKXMsWfZvD58OKrEX1KmvdUI7pHDUR9
      fE5njhsAlmX5C2J8SgK/k+5T0vgB4FPSjDMAHNJDfQwms2PbzZvZEXr7hzGd44wXXJPUSAb7
      FBbUp3TxvIL0yrKtY8annudhO/bYLK/tFI6xHXtMp2LbdkGrWPz598e34wyAJEvu+Rp/9eNn
      GMkXnIybn/whf/63P2HHwHGS3dJ7uO+fH6UD6Ny+kk2Hkif/2/uUNAU1Yoah5BBDI0OMpJNj
      ldkwDXoH+gr7hLkOw8kRhkaGGRweJF/cT2xwZIih5BC2Y2OYJjk9d8z1x50MF6qqZqLn0ZXT
      SWgZOnqqmTOt4FqxzXxBieiJBMsiHD3Hq5WVEw3587Q+J4dAYcvTcFGNOJIeKQQAHnlDJxgo
      1DZRlEjE4oiiSDafw7ZtBKA8GsOyLGzbxnYcgielRgSQY8yd6LDlYIrW1A76Js6mvnsP4NCz
      cz0vrNxEajiJMPNqvn55aOy0PW88QsfM7zC5KvTe1/bxeQ+OqBEdcvk8qqwWUxr0sY3uAATA
      tC1yeg7Pg0g4gmWbpLMZBEBTNQShkFSnqkfUiCcwCBaom97C0M597NqdZPrMI15PQfDIpdMM
      DnWxdcNecn/gKj4+J8Jovz2dzSBJEqFQCMdxMAwDTdVwXRe3aHmTJAlN1RBFEcexCWpBwqEw
      oWAIBHCK49VcPjf2mP+EngJJNbNoHnydF/qCTI0XmiTywyxftp4ZN36Z7911PRUR9Q9fxMfn
      BBhVI4aOUiMWBrsmA8ODJNNJUpk0hmEgIBAKhAioGrqhF9SIakGNqMgK4BEMBAqbZp+YGlFA
      VlREIcqEZo23egTKggEURUbUwrROCvPcQz+noy6MyyQEQURRZURAlJWjNOg+PieGW7RCpzOp
      ggNUkqmIV1BTWeiBZHNZEEAQBQaGB3BcB0mUiB2jRnQIakFs22ZgTI1Y0P74akSfksVXI/qU
      PH4A+JQ0vhrRp6Tx1wP4lCy+GtGn5PEDwKekOTE14vMP8dOfP0uPCWDTtuZZ3tg59L4Vzsdn
      TI3Y00V7V8eYGhHAdmx6B3rJ64U9hFPpFB1dHXT39RxRI/Z2j6kRbdsmkzvWWHICasTDvLJ/
      ALvnVbYczOLhMHhwC3t6TlB9WKR3/e94cPkufMmhzx9iVI2YKI9TU1lNKpMaS29OZ9KFNOli
      sptlW9RU1RAMBEmPqhHLyhAE0E2dnJ5DEo99uHMCasROtEATZ7TYbNu9n0umTjvypqez5eWn
      eXFjB2X1E1hw9uWcWa+z9NHH2ZvWWLT4ds5qNFj9+kZiQZcD+gTObgqRqIojWf387hcPsWvY
      ZOJZV3D1pWf5O8P7jHE8NeLo/9uOQzBQSLKUZZlEeWG7XGlMjegU1Ygiju3gud6fokbcglLX
      QvPsqQzv3krWGH145NL19pM8tl3g1i/cxQz2sr5zkLeX/Dd7lVZmTQqydMmDHOwdYNXTj7By
      uJLLL5yO2b6FDYeS4DhUTJ7N/AVnsP2NJWw+6HepfI5wtBoxmUoSi5YDkM6kiZZFjnlcX1Aj
      prAdm0i4jFAwxPDIEKZp4hyjRuwby3QYZwuQZMNba9jAMIPhLJvaZHqyVxffs+nt7KBp9q1M
      qk4wEJRxSdG+dwBjUpp0IMj882cS0yBQP42rL1xAeVhmtJpn2zaz7O0dtLZUk7Md7OOtMPMp
      WQpqxNyYGlGSJDK5DMPJEXL5PKZlIkkiqqqiGzqSJBMtiyIIApqq0VDbgGEaWLaNaRrUVtWQ
      zRXWC8A4A6CgRryYb37rRqpJsfxX97OpLUUrAAp1kyZzeMUK1lZnOHB4BOJxps6dQNuIRsu0
      ZhxBQ8RBVdVjcrgB8sOHyYUbmTltAvt3bjzFt8/no86oGjGgBcgbOqIgENSCTGyYUMgUzWQQ
      RQHPg7yeJxKOkM3nUGS5kC7tueT1PGXhMizLfJcacVwTYUbPDt7qjXDRmU1IOPTtXschaTIT
      7AP0hmYys0Jn9esraU/a9O58g6qr/4HbZjmsfv1NOpM21a1zOXtGFft3HGDK3LOJaTBycB07
      nSmc3WjxyrOvkg7VU5WQmDR1PhMq/rg31Kc0cFyHZDqFZRUel8iSTHm0fKzrM+oAFQSBkeQI
      HoXqHAwEiZZFcRwH07IIaBqWbZFKpwq7zgdDiKJ4asxwetdmfvHgUxwaMqifeQl33n4FlZo/
      xeDz4cZXI/qUNL4a0afk8dWIPiWN31H3KWn8APApacadCmHm0yRTWVxRJRKNElRlhBNY6+46
      Bpm0RThWxrvXyLvkksNkHZny8hh/fF8NDyOTxFaihP2nTac9o9pDAEmUxnaAdF0XBMbye47u
      touiWNSjOCAIY9ujep43trMkjDcAnCFefvABdudlVElh4ryLuPK8GWgnEADZ4Y3c/1/7ufn/
      uonD29fQNP0camJFS5fRwxP/+TM2uCp3feU7zK79Y2oVnc1P/Tv7ZnyLTy0sH3t178YVODUL
      mF7vb416uuB6LtlslrxRyPhUFJVYJEoqm8KyLDwPApqGqqqkMmkAbNsmqAXQtEBxfzGB8mg5
      juNiOxZloSPbZo0vAFIH2LgvwK3/8CWaJYO07iG5FulUGtPxUAJhykIqdt7AU1U0GfJpAyUS
      QrDypNM5UskMDiAIIuXlCTRlNIfDI9t9iLb4TC4Jd3Kwu4/ZtfWY2Qy2pGHnDQLREFY2Q95y
      kNQgsbJC5Fn5DEODDnKgjLKQRjhagRtUcCyddDqL44kEwmWENOWEWiufDw/vViMmwYNoOIoo
      iti2TTqXQVVUaiqqC1mi2cLPlmWeIjViZCIzJ7zMM/c/whlz53L2vFkYyTaWPfU8HUmdlNLA
      579wNYeeXIp30RVcNMXgqX9dwfn3XE/3Uw+zoi1PQM2QYgq2keO1ZU9y/i1/Q3lIAc+lfd9e
      qhumMSWU4aUdB2FenLUPfJ+V6gUk8g5X3X4OO5YvZU/3CEPJCHd+604A9m94mSXvHKbXaeRz
      X76THa88jLTo7wgFtvHUc+8wousoDXP4/E1XEQv4XaWPIu9WIyqFro3rMJIewXHcwqxucXGj
      4zi4roOqKDiufRw1YhZV1U5QjShXcc3n7mLxBdPp37iUR5auI285mEaewcE+dm3dRX9Wf/d5
      A3t5eZ/Knd/4Jn925+VUHOfSnmuz/0AXZfEw4UQVnW170ItTc3LFVG6/63rqJHAMneHBQTq3
      beDgSKE/2HL2Yr7yzW8zN9LO5gNHskhdx8XIjzDY38nWnXvIGv4j3Y8qnufhuA7pbAa5qEYU
      BAFRENEUDVVRse0jOvSckS9W9kLOUNm71IgCuXwO+4SyQVPdHBhRmDJ7AWVuN798ZS/7pRwd
      8Qv5zu01/OreZ4oHWuiGjT4yQtK0QBAQbQdX8HB0E+s4l7atPnZt2UV6QKJbMbB3dLNu8HYE
      YPLUGcQCIvs3vcnObAv/9/du5pl/vXcsakVJxjOzpHM2VZrCaDXf8NpzxBZ9jdvq+rnvd2+e
      /N33+cDx8MjksoQCQVSlMDZ0XRfHdQgGgmO5Qq7r4uHhOg6BUBmCIIxlhOb0XKEVcQo26cIK
      shNRI9oZVj/zW37TO4IcSHDOJ26hUdtD/tdP8bPByaRNEVHQqJ2o8usHf8Lu6ZMwURATU7l0
      6kr++wffp7I+BloToiCgKBpisU9u9+zCnXYb3/rqJ4hLJpsf+yGrd/RyhqIhF2t6oroZoecp
      fnxfG17apkYQkMpq2b/sP7n7tzrVZ17F4skx1q5REUVonNzMy0//nMHJkzBEBb/7/9HleGrE
      eDROKpvCMA0EQaQsFEYURXJ6buzbfxRfjejj8x74akSfkscPAJ+Sxlcj+pQ0/noAn5LFVyP6
      lDx+APiUNOMKgHzbWzz88raixc1k7xtP8/qu4RP8KJv9a57lR//+JP0uuLbBG8t/x97ekzPL
      +ZQGx1Mjep7HcHKE9sPtdHZ3ohs6rucyMDRIW+chDnW2k86mi2rELgaGB46oEbMnoUYMxIO0
      LVtOW9bDzQ2x8s29iCGdLUsf5KVNA8c9Z+X9f8vjG0eOesVhoO0Q7QdeZukbh7Edm727ttCf
      Mk765vic/rieSzafI1GeoKaypii+KuT61NfUUxGvYCSVxLZtXM+lvrqOxroGwhp5MooAABjL
      SURBVMFwUY0YQRBEdKOoRpROQo0oxKbRWvsYBw6lqY/1MRCK8InyMkYC1VQlVLCGefWJx3i7
      LcOsSz/JWdpBnn99K70b/w89HdfxjesWFK8kMuXcK9G3vUTvGbeM/op0bF3Osy++Q1qp4dJP
      XscZkSRPv7Ee+g7RrtexYE6ArRv20bDwRhZ/rJXAexXU57RDFETi0WPViJIoEg6FcT0PW88j
      y1LxWAFZlhFFkcKzHa+oRrQLPtGTVyOGmDlrCm279tLdtY9gpIVoCDq3b6Gtf4RNzy1hzUgZ
      C+c2sOnRX9BZuYiLF0zmwhu+xOcun3PMlQKxZqbVeGze0zn2mqzFmDZvIc2hXh55biV2uo9V
      Gzu44KbbmGWvYaczl0/dcS7bfvsiXX6PqaQYUyPmsiRTScqLwWCYBocOHyKdzRAOhhEEgWwu
      R1tnGx1dHeiG/i41onscNeK4B8E1k6dhDuzjwO69VEybRnC07fAMutt70fM5hlICcy65kMZo
      kKAmEwxHiYaOjTgkjblnNLN9ww50wHNsNqx6ie37O0ln8+hm0RcdjdNQmSASFEnUNlHVWEPU
      sfDNiaWF53nk8jlMyyIei6MoyliS26SGiVSUJ4opzwITGyfQ3NRMeSxONpcdUyPGojEkScJ1
      HWqrapEkeUyNOO4AiFc34WV3s3abyeyZjUdOFINMmdWEa4tMnDqNiXVxBA8i0QQHt7zNtkO/
      P0YQiLWcxTxrG28cMPA8l6GhYSontDKxNn6c5ZI+pYzjumRyhVVdeT1fCAbTZDg5TCaXLQyA
      XQfdNBgYHiSTy5DP55DlgmJ8VI0Y0DQEQSSv545RI0p333333eMpiKgGqJQFtMb5zJtVi4qA
      rAapbJhA6/RpRJ1B9u0/jKlV0NLcSF1DPbmu/QyJFUxrTAACkqKRqK2nOpGgvqkcT6th3qxW
      mmvjdHd0EW6YwfSpzUxuqCEUidNcX4Oshqmon0RlWEYNxGiYXE/Qn6QuGTw8bNvGME0s28J1
      HQKBAI7roBc3xohFYwRUDcdx0HUdVVWJlEUQBRHP9RAFEVVRkWUJ3TAIB0MENI177rnnHn8m
      2Kdk8WeCfUoeX43oU9L4akSfksbvAvmUNH4A+JQ041YjZpKDCIEYYW3cp/j4nBJczy10yT2Q
      pOOrEQVBKDiBPA9REMZyfmzHRhCEMX3iyakRged/9X3EC77LLQvrT/Gv5+Pz3rieSyabRTfy
      eB4oikwsEnuXGjEUDDGSSuJ5Lp4HkbIInuedIjXiUdhGDsMRcC0DKRBGNLNkDAtB0ohGI8iC
      Sz6bJmfYSJJKMBImIPszVz4nh4BAMBCg7I+oEQVBIFEeRxREsvnCLpACnCI14lEcWv00D68c
      oG5CBXMvugRn83LWtQ+jp3VmXvdFFpV38uBDSzECEXLdeRbe9Vk+PtVvNXxOjnepEZWj1Iip
      ERy3oEaURAnDNMjpuUILEI5g2ebx1YiKSqAYCCfRobdxtCquvuFm6sMGb22wGB4cYrC3B/lA
      L/XKKpyZ1/KNjzez/L6HcP2nqT5/Ap7n4Xou6WwGTVHRtMARNaKmYdsOtm3hFWVXmhrAtEwc
      xyaoBZFEaUyvOKZG1PPIxe16T+IpkEbdhClURFWE7k08t0Xi83/zt3z+ijlQHIA4jovruZim
      hZ9n4fOncLQaMRgIIhYHwI5bsL2FgkEs28ayLQQEQoEgAVVDN3REUSzsFey6KLICeAQDAWRJ
      YjQDaNwtgKIGECUBUVZQFamgG0xMYoryAj//j3tpDuZQWyQa51yAcN+j/POOON6QxcL35774
      lAjjVSN6nsfA8ACO6yCJMrFIFCiqEV2HoHxEjRhQNWSpUPXfPzWileaFex/Cu+STXD3DHwP4
      fPgIh8PH3yf4lASAa9PXfhgqaqiO+IsYfT58vL8B4OPzISccDh9/o2xFUXw1ok9J4C+I8SlZ
      /AUxPiWPHwA+Jc34A8DNsP7ZB/jxfz9Djwlg0fb2M7y+Y5DsobX85rXt71shfUqXUTViV08X
      7V3tZHMFMZRt2/QP9pPOFvYGdj2XoZEh2g+3M5wcxnXd46sRcyehRgQwB7t49eAQXv8KNh/M
      4OEy2LaVvb05rKFDrNvTfcK/XL5rG/c9+DypEz7Tp1RwvcJEWKI8QW1VbVGNaJPKpFAUZWz5
      bl7PF9SINfW4rks2nyWbzxItiyIKIrpZVCOKJ6FGBBga6EALNDGn0mHrrv1cOnX6Me9nDm/m
      l//+DrnyOdx8+9WEe9dw/2OvkSLMeZ+4hfNbwqx6+QkGh232d+c599pbObdCJlxbRRSLQ2+/
      xJIVG3GVWq7/0ueZHlf+9Lvn85FHFMQxG5xlWwX1oSCSKE+gGzqGWXDLuq6LKIhIkkRACxRn
      iQUEURhbK+B5J61GhI7tW1DqWmie08rI7q1kjWMfHmnhBhZ/7ktMczfw2AvbMIQQ0+Yt5MzJ
      Kq889SSHh3S2btxMxbyruG5+hFdXb8RKdrN6237AxQtVsuDs85ld1s59j60j/6ffO5/TgGPU
      iOkk5ZHyY3aBHCUUCGFaJm2dbQwMDWBaZkGNmBzGsixcx8XzPDq6OugbPKJGHGcLkGTDW2tY
      7w3RH8qxqUOhO3vNMUco5ZVUx6uYOaOF9ZsOs3Xtdtb3VNIY1osrdUApi1BXVU1MjyAKR5kn
      Mv2seuVN0jVNxA0LU7DwvRQ+UFQj6jks2yIejb/n/JQkSdRW1Y4tgnFcp6BGrGnAMAxsx8aw
      DGqrasnms9jOCagR7e7NdKqX8u2//RZ/8Zdf59YZCpsOHt1zFyHVxYb1K1n6xm4mz5uM0dtH
      pGEak5oq/niUWVk6B00mTZ1KY0XZHzvap4RwXZdMtrDgZVSN6Lru2P/rhk4uXwiQdCZd+Ceb
      Hsv3dz2XvJFH0zRECnsJ27aNWJwBGNdEmNm7k9W9ERad0YiEQ9+e9XRIzTTaB+gPzaRF62fN
      tt309iWJTTiTi86dgdm5kZff3ke0romopjB95kwO7d5I0/SzUdMH2TogM79BZtXBHJfMa6Z9
      81us3pemuSFGNjCZRfMa8UcBPo7rkEqnsGwLKKz/jUVipLPpY16LlEXI5rLYtk04FCYYCI71
      /S3bQlO1sSAJaAFCwRCiKB4/F8jHpxTwZ4J9Sh5fjehT0vhqRJ+Sxu8C+ZQ0fgD4lDTjnAhz
      SPb3kTFdBEkhWh4nrCkcZ0LOx+eUc0SN6CFJR3aBHJ3MGl3g7nleISVCEgu7wxSPOQVqxCSP
      //B7dFSdTULO4NXM40s3XUJE81eN+by/uJ5LNpdBN3Q8z0ORFcqj5WRyWXL5LIIgEA6VEVAD
      ZHJpTNMkUhZFUzXyeq64v5hILFKO6zjYjk34ZNSIoUQdiz/9Vc5U9/KjX77E4cy5NDsu6ayB
      oIYojwSx81lsUcbWTbRwAMdyCISCuEYeS1AIaf7Uls+JISAQ1IKEg4VKm0yPYDsOlmVSGa8q
      ukPTBFSNUDCMLB2pY67rEouUY9kFNaLj2AS04DHXP2EznGXmsT0RL9PD8qXLODBkkjVVrrj1
      BnKvPsbafJhosJJzz29k65sHufLOGxh441l2ROZz43ktf+Lt8Ck1BEFAlhVc1yGXz6EqKgCS
      JBdM0a6AKEoFca6sYFnW2LmiKJLJpgGhqEYUyOYzaKqGpp6gGjHTd4hf/5+/pyIaZtaiawgm
      d7Bs2TsEmmrI9fewpf1yWjAQY/O49aYLEFO72Xpq74VPCTLar8/k0qiKRkDTsB0H8MbsbsLY
      v44gCAIBLVgMjlE1ojO2VerouGHcAVBWPZHPf/YfGbWj9+zqpWHOxXzma5+iWs6TcWDLviAT
      WiYTC0ikU17B0WiaDA+NYIVPwd3wKTk8PLL5DMFA6Mi3v1jw/tuOPaZJFI+T1DCqRszpOVRZ
      IV+0Q+uGh3tiakQBRQses4l1ReMcplds4Cf/fA9KWQWX3XwbsqqhyoWCqIFyGNnIT37US31I
      pqrZf+Lqc+J4rktez5HOphEQkGWZivIKglqIgaF+BEEgHovjuA69gz0FLbpQcIQmyisLqfiu
      g6wFURyboZEBNDXwP6BG9PH5kBMOh/1kOJ/Sxg8An5LGVyP6lDT+ghifksVfEONT8pxWAeA5
      Bp1t7aR0+4Muis9HhHHNA+QPruLJvVFuvXIOKiZ7Xn+OrupL+NiM+PtdviIZ3nlyGdrHrmVO
      xXvnE6W6d/Dy8v1cce35vPabB1l3MIOohJl54XXceMnMdy2yt/JJXnttObPPv4662P9sntLg
      vtf4xf2vkBElqqZdwB2f/BiVYT9X6ng4jkMyNYIsyUQi0UJKQy7L0PAAiqpSlahGFEUMQyeV
      SVIejaOqGqZlMjg0gKqoxMsTuK6LYerHJMONqwUIJMK0L1tOW9bDzQ2yctU+5PD/ZC60QceW
      rXRn/9BSTZuNK5YROeMCKmWDbSMKn/3qt/nuN66j+4Vfsubwu89wLZ09O7eQyuXZvOwJXtzY
      cRJFG2TZAw+wsd88odNy/b0IdRfyze/8JTNyq3nglZ0n/tklgOu6pLMpFFnB9Qp/f9MyyeYy
      1NbUEwlHGUkOY9sWuXwORVGxixa4XC5LJFLYT9gwdfInq0YUYlNprV/CgUMp6mP9DIYitMRD
      ZDo3s+SJF+jz6rj+0zcz0djFkjUdhAb20WFV8ck7P81EpZfnHnqEXSmFRdd9mvnxdu792XOk
      gFD9TG66dh6H3k6y4JNzGdm6nl6lkbMmaax+6Xe8sq2f1kXXcutF1WNl0bs28eslL9GXg4Uf
      v5Mr5zcgARjt7Nwtc/H1tQhmGwgSqqpCPouhVFAehlT7Ozzy+Muk1HquufVWJo8lBgrIapzK
      qMT6V5ZC67nMb5J4+8kVJC77GEOrnuXVDYeQa2Zz1xevRznwCs93JajoWU3ZwptRA9UkoiLJ
      vau4/3evk7ICLLrxc3xsmsOyX77MkJanrcvg/Gtu5oKZNYXyIiBJCoGyBFOnNrBifx9gs3fl
      0zzx+h4SUy/k0zcvZN8LS9gwIDDQ1c8ZH7+dy+Y2opTQOgxRFCmPxrEsi2xRbOsVA0ESC3/j
      vJ5FEEQS8YoxWe7Y+cKxakT15NSIIWbOauHgrr10d+0lGGklbA/wyJJnkJtmMzNymJ89tILU
      4CHW70tx0S1fZH7kAMs2HGDNoz9ltzqNuVPLefGRX9MjzuCuv/wKl0+LYivVlAVT7Np4CAMY
      6jxIW/cwO1Y+w6t7bc6dO5HNDz3A+uSRPr3jBmidu4AL5lXy+v1LODAq+x3s4HDZFOrKirXj
      8Hp++IO/554fL6Xu3AupF9t49L4XmHz1F7llUQVP3f8bejLFFsWzObxrB21DWRS9izfX7kPv
      2MnSgxlqgx6hqmbOuWAhsc7f8djaIfSeHTzxzCso0z/BWTUGu9dtY9C2sOUIs+edwzktEr/7
      xVJ6SLFt7S5qzv4k151XztpX3iE3lqxoM3h4L+tWreCF1V3MmzWV4W0vcf8b3cw9Zz72zidY
      8lYHHdveQZ76Cb7w6SvZ8sL97O7xpZGqoqGqGh2HD9HdcxjDMMaC4mhCwRAjyWEsyyzaCV06
      u9rpH+gdy3QY9yC4unkq1sB+DuzaR8X0aYhWlt6hfsxsGqt8Kh8/pwURUOI11FUkKI8Gcdwk
      HQeGcGydnB3mvI9dRCIkMrDrTd7srubzt15ITP69rzMPhro7SRsGybzE/KsupFYZLWae/e+8
      xjs7uhjKGbimgT36ezsujiAcWaXWMJ/v/P0P+H//1zdQdz7Fqo0H6RaaOWNGDbWTziImHyab
      t479bEGmZeY0BvbtYuveg9S2tCAOHOKVlavoG0xj2iaGVbhxTbMv4vy5zYytCXIy7Fj5GpsP
      9jKSM/F0CwdQtQjVNVXE4jEUxz1q32SXXKqf1UsfZbc0i0vPqGe4r4uMrpNNZqg543LmTwgh
      ihKJymoSNZNJRFwyWX28f7LTFkEQKI+WM7GpmbraBlRVRfy9ro0gCKiqRl1NA5GyKJIk4bou
      NVW1SLJ8YmpEgHh1E152N2u2m8yZ2UCwrJxp1VUYgQTNzROIB6Tj+DzjTDtrErbh0ThxEpXR
      EHrPJv774ddpnNpEX3sbWUsmn97DprfXsXHrQXICNExtRbWgflIzTbUxjlzYZrhrgGDdJJob
      KpHFo7Pz6qhNttOXK1ax/BA7t25h46Z1dGbKKG+cwuzoIV5c+harV76AHjqTeET7/QITnDiL
      hd4+HlnXx+yZrVi5EQYNjZaWiSTCR45XwkHUo2PXNenryhCfOJFJdfFxLBdVaZpxPl/+6/+H
      +dJ2nnl9G7EJ04l5FoG6SUxorEb1XFzHpm3XBtaufJ4Bs5H6ijCd+3cxkNHJDHWy91D/eP58
      H1k8z0M38uTy2aIGMYvjOGRzGdKZNEPDg2O5/dlcBl3Pk9dz6Hq+eL6LbugEtAACwlFqxMIf
      SLr77rvvHk9BRDVAlSIRnDCfeTNqUJUgkyY3kes5xOH+NJH6ZibVVRCL1zCxphxZCZCoaWLO
      nNlo2S46eoZQy+tojIhk0BCMFElDoLFxOhXhJF0DJpPnzWdqUz3NLdOoDevsO3iYvBBj6tQJ
      RMIRqidMpnVKDQMdbTjRBma3tjJpcj1BCVCipNpW0BOYxbTaMCEvT1fvAEMpi+kXXcv50ycy
      ubWOgQN7SEn1XHnNZdSWKQTDUeobJhCJhKiqr6ciEqeqVkMsa2LB7BbiiQSVUp6D/TYTp8+g
      ZUor9YkyopUNTKgIgSCihaPUT55My4QYPW2dSJWTmNXayqRJNURC5dRPqiesykTj1dTVxZEE
      EGWFaEUtEyY2Mr21kfRwnvo5ZzG7WqHtwEHSusKE1kZ633mF/WY5mhziksXXMjEusX/7JojV
      I2c62Nvj0dxY8b5Uvg8DnueR1/OYlokoimPSW9u2MYw8AS1ApCxadIimx84BCGgBXLewBlhR
      VGRZxjAMQqEQmhrgnnvuuee0mgnu27OS51aP8MnbrqYicDqkcmRZ9dDP8C7+NouaPuiynH4I
      gnB6uUE9O8fu7QeobJlKZVj9oIvj8yHnPQPAVyP6lAKSJB1/o2xfjehTKpxWuUA+PieKHwA+
      Jc04A8BhpK+HwVQO1wOsHAPDWX8fL5//EUYVh6PpDFAYp1qWiWVbeJ43pj6xLBPbsYuvuQUp
      1tjPHq57bNd+nAGQ5LF//Cb/8MvlpE0HOt/ih79eQZokG19ZQae/0a/P+8ToJnmpdPLIptiu
      SyozQjI9QjI1TF7P43kuqdQII6lhRpJDWLZFXs8zkhwmmRrGdmxM0yCvH5tKMn41YnUlddlB
      tvekOf+o02NV1YRUcG2D5EgSyxMpi5UjGmlSORNBUonGy1EwyWZMRMHBlgJoGKQyOogKsUQc
      VQQ9M0I6ZyJIGqFIGNWzsDyZYFAin8wjR0MIepaRdA4XiUg8Tkg5HZ73+/whNEVDkZWxPYEL
      wluRingVjmOTzWcQRQFBFKmIVpHXcximjoBANBLDti0cu+ARCgROUo0oKjHOX9TA+lc3ccZF
      o6/2s+LhFznne60cfuMRntswQCRRyTlXXIW083VWH+jHSKaY+PEvcvnENn5694tUzp/MhDnn
      UZvaxqqdhzGHB6m67C5umWnwwH89TEpL4AylaLzqBhY4u9lhtnL9FbW88uOnmfjtO4hsfYtl
      7+zBGB5EWXAbd101w99M7zSmoEaUse0jCZGSKGHbNiPJIaCwkZ4kySiyMjbrq+t5JFkik00j
      AKoaKK4jOFaNeEKD4LJJFzCVTWxsy3LM7IHdzbo3k1z1Z1/nq1/6DHMbQti2zmB/P4cPH2TP
      vm5sPGwxyPzLb+DKsxoRHIPB/n66ew6xY2cnPTte43DdlXz9G1/l0tkVeNZxCuC5uK7J8MAg
      PX3tbNtyED81rPSQpMJOkYFACE0LIIoSQtGN6HkeeN6YGrEsVEYoGEYQCgtrREEkr+dxTjQZ
      rnB0mDkL57Bnzdvk7KMiQFCQJZ1M1sTzXJzurTyzzuAz3/0ef3bNWcWBi0h5VRMNVVGEgb08
      9Voft3/ne3zz5guK3ncRx7ZxPQ/DMIsDbAfdsLAyaQazebxUN8+8uIvL//yv+O5nryKo+A+x
      ShHP8xBEcWwvYFEUkWUF0zKKq74MRFFEFEVUVcPxXBS50E/QtEAhM/RE1YhqIIQkQPXE6YTl
      5xA9EBBRQwEkuYaLrpnFkl/9kFfUBFdcexUzol3c9x8/Y2pEJ1gvI4gugaCGKACxOs6sS/Or
      f/8psxImwYhMbMYlNL74U37wgzcocywaJgiUV8Vpe/FhftzRgmdLSOEEZ06Weeq/fsKMGglF
      Oev3nag+pxmu644NdB3XIZfLkCivJJvPjEluy2MJJFFCFCT6BntQFZVYtLBc92g1ovxhViO6
      mQ5eXr4BQ/ToONTF/Gtu55zJCb+C+7xvhMPh46dCfBAIWowJE+pJWR5TzzifyU1xv/L7vO98
      aFoAH5//ad6zBfDViD6lwmm1HsDH50QQBEH4/wFLNEFd65kZ2gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='rank2013' width='192'>
      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
      QYDXvQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='仪表板 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='仪表板 2' width='192'>
      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
      6LLdDjH/H1ZLTkx78ry3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='工作表 27' width='192'>
      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
      hgEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='德国' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='洲Top5 (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
