<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <IntuitiveSorting />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='FAO' inline='true' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FAO' name='textscan.0cbagav12h7cdy1d4j6ey1bx4577'>
            <connection class='textscan' directory='C:/Users/CVA 张慕明/Desktop/VizChallenge5' filename='FAO.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Area&amp;Continent' name='excel-direct.17ypuc609xqdst1amx3001vp16xe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/CVA 张慕明/Desktop/VizChallenge5/Area&amp;Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='FAO Group' name='excel-direct.0hewu6f0g56w5p1d6st3h02wripw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/CVA 张慕明/Desktop/VizChallenge5/FAO Group.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FAO.csv].[Item]' />
              <expression op='[FAO Group].[Item]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FAO.csv].[Area]' />
                <expression op='[FAO Area].[Area]' />
              </expression>
            </clause>
            <relation name='数据透视表' type='pivot'>
              <columns>
                <column datatype='string' name='数据透视表字段名称' />
                <column datatype='integer' name='数据透视表字段值' />
              </columns>
              <tag name='数据透视表字段名称'>
                <value name='[Y1961]' />
                <value name='[Y1962]' />
                <value name='[Y1963]' />
                <value name='[Y1964]' />
                <value name='[Y1965]' />
                <value name='[Y1966]' />
                <value name='[Y1967]' />
                <value name='[Y1968]' />
                <value name='[Y1969]' />
                <value name='[Y1970]' />
                <value name='[Y1971]' />
                <value name='[Y1972]' />
                <value name='[Y1973]' />
                <value name='[Y1974]' />
                <value name='[Y1975]' />
                <value name='[Y1976]' />
                <value name='[Y1977]' />
                <value name='[Y1978]' />
                <value name='[Y1979]' />
                <value name='[Y1980]' />
                <value name='[Y1981]' />
                <value name='[Y1982]' />
                <value name='[Y1983]' />
                <value name='[Y1984]' />
                <value name='[Y1985]' />
                <value name='[Y1986]' />
                <value name='[Y1987]' />
                <value name='[Y1988]' />
                <value name='[Y1989]' />
                <value name='[Y1990]' />
                <value name='[Y1991]' />
                <value name='[Y1992]' />
                <value name='[Y1993]' />
                <value name='[Y1994]' />
                <value name='[Y1995]' />
                <value name='[Y1996]' />
                <value name='[Y1997]' />
                <value name='[Y1998]' />
                <value name='[Y1999]' />
                <value name='[Y2000]' />
                <value name='[Y2001]' />
                <value name='[Y2002]' />
                <value name='[Y2003]' />
                <value name='[Y2004]' />
                <value name='[Y2005]' />
                <value name='[Y2006]' />
                <value name='[Y2007]' />
                <value name='[Y2008]' />
                <value name='[Y2009]' />
                <value name='[Y2010]' />
                <value name='[Y2011]' />
                <value name='[Y2012]' />
                <value name='[Y2013]' />
              </tag>
              <groups>
                <group name='数据透视表字段值'>
                  <field name='[FAO.csv].[Y1961]' />
                  <field name='[FAO.csv].[Y1962]' />
                  <field name='[FAO.csv].[Y1963]' />
                  <field name='[FAO.csv].[Y1964]' />
                  <field name='[FAO.csv].[Y1965]' />
                  <field name='[FAO.csv].[Y1966]' />
                  <field name='[FAO.csv].[Y1967]' />
                  <field name='[FAO.csv].[Y1968]' />
                  <field name='[FAO.csv].[Y1969]' />
                  <field name='[FAO.csv].[Y1970]' />
                  <field name='[FAO.csv].[Y1971]' />
                  <field name='[FAO.csv].[Y1972]' />
                  <field name='[FAO.csv].[Y1973]' />
                  <field name='[FAO.csv].[Y1974]' />
                  <field name='[FAO.csv].[Y1975]' />
                  <field name='[FAO.csv].[Y1976]' />
                  <field name='[FAO.csv].[Y1977]' />
                  <field name='[FAO.csv].[Y1978]' />
                  <field name='[FAO.csv].[Y1979]' />
                  <field name='[FAO.csv].[Y1980]' />
                  <field name='[FAO.csv].[Y1981]' />
                  <field name='[FAO.csv].[Y1982]' />
                  <field name='[FAO.csv].[Y1983]' />
                  <field name='[FAO.csv].[Y1984]' />
                  <field name='[FAO.csv].[Y1985]' />
                  <field name='[FAO.csv].[Y1986]' />
                  <field name='[FAO.csv].[Y1987]' />
                  <field name='[FAO.csv].[Y1988]' />
                  <field name='[FAO.csv].[Y1989]' />
                  <field name='[FAO.csv].[Y1990]' />
                  <field name='[FAO.csv].[Y1991]' />
                  <field name='[FAO.csv].[Y1992]' />
                  <field name='[FAO.csv].[Y1993]' />
                  <field name='[FAO.csv].[Y1994]' />
                  <field name='[FAO.csv].[Y1995]' />
                  <field name='[FAO.csv].[Y1996]' />
                  <field name='[FAO.csv].[Y1997]' />
                  <field name='[FAO.csv].[Y1998]' />
                  <field name='[FAO.csv].[Y1999]' />
                  <field name='[FAO.csv].[Y2000]' />
                  <field name='[FAO.csv].[Y2001]' />
                  <field name='[FAO.csv].[Y2002]' />
                  <field name='[FAO.csv].[Y2003]' />
                  <field name='[FAO.csv].[Y2004]' />
                  <field name='[FAO.csv].[Y2005]' />
                  <field name='[FAO.csv].[Y2006]' />
                  <field name='[FAO.csv].[Y2007]' />
                  <field name='[FAO.csv].[Y2008]' />
                  <field name='[FAO.csv].[Y2009]' />
                  <field name='[FAO.csv].[Y2010]' />
                  <field name='[FAO.csv].[Y2011]' />
                  <field name='[FAO.csv].[Y2012]' />
                  <field name='[FAO.csv].[Y2013]' />
                </group>
              </groups>
              <relation connection='textscan.0cbagav12h7cdy1d4j6ey1bx4577' name='FAO.csv' table='[FAO#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='Area Abbreviation' ordinal='0' />
                  <column datatype='integer' name='Area Code' ordinal='1' />
                  <column datatype='string' name='Area' ordinal='2' />
                  <column datatype='integer' name='Item Code' ordinal='3' />
                  <column datatype='string' name='Item' ordinal='4' />
                  <column datatype='integer' name='Element Code' ordinal='5' />
                  <column datatype='string' name='Element' ordinal='6' />
                  <column datatype='string' name='Unit' ordinal='7' />
                  <column datatype='real' name='latitude' ordinal='8' />
                  <column datatype='real' name='longitude' ordinal='9' />
                  <column datatype='integer' name='Y1961' ordinal='10' />
                  <column datatype='integer' name='Y1962' ordinal='11' />
                  <column datatype='integer' name='Y1963' ordinal='12' />
                  <column datatype='integer' name='Y1964' ordinal='13' />
                  <column datatype='integer' name='Y1965' ordinal='14' />
                  <column datatype='integer' name='Y1966' ordinal='15' />
                  <column datatype='integer' name='Y1967' ordinal='16' />
                  <column datatype='integer' name='Y1968' ordinal='17' />
                  <column datatype='integer' name='Y1969' ordinal='18' />
                  <column datatype='integer' name='Y1970' ordinal='19' />
                  <column datatype='integer' name='Y1971' ordinal='20' />
                  <column datatype='integer' name='Y1972' ordinal='21' />
                  <column datatype='integer' name='Y1973' ordinal='22' />
                  <column datatype='integer' name='Y1974' ordinal='23' />
                  <column datatype='integer' name='Y1975' ordinal='24' />
                  <column datatype='integer' name='Y1976' ordinal='25' />
                  <column datatype='integer' name='Y1977' ordinal='26' />
                  <column datatype='integer' name='Y1978' ordinal='27' />
                  <column datatype='integer' name='Y1979' ordinal='28' />
                  <column datatype='integer' name='Y1980' ordinal='29' />
                  <column datatype='integer' name='Y1981' ordinal='30' />
                  <column datatype='integer' name='Y1982' ordinal='31' />
                  <column datatype='integer' name='Y1983' ordinal='32' />
                  <column datatype='integer' name='Y1984' ordinal='33' />
                  <column datatype='integer' name='Y1985' ordinal='34' />
                  <column datatype='integer' name='Y1986' ordinal='35' />
                  <column datatype='integer' name='Y1987' ordinal='36' />
                  <column datatype='integer' name='Y1988' ordinal='37' />
                  <column datatype='integer' name='Y1989' ordinal='38' />
                  <column datatype='integer' name='Y1990' ordinal='39' />
                  <column datatype='integer' name='Y1991' ordinal='40' />
                  <column datatype='integer' name='Y1992' ordinal='41' />
                  <column datatype='integer' name='Y1993' ordinal='42' />
                  <column datatype='integer' name='Y1994' ordinal='43' />
                  <column datatype='integer' name='Y1995' ordinal='44' />
                  <column datatype='integer' name='Y1996' ordinal='45' />
                  <column datatype='integer' name='Y1997' ordinal='46' />
                  <column datatype='integer' name='Y1998' ordinal='47' />
                  <column datatype='integer' name='Y1999' ordinal='48' />
                  <column datatype='integer' name='Y2000' ordinal='49' />
                  <column datatype='integer' name='Y2001' ordinal='50' />
                  <column datatype='integer' name='Y2002' ordinal='51' />
                  <column datatype='integer' name='Y2003' ordinal='52' />
                  <column datatype='integer' name='Y2004' ordinal='53' />
                  <column datatype='integer' name='Y2005' ordinal='54' />
                  <column datatype='integer' name='Y2006' ordinal='55' />
                  <column datatype='integer' name='Y2007' ordinal='56' />
                  <column datatype='integer' name='Y2008' ordinal='57' />
                  <column datatype='integer' name='Y2009' ordinal='58' />
                  <column datatype='integer' name='Y2010' ordinal='59' />
                  <column datatype='integer' name='Y2011' ordinal='60' />
                  <column datatype='integer' name='Y2012' ordinal='61' />
                  <column datatype='integer' name='Y2013' ordinal='62' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.17ypuc609xqdst1amx3001vp16xe' name='FAO Area' table='[&apos;FAO Area$&apos;]' type='table'>
              <columns gridOrigin='A1:B175:no:A1:B175:0' header='yes' outcome='6'>
                <column datatype='string' name='Area' ordinal='0' />
                <column datatype='string' name='Continent' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0hewu6f0g56w5p1d6st3h02wripw' name='FAO Group' table='[&apos;FAO Group$&apos;]' type='table'>
            <columns gridOrigin='A1:D115:no:A1:D115:0' header='yes' outcome='2'>
              <column datatype='string' name='Category' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
              <column datatype='string' name='Item' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Area (FAO Area)]' value='[FAO Area].[Area]' />
          <map key='[Area Abbreviation]' value='[FAO.csv].[Area Abbreviation]' />
          <map key='[Area Code]' value='[FAO.csv].[Area Code]' />
          <map key='[Area]' value='[FAO.csv].[Area]' />
          <map key='[Category]' value='[FAO Group].[Category]' />
          <map key='[Continent]' value='[FAO Area].[Continent]' />
          <map key='[Element Code]' value='[FAO.csv].[Element Code]' />
          <map key='[Element]' value='[FAO.csv].[Element]' />
          <map key='[Group]' value='[FAO Group].[Group]' />
          <map key='[Item (FAO Group)]' value='[FAO Group].[Item]' />
          <map key='[Item Code]' value='[FAO.csv].[Item Code]' />
          <map key='[Item]' value='[FAO.csv].[Item]' />
          <map key='[Type]' value='[FAO Group].[Type]' />
          <map key='[Unit]' value='[FAO.csv].[Unit]' />
          <map key='[latitude]' value='[FAO.csv].[latitude]' />
          <map key='[longitude]' value='[FAO.csv].[longitude]' />
          <map key='[数据透视表字段值]' value='[数据透视表].[数据透视表字段值]' />
          <map key='[数据透视表字段名称]' value='[数据透视表].[数据透视表字段名称]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Abbreviation]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Abbreviation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Element Code]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Element]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Element</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[FAO.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段名称</remote-name>
            <remote-type>129</remote-type>
            <local-name>[数据透视表字段名称]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段名称</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数据透视表字段值</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数据透视表字段值]</local-name>
            <parent-name>[数据透视表]</parent-name>
            <remote-alias>数据透视表字段值</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (FAO Area)]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B175:no:A1:B175:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item (FAO Group)]</local-name>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAO Group]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D115:no:A1:D115:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' value='Rank' />
        </aliases>
      </column>
      <column datatype='string' hidden='true' name='[Area (FAO Area)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
          <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
        </semantic-values>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Element Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Element]' role='dimension' type='nominal' />
      <column datatype='string' name='[Group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Item]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Alcoholic Beverages&quot;</value>
            <value>&quot;Beer&quot;</value>
            <value>&quot;Beverages, Alcoholic&quot;</value>
            <value>&quot;Beverages, Fermented&quot;</value>
            <value>&quot;Coffee and products&quot;</value>
            <value>&quot;Stimulants&quot;</value>
            <value>&quot;Tea (including mate)&quot;</value>
            <value>&quot;Wine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats and oil&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Butter, Ghee&quot;</value>
            <value>&quot;Coconut Oil&quot;</value>
            <value>&quot;Cottonseed Oil&quot;</value>
            <value>&quot;Cream&quot;</value>
            <value>&quot;Fats, Animals, Raw&quot;</value>
            <value>&quot;Fish, Body Oil&quot;</value>
            <value>&quot;Fish, Liver Oil&quot;</value>
            <value>&quot;Groundnut Oil&quot;</value>
            <value>&quot;Maize Germ Oil&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Oilcrops Oil, Other&quot;</value>
            <value>&quot;Oilcrops, Other&quot;</value>
            <value>&quot;Olive Oil&quot;</value>
            <value>&quot;Palm Oil&quot;</value>
            <value>&quot;Palmkernel Oil&quot;</value>
            <value>&quot;Rape and Mustard Oil&quot;</value>
            <value>&quot;Ricebran Oil&quot;</value>
            <value>&quot;Sesameseed Oil&quot;</value>
            <value>&quot;Soyabean Oil&quot;</value>
            <value>&quot;Sunflowerseed Oil&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
            <value>&quot;Aquatic Animals, Others&quot;</value>
            <value>&quot;Aquatic Products, Other&quot;</value>
            <value>&quot;Cephalopods&quot;</value>
            <value>&quot;Crustaceans&quot;</value>
            <value>&quot;Demersal Fish&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Freshwater Fish&quot;</value>
            <value>&quot;Marine Fish, Other&quot;</value>
            <value>&quot;Molluscs, Other&quot;</value>
            <value>&quot;Pelagic Fish&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruits&quot;'>
            <value>&quot;Apples and products&quot;</value>
            <value>&quot;Bananas&quot;</value>
            <value>&quot;Citrus, Other&quot;</value>
            <value>&quot;Coconuts - Incl Copra&quot;</value>
            <value>&quot;Dates&quot;</value>
            <value>&quot;Fruits - Excluding Wine&quot;</value>
            <value>&quot;Fruits, Other&quot;</value>
            <value>&quot;Grapefruit and products&quot;</value>
            <value>&quot;Grapes and products (excl wine)&quot;</value>
            <value>&quot;Lemons, Limes and products&quot;</value>
            <value>&quot;Olives (including preserved)&quot;</value>
            <value>&quot;Oranges, Mandarines&quot;</value>
            <value>&quot;Pineapples and products&quot;</value>
            <value>&quot;Plantains&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains, Roots&quot;'>
            <value>&quot;Barley and products&quot;</value>
            <value>&quot;Cassava and products&quot;</value>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Cereals, Other&quot;</value>
            <value>&quot;Maize and products&quot;</value>
            <value>&quot;Millet and products&quot;</value>
            <value>&quot;Oats&quot;</value>
            <value>&quot;Potatoes and products&quot;</value>
            <value>&quot;Rice (Milled Equivalent)&quot;</value>
            <value>&quot;Roots, Other&quot;</value>
            <value>&quot;Rye and products&quot;</value>
            <value>&quot;Sorghum and products&quot;</value>
            <value>&quot;Soyabeans&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sweet potatoes&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
            <value>&quot;Yams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bovine Meat&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Meat, Aquatic Mammals&quot;</value>
            <value>&quot;Meat, Other&quot;</value>
            <value>&quot;Mutton &amp; Goat Meat&quot;</value>
            <value>&quot;Pigmeat&quot;</value>
            <value>&quot;Poultry Meat&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Infant food&quot;</value>
            <value>&quot;Miscellaneous&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Offals, Edible&quot;</value>
            <value>&quot;Pulses&quot;</value>
            <value>&quot;Pulses, Other and products&quot;</value>
            <value>&quot;Spices&quot;</value>
            <value>&quot;Spices, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seed, nuts&quot;'>
            <value>&quot;Cloves&quot;</value>
            <value>&quot;Cocoa Beans and products&quot;</value>
            <value>&quot;Cottonseed&quot;</value>
            <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Palm kernels&quot;</value>
            <value>&quot;Rape and Mustardseed&quot;</value>
            <value>&quot;Sesame seed&quot;</value>
            <value>&quot;Sunflower seed&quot;</value>
            <value>&quot;Treenuts&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Suger&quot;'>
            <value>&quot;Sugar (Raw Equivalent)&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar beet&quot;</value>
            <value>&quot;Sugar cane&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
            <value>&quot;Sugar non-centrifugal&quot;</value>
            <value>&quot;Sweeteners, Other&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vegetables&quot;'>
            <value>&quot;Aquatic Plants&quot;</value>
            <value>&quot;Beans&quot;</value>
            <value>&quot;Honey&quot;</value>
            <value>&quot;Onions&quot;</value>
            <value>&quot;Peas&quot;</value>
            <value>&quot;Pepper&quot;</value>
            <value>&quot;Pimento&quot;</value>
            <value>&quot;Tomatoes and products&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Vegetables, Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Item Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Nutrition]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Group]' default='&quot;Others&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Carbohydrates&quot;'>
            <value>&quot;Cereals - Excluding Beer&quot;</value>
            <value>&quot;Starchy Roots&quot;</value>
            <value>&quot;Sugar &amp; Sweeteners&quot;</value>
            <value>&quot;Sugar Crops&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fats&quot;'>
            <value>&quot;Animal fats&quot;</value>
            <value>&quot;Nuts and products&quot;</value>
            <value>&quot;Oilcrops&quot;</value>
            <value>&quot;Vegetable Oils&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Proteins&quot;'>
            <value>&quot;Eggs&quot;</value>
            <value>&quot;Fish, Seafood&quot;</value>
            <value>&quot;Meat&quot;</value>
            <value>&quot;Milk - Excluding Butter&quot;</value>
            <value>&quot;Offals&quot;</value>
            <value>&quot;Pulses&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' hidden='true' name='[Unit]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
        <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
      </column>
      <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
      <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
      <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <group caption='工具提示(Area)' hidden='true' name='[Tooltip (Area)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
        </groupfilter>
      </group>
      <group caption='工具提示(Area,Category)' hidden='true' name='[Tooltip (Area,Category)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='工具提示(Area,Item (组))' hidden='true' name='[Tooltip (Area,Item (组))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area]' />
          <groupfilter function='level-members' level='[Item (组)]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area, Area Code'>
          <field>[Area]</field>
          <field>[Area Code]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.599747' measure-ordering='alphabetic' measure-percentage='0.295455' parameter-percentage='0.104798' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Item (组)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fats and oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains, Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fish, Aquatic Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seed, nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bovine Meat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spices, Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vegetables, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groundnut Oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat, Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Offals, Edible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops Oil, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beverages, Alcoholic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poultry Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rape and Mustard Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rye and products&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweeteners, Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treenuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aquatic Plants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocoa Beans and products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pimento&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter, Ghee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Potatoes and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apples and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barley and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottonseed Oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Infant food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mutton &amp; Goat Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pulses, Other and products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sesameseed Oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demersal Fish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapes and products (excl wine)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelagic Fish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquatic Animals, Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts - Incl Copra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemons, Limes and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maize and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olives (including preserved)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pigmeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Fermented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fats, Animals, Raw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassava and products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges, Mandarines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rape and Mustardseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aquatic Products, Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rice (Milled Equivalent)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflowerseed Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Groundnuts (Shelled Eq)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize Germ Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat, Aquatic Mammals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tomatoes and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cereals, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapefruit and products&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Fish, Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmkernel Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sugar (Raw Equivalent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fruits, Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soyabeans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coffee and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fish, Liver Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet and products&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar non-centrifugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshwater Fish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soyabean Oil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tea (including mate)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cephalopods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ricebran Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roots, Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Citrus, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crustaceans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oilcrops, Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sorghum and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coconut Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fish, Body Oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pineapples and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molluscs, Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Oil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Group:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fruits - Excluding Wine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals - Excluding Beer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fish, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Animal fats&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nuts and products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Starchy Roots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Offals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk - Excluding Butter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stimulants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sugar &amp; Sweeteners&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sugar Crops&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Nutrition]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Carbohydrates&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Proteins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fats&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C?te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C�te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cereals &amp; Starchy Roots&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grains &amp; Starchy Roots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fat, oil, nuts &amp; oilcrops&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eggs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fish &amp; Aquatic Animals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Milk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar &amp; Sugar Crops&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Element:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Feed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='20%80%'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='11'>Top 20% countries produced less food than before due to the improvement of productivity of other countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='CountD' name='[pcto:cum:ctd:Area:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:cum:sum:数据透视表字段值:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.20000000000000001' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' num-steps='2' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-format' id='refline0' value='p0.0%' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666'>In </run>
              <run fontalignment='0' fontcolor='#f28e2b'>1961</run>
              <run fontalignment='0' fontcolor='#555555'>,</run>
              <run fontalignment='0' fontcolor='#1b1b1b'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>20.2%</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#666666'>countries produced</run>
              <run fontalignment='0' fontcolor='#787878'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>88.7%</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#666666'>food and feed.</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#666666'>In </run>
              <run fontalignment='0' fontcolor='#f28e2b'>2013</run>
              <run fontalignment='0' fontcolor='#555555'>,</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>20.2%</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#666666'>countries produced</run>
              <run fontalignment='0'>Æ </run>
              <run fontalignment='0' fontcolor='#f28e2b'>83.6%</run>
              <run fontalignment='0' fontcolor='#666666'> food and feed.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.22733423545331533'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.73796095444685461'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1.0286874154262518'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.45553145336225587'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:sum:数据透视表字段值:qk:1]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='GroupTop5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>In 2013, China produced the most cereal, starchy roots and vegetables. </run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>India produced the most milk.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:1]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:2]' />
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Group:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Production:&#9;</run>
                <run bold='true'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;Sheet name=&quot;bar&quot; maxwidth=&quot;600&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk] / ([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Rank各国各item'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]&gt; - &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]&gt; </run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>Top 10 Countries in &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:ok:7]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[rank:sum:数据透视表字段值:qk:15]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:14]&quot;</bucket>
              <bucket>&quot;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]'>
            <groupfilter function='member' level='[none:Group:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='member' level='[none:Item:nk]' member='&quot;Bovine Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='1' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='2' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='3' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='4' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='5' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='6' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='7' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='8' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='9' />
              <groupfilter function='member' level='[rank:sum:数据透视表字段值:ok:7]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' value='168' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:qk:15]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7] / [federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='area food pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food 中的谷物占比逐渐变小，蔬菜、肉类、鱼类、水果增多&#10; &lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</rows>
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Item]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Alcoholic Beverages&quot;</value>
                  <value>&quot;Beer&quot;</value>
                  <value>&quot;Beverages, Alcoholic&quot;</value>
                  <value>&quot;Beverages, Fermented&quot;</value>
                  <value>&quot;Coffee and products&quot;</value>
                  <value>&quot;Stimulants&quot;</value>
                  <value>&quot;Tea (including mate)&quot;</value>
                  <value>&quot;Wine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats and oil&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Butter, Ghee&quot;</value>
                  <value>&quot;Coconut Oil&quot;</value>
                  <value>&quot;Cottonseed Oil&quot;</value>
                  <value>&quot;Cream&quot;</value>
                  <value>&quot;Fats, Animals, Raw&quot;</value>
                  <value>&quot;Fish, Body Oil&quot;</value>
                  <value>&quot;Fish, Liver Oil&quot;</value>
                  <value>&quot;Groundnut Oil&quot;</value>
                  <value>&quot;Maize Germ Oil&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Oilcrops Oil, Other&quot;</value>
                  <value>&quot;Oilcrops, Other&quot;</value>
                  <value>&quot;Olive Oil&quot;</value>
                  <value>&quot;Palm Oil&quot;</value>
                  <value>&quot;Palmkernel Oil&quot;</value>
                  <value>&quot;Rape and Mustard Oil&quot;</value>
                  <value>&quot;Ricebran Oil&quot;</value>
                  <value>&quot;Sesameseed Oil&quot;</value>
                  <value>&quot;Soyabean Oil&quot;</value>
                  <value>&quot;Sunflowerseed Oil&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fish, Aquatic Animals&quot;'>
                  <value>&quot;Aquatic Animals, Others&quot;</value>
                  <value>&quot;Aquatic Products, Other&quot;</value>
                  <value>&quot;Cephalopods&quot;</value>
                  <value>&quot;Crustaceans&quot;</value>
                  <value>&quot;Demersal Fish&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Freshwater Fish&quot;</value>
                  <value>&quot;Marine Fish, Other&quot;</value>
                  <value>&quot;Molluscs, Other&quot;</value>
                  <value>&quot;Pelagic Fish&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruits&quot;'>
                  <value>&quot;Apples and products&quot;</value>
                  <value>&quot;Bananas&quot;</value>
                  <value>&quot;Citrus, Other&quot;</value>
                  <value>&quot;Coconuts - Incl Copra&quot;</value>
                  <value>&quot;Dates&quot;</value>
                  <value>&quot;Fruits - Excluding Wine&quot;</value>
                  <value>&quot;Fruits, Other&quot;</value>
                  <value>&quot;Grapefruit and products&quot;</value>
                  <value>&quot;Grapes and products (excl wine)&quot;</value>
                  <value>&quot;Lemons, Limes and products&quot;</value>
                  <value>&quot;Olives (including preserved)&quot;</value>
                  <value>&quot;Oranges, Mandarines&quot;</value>
                  <value>&quot;Pineapples and products&quot;</value>
                  <value>&quot;Plantains&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains, Roots&quot;'>
                  <value>&quot;Barley and products&quot;</value>
                  <value>&quot;Cassava and products&quot;</value>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Cereals, Other&quot;</value>
                  <value>&quot;Maize and products&quot;</value>
                  <value>&quot;Millet and products&quot;</value>
                  <value>&quot;Oats&quot;</value>
                  <value>&quot;Potatoes and products&quot;</value>
                  <value>&quot;Rice (Milled Equivalent)&quot;</value>
                  <value>&quot;Roots, Other&quot;</value>
                  <value>&quot;Rye and products&quot;</value>
                  <value>&quot;Sorghum and products&quot;</value>
                  <value>&quot;Soyabeans&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sweet potatoes&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                  <value>&quot;Yams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bovine Meat&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Meat, Aquatic Mammals&quot;</value>
                  <value>&quot;Meat, Other&quot;</value>
                  <value>&quot;Mutton &amp; Goat Meat&quot;</value>
                  <value>&quot;Pigmeat&quot;</value>
                  <value>&quot;Poultry Meat&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Infant food&quot;</value>
                  <value>&quot;Miscellaneous&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Offals, Edible&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                  <value>&quot;Pulses, Other and products&quot;</value>
                  <value>&quot;Spices&quot;</value>
                  <value>&quot;Spices, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seed, nuts&quot;'>
                  <value>&quot;Cloves&quot;</value>
                  <value>&quot;Cocoa Beans and products&quot;</value>
                  <value>&quot;Cottonseed&quot;</value>
                  <value>&quot;Groundnuts (Shelled Eq)&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Palm kernels&quot;</value>
                  <value>&quot;Rape and Mustardseed&quot;</value>
                  <value>&quot;Sesame seed&quot;</value>
                  <value>&quot;Sunflower seed&quot;</value>
                  <value>&quot;Treenuts&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Suger&quot;'>
                  <value>&quot;Sugar (Raw Equivalent)&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar beet&quot;</value>
                  <value>&quot;Sugar cane&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                  <value>&quot;Sugar non-centrifugal&quot;</value>
                  <value>&quot;Sweeteners, Other&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vegetables&quot;'>
                  <value>&quot;Aquatic Plants&quot;</value>
                  <value>&quot;Beans&quot;</value>
                  <value>&quot;Honey&quot;</value>
                  <value>&quot;Onions&quot;</value>
                  <value>&quot;Peas&quot;</value>
                  <value>&quot;Pepper&quot;</value>
                  <value>&quot;Pimento&quot;</value>
                  <value>&quot;Tomatoes and products&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Vegetables, Other&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]'>
            <groupfilter function='level-members' level='[Item (组)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - bar]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area]' />
              <groupfilter function='level-members' level='[Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - bar]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area]' />
              <groupfilter function='level-members' level='[Item (组)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Item (组))]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Tooltip (Area,Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='cntnt feed pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>饲料中的谷物和薯类的占比从66.6%提升至75.6%，奶类占比从24.7%减少至11.8%</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' value='p0.00%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='feed pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='food&lt;feed pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Food and feed percentage in Area(&lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]&gt;) in &lt;[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>Globally</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>, most maize, sorghum and soybean were produced as </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>feed </run>
            <run bold='true' fontcolor='#555555' fontsize='12'>in 2013.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>However, most maize, sorghum and soybean in </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>India</run>
            <run bold='true' fontcolor='#666666' fontsize='12'> were produced as </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='12'>food</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Element]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Maize and products&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Sorghum and products&quot;' />
              <groupfilter function='member' level='[none:Item:nk]' member='&quot;Soyabeans&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' value='false' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' value='Item for pie' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='foodfeed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Global Food and Feed Production</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#fafafa00' />
            <format attr='fill-color' id='annotation_2' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1992' value-column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</cols>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666' fontname='Tableau Light' fontsize='8'>Data of 19 countries (Russia, Ukraine, Belarus, Uzbekistan, etc) had been collected since 1992 (after the collapse of the Soviet Union).</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1958.3068783068784'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9738561.7894736845'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1991.4497354497355'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6807976.0657894732'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#666666' fontname='Tableau Light' fontsize='9'>Data of 19 countries (Russia, Ukraine, Belarus, Uzbekistan, etc) had been collected since 1992 (after the collapse of the Soviet Union).</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1958.7532467532467'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5585157.418269231'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1989.1844155844155'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3061913.711538461'>
                  <node-reference>
                    <axis>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='gif area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</run>
            <run bold='true' fontsize='12'>&gt; Production in  &lt;</run>
            <run bold='true' fontsize='12'>Page Name</run>
            <run bold='true' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</cols>
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='33' lines='true' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='gif feed pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Food 中的谷物占比逐渐变小，蔬菜、水果、肉类、鱼类等副食增多</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'> &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='gif food pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Food 中的谷物占比逐渐变小，蔬菜、水果、肉类、鱼类等副食增多</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'> &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='gif pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production in &lt;Page Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='10'>Global </run>
            <run fontcolor='#f28e2b' fontsize='10'>food</run>
            <run fontcolor='#666666' fontsize='10'> production in 2013 is </run>
            <run fontcolor='#f28e2b' fontsize='10'>3.7</run>
            <run fontcolor='#666666' fontsize='10'> times as large as in 1961.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='10'>Global </run>
            <run fontcolor='#4e79a7' fontsize='10'>feed</run>
            <run fontcolor='#666666' fontsize='10'> production in 2013 is </run>
            <run fontcolor='#4e79a7' fontsize='10'>2.7</run>
            <run fontcolor='#666666' fontsize='10'> times as large as in 1961.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontsize='10'>Feed</run>
            <run fontcolor='#666666' fontsize='10'> percentages gradually reduced from 1961 to 2013.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='level-members' level='[none:Area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='global feed pie cmpr'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>With the improvement of nutriology, feed conversion ratio had been raised; more cereals and less milk were needed in livestock industry.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Feed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>2013</value>
                <value>0.11828289022762527</value>
                <value>0.086712212624908039</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>1961</value>
                <value>0.24743134228094824</value>
                <value>0.066041463147600538</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>2013</value>
                <value>0.7563038851412287</value>
                <value>0.55444014913066175</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>1961</value>
                <value>0.6663826363692209</value>
                <value>0.17786301410436714</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='global food pie cmpr'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>With the development of productivity, more non-staple food (vegetables, fruit, meat) were produced.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' direction='DESC' using='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
        <mark-labels>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>2013</value>
                <value>0.22584005938619084</value>
                <value>0.17776322790368454</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Vegetables&quot;</value>
                <value>2013</value>
                <value>0.1767802719906193</value>
                <value>0.13914728797075984</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Milk&quot;</value>
                <value>1961</value>
                <value>0.24939289404193971</value>
                <value>0.053090758886516771</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Vegetables&quot;</value>
                <value>1961</value>
                <value>0.11600531574151809</value>
                <value>0.024695211430328386</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='global ntr pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Food 中的谷物占比逐渐变小，蔬菜、水果、肉类、鱼类等副食增多</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'> &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nutrition]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Group]' default='&quot;Others&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Carbohydrates&quot;'>
                  <value>&quot;Cereals - Excluding Beer&quot;</value>
                  <value>&quot;Starchy Roots&quot;</value>
                  <value>&quot;Sugar &amp; Sweeteners&quot;</value>
                  <value>&quot;Sugar Crops&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fats&quot;'>
                  <value>&quot;Animal fats&quot;</value>
                  <value>&quot;Nuts and products&quot;</value>
                  <value>&quot;Oilcrops&quot;</value>
                  <value>&quot;Vegetable Oils&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Proteins&quot;'>
                  <value>&quot;Eggs&quot;</value>
                  <value>&quot;Fish, Seafood&quot;</value>
                  <value>&quot;Meat&quot;</value>
                  <value>&quot;Milk - Excluding Butter&quot;</value>
                  <value>&quot;Offals&quot;</value>
                  <value>&quot;Pulses&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[pcto:sum:数据透视表字段值:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <groupfilter function='member' level='[none:Element:nk]' member='&quot;Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Nutrition]' />
              <wedge-size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Nutrition]' />
              <text column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='map点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>In 2013, Asia produced the most food and feed.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Element]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[数据透视表字段值]' derivation='Sum' name='[sum:数据透视表字段值:qk]' pivot='key' type='quantitative' />
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Area:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Element:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]' field-type='quantitative' max='22632900.47249392' min='-18101244.776992112' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]' field-type='quantitative' max='11333290.785034472' min='-8836043.2705362774' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#ebebeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' />
              <size column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' />
              <lod column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:latitude:qk]</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='rank点'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Production Top 10 Countries</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#666666' fontsize='11'>Negeria, Mexico and Pakistan became the new Top 10 countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
          </datasources>
          <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;C?te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;C�te d&apos;Ivoire&quot;' value='&quot;科特迪瓦&quot;' />
                <semantic-value key='&quot;China, mainland&quot;' value='&quot;中国&quot;' />
              </semantic-values>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1729663756639514624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([数据透视表字段值]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1729663756639514624]' derivation='User' name='[usr:Calculation_1729663756639514624:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Area]' ordering-type='Field' />
            </column-instance>
            <column caption='Production' datatype='integer' name='[数据透视表字段值]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
              <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
            </column>
            <column caption='YearOrigin' datatype='string' hidden='true' name='[数据透视表字段名称]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;China, mainland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Area:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1961' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1971' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1981' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='1992' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2002' />
              <groupfilter function='member' level='[none:数据透视表字段名称 - 拆分 1:ok]' member='2013' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' included-values='non-null' />
          <slices>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</column>
            <column>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' value='59' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.62569057941436768' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3] + [federated.1nyxr5b1omuxg01fc3jml00ifgro].[usr:Calculation_1729663756639514624:qk:3])</rows>
        <cols>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='13' sizing-mode='fixed' />
      <datasources>
        <datasource caption='FAO' name='federated.1nyxr5b1omuxg01fc3jml00ifgro' />
      </datasources>
      <datasource-dependencies datasource='federated.1nyxr5b1omuxg01fc3jml00ifgro'>
        <column datatype='string' name='[Element]' role='dimension' type='nominal' />
        <column datatype='string' name='[Group]' role='dimension' type='nominal' />
        <column datatype='string' name='[Item]' role='dimension' type='nominal' />
        <column-instance column='[Element]' derivation='None' name='[none:Element:nk]' pivot='key' type='nominal' />
        <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
        <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
        <column-instance column='[数据透视表字段名称 - 拆分 1]' derivation='None' name='[none:数据透视表字段名称 - 拆分 1:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[数据透视表字段名称 - 拆分 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[数据透视表字段名称]'>
          <calculation class='tableau' formula='INT( SPLIT( [数据透视表字段名称], &quot;Y&quot;, 2 ) )' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='77' param='horz' type='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='75' param='horz' type='layout-flow' w='99032' x='484' y='684'>
              <zone h='98632' id='68' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                <zone h='98632' id='64' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                  <zone h='98632' id='61' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                    <zone h='98632' id='59' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                      <zone h='98632' id='57' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                        <zone h='98632' id='51' param='horz' type='layout-flow' w='99032' x='484' y='684'>
                          <zone h='98632' id='49' type='layout-basic' w='99032' x='484' y='684'>
                            <zone h='94269' id='17' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                              <zone h='94269' id='11' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                                <zone h='94269' id='5' param='horz' type='layout-flow' w='99032' x='484' y='5047'>
                                  <zone h='94269' id='3' type='layout-basic' w='99032' x='484' y='5047'>
                                    <zone h='32423' id='1' name='20%80%' w='27128' x='484' y='33274'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='25404' id='9' name='foodfeed' w='27128' x='484' y='5047'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='25404' id='15' name='gif area' w='46614' x='52902' y='5047'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='32423' id='21' name='map点' w='35952' x='27612' y='33274'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='33619' id='26' name='GroupTop5' w='44256' x='31980' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='33619' id='40' name='rank点' w='17952' x='484' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='26775' id='29' name='GroupTop5' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' show-title='false' type='color' w='13544' x='18436' y='72541'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='29428' id='44' name='Rank各国各item' w='23280' x='76236' y='69888'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='2823' id='22' mode='dropdown' name='map点' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' w='27128' x='484' y='30451'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='2823' id='45' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' w='71904' x='27612' y='30451'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='4191' id='47' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' w='12558' x='86958' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone forceUpdate='true' h='6844' id='53' type='text' w='13544' x='18436' y='65697'>
                                      <formatted-text>
                                        <run bold='true' fontsize='11'>France, Italy, United Kindom and Poland were no longer the Top 10.</run>
                                      </formatted-text>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='25404' id='55' name='gif pie' w='25290' x='27612' y='5047'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='15056' id='66' name='global feed pie cmpr' w='35952' x='63564' y='50641'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='17367' id='73' name='global food pie cmpr' w='35952' x='63564' y='33274'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='4191' id='78' mode='dropdown' name='Rank各国各item' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' type='filter' values='database' w='10722' x='76236' y='65697'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                            <zone forceUpdate='true' h='4363' id='43' type='text' w='99032' x='484' y='684'>
                              <formatted-text>
                                <run bold='true' fontalignment='1' fontsize='18'>                                               Global Changes of </run>
                                <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='18'>Food</run>
                                <run bold='true' fontalignment='1' fontsize='18'> and </run>
                                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='18'>Feed</run>
                                <run bold='true' fontalignment='1' fontsize='18'> Production from 1961 to 2013  </run>
                                <run bold='true' fontalignment='1' fontsize='8'>by Hilary Zhang                                               </run>
                                <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Unit: 1000 tonnes</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4962' id='14' name='foodfeed' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' w='8464' x='19166' y='18135' />
        <zone h='11805' id='25' name='map点' pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' w='8464' x='27993' y='49957' />
        <zone count='1' h='9410' id='20' name='gif area' name1='gif pie' synchronized='1' type='currpage' w='10157' x='87727' y='5731' />
        <zone h='3764' id='65' mode='dropdown' name='gif area' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' values='database' w='9674' x='77328' y='5304' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='foodfeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='20%80%'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]' type='color' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:cum:ctd:Area:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='food&lt;feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' size='216' type='filter' values='cascading' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' size='193' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' size='90' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' size='41' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' size='101' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2013</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GroupTop5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段值:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Item (组)]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rank各国各item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Item:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:11]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[rank:sum:数据透视表字段值:ok:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rank点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='20%80%'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GroupTop5'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Rank各国各item' />
        <viewpoint name='foodfeed'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='gif area'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='gif pie'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='global feed pie cmpr'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='global food pie cmpr'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map点'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='rank点'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='66' />
    </window>
    <window class='worksheet' name='global feed pie cmpr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>2013</value>
                <value>0.7563038851412287</value>
                <value>0.55444014913066175</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk:2]</field>
                  <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cereals &amp; Starchy Roots&quot;</value>
                <value>1961</value>
                <value>0.6663826363692209</value>
                <value>0.17786301410436714</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='global food pie cmpr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='area food pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cntnt feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[pcto:sum:数据透视表字段值:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif food pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Category:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='gif feed pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1961</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Group:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='global ntr pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='291'>
            <card param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]' type='filter' />
            <card mode='radiolist' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Element:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Nutrition]' type='color' />
            <card pane-specification-id='0' param='[federated.1nyxr5b1omuxg01fc3jml00ifgro].[sum:数据透视表字段值:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[Nutrition]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Area:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Continent:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:Type:nk]</field>
            <field>[federated.1nyxr5b1omuxg01fc3jml00ifgro].[none:数据透视表字段名称 - 拆分 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='20%80%' width='192'>
      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
      N1i/E/j/Gmx2A+IIWi4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZBd15nY97v3vru8fX+v9wa6G0BjIQiuokSKEkeLNRNrJHlmrMRLJeNM
      TTzjcmznn6ScSjyVStlxxXHZSmbk1MSeZCazZCyNRFErRYqkQBDcsDaW7kbv6+t++37f3U7+
      aKIFEFsDaBAg2b8qVOG+vufc7957vnu+75zvfEcSQgh22OFjiny/Bdhhh/vJjgLs8LFmRwF2
      +FizowA7fKzZUYAdPtbsKMCHBLNZ5ZWXX+TFl1+lYdq88drLtO2rzzn71hus19vXLX/mzWPk
      GyYAQnicP/U2P/zxi1RqFV5+9Y17LT5LU2N867s/wnRccOp03vomneN/gLM+u6Xy1sk/2frF
      zDIvHzsJQKfV4i9eHuPPXz7HXPHaZ+Pbeq073C+EZ/Ptb32HL/zqrxPyOXhCUCqs4wrB9MWz
      TC7k+eTTz1ArF1h+6w2CwRhPP/UIY28fZ6XU4KlnnqVWLpJ0PADG3z3KqhPji7/0LLZtsjg3
      w89+Wmdw9AjpIBx/6wSxrkGePDTE2yfHqFdLjBx6nN6En2OvH0PSAhx5/EnKS5OMz63xzLPP
      0lif58TYBPsffoKhvgzCc3jn+DGansFTj+zj+Rd+Qmb40MYNuXW8toT/s7+zcbh2CmfuBL7R
      ryKHgthj3wK9B3X0l/DWTuAsnMUrL733NFzeOfY6+brFM5/5DKsz49SbDVqewac/8QiTYyeY
      W1ik4EYAsFot2oqf3/zsCAAz86ucnKvyhU/sweeYOz3AhwG7VUMOpfC7Nb73/POsFOsAtCur
      nJjI8exTh/nxj18CBEP7j+CrL3JpuUQi000movLKsXeuqm9yfpnHDu/Hpxn4dR8eCp/61BO8
      9eY7KD6N3cPDjL19lEq9wdjkPM984hHeeOsER1/+MQMHHkdu5CkU1zh+do5PHhnmlaPv8PrR
      1xk5cJhkNADApdNvYIf62J2A4+eXGR0a4jOffw7DpwDgrb9L5/gf4K6NY439FO2Rv4n9zh/i
      nP1/kbueRfaWcObexTr7EtpjfwfpvXIISHf1ktBtfv7WWSYvnKN7+BD52XHyuVlOz1b43LNP
      ISNt3u/EzAp//vI5FvNVfnRmnb92pJsXjs/wV69e3FGADwOqEcCslzHiXRzc3UWjbQHg2B38
      wTD+QAjPsQCZQMAg4DdoVQu89sY7GIEAnnu1rZSNh1laLyGEQAgIBEMYuoaM4MSbP6dYM/Hr
      Oq7wCIbCGLqGBLQ6Dsl4BFmRcTomK0uzHH37HNl0jC99+Vep5WZ46bW3ADDbbSLRKJFoFNNs
      XXNPcuZx9E/+LkoijaSGQQ2B5CI6baRgHCmYQrTWkfxpkFWQNhp0q7zK0bfPEggGcRwbJB/R
      SBBV9WG2msSSKRRF4Yr2z76hHv6zzx2iJyixkCvzgxOL9KaDVOvNHQX4MCD5/Hzx2cf53vPP
      M7XWpDsRJpnOEssMEFfqfPeFH/Pk08+Q7Mpy9virLDR8HBoZJBbwsZqvkk4miCZS6L6N1/3E
      pz/P6oW3eeGF77FcbJLJpEBSyGRS9PcPsLa6hBaMoKoa2XQSZB/ZdIInn3iUF3/wAuMzywRT
      PTz18F48AaqqcnHsDKvrZXbv3gXA/sc+xfyZo7z67iRPP/Ew8VQaTX6vuUk6crx34/9qEiWT
      pvP6v0UZ+VXUh34N+8x/wFlZRt33JeSAg/XOHyOF+gDQgzFCqsdauUkqESWVyaBIEqlMhnT/
      Huz8FC8dfZd0MgaAoqp0xzd6JSUQ5kuHs3gCNJ/Cl5/ei7QTCrHDVpkZP8P5S/NUGxa/8Rt/
      Y1OhPszsKMAOH2s+/Cq8ww53wY4C7PCxZkcBdvhYs6MAO3ys2VGAHT7WXKUArm1y5vQpKvU2
      58+f3/x9fmIS86piYvPvc1MXOXH6HN4NLjA5MXFTASYmJwDB9Pg5To2N3+Asj8mJSyA8xs+d
      4dLsItcbu7I7VWbmctf8XigU8ByLsQsXbyrLh521pTlOnTmH5Vz/bUxMTF7zW7NapmU5nD9z
      Fve6pSzOnrn6vbRqZc6ev4jreUyNX6DW6uB0WhRKNVq1MqfPjNGxr1/bg8YVsUCCH3z/+/zS
      l76M59iMT4zTrBQoNWx0u8V8JUcsvguvtkrNUsivLnDw4EFOnD7HV776N7h4+h3W8iV2DY8w
      PbtIPJWhkptnIVdi7759LMxMcubCDAPZEA1XYPiT5FcWKdTq7Nu7h1PnJvjq177KmXffZK1U
      Z3hXL/NLK/T272J2ZpZq3WTvnkHOX5ona0xxaXyKumeyKxag2nTY3ZdiIbeMaWnk1stIbhkV
      Fz2a5a2f/5TP//Jfp1yu8PprP6PtKOg+B9m2GDjyaQZSofv3BraRU++e4NFPPMr3vvc8tUqF
      0f0HMFt1egd3Mzs9S7FSYzW3QirkxwhHWVmv0cnP4mb34bcqTI6dYGWtRDoZZb1qoxlBnn1q
      lFK5yos/fAFbKHzhS79CvWUi1Rb5yY9mSe7az9hPX+TwrjjnigZfeHKUjN/m6MlJPv+J/ff7
      kdySq3oA25NoFhf4wY9fA2C90iSjtsm3fDz0yGGmz77DSqHO4sL8Zpl2o8L5iSlml9Z5cn8v
      P/rRiwwf+STLM6foeGG6UlFAsLS4SGF+kXy1xu79e1k4/S5aZoR42ACgWS0yfmmWCxfP49cU
      Tp44gxoIsDR+mq69DxM2VABKayuoqSF0p8bnP/cchapJ2rB47eQ0Tzz+EJJrUa7UKZXzrBWb
      HNq/h57+XfR3JSmsrVLryKhWneWayUhfmnyl+QE96nuPY7UZn13j0YND9I8+Rrtc4InHDvLm
      0ZeJ9Y4SDRmUikVq1TLjE5c4/Nhj9Hd3M7J3mHKxyKWFVR7d38/5CxdJD4xQL60DLsViGVso
      hFSB7UFheYYiKfZkA/hDUYTnMDyyB58soakyK6UafuXDMb101URYKbfAxPwqma4B7HYVXRHk
      6za9ySBLuXX27NvP+PmL+MMR/JrC6Ogo4+PjjI6Okl+ZZ3I+x6NHDnHm1Gl6h0YpLF6ig85T
      TxzhwpmTlCodegcypHq6yC+VKawvogQiPPbwQcbHJxgdHWVpdpJcucnu/h4mp+cZGt7FzKVp
      gtEEhw+MMD45zei+vSxMTdE1MsLy5AUKTZeR3hgTcyuk0r2U1pZQA2ESQYWGoxH2WXhamI5p
      ItkNmp5O2PDRFQtSVyJ0x4P38x1sG9MT4/TvGUW0Sqw1IK7ZnL04zcGHHmLiwjm0QAS/bFNp
      dBjdO8z4pTn2jgwws5An5FdIxYJMzKwwsrsLjCT14jojI/2Mjy/g8wlUGXoGRxh79xiez2D3
      8DDTF8+TGdhLpzjHQqHD8K4sxUKJvuH9dCcj9/uR3JKdmeAdPtbsjAJ9hBBC4LouVqeN+54f
      3G5fvQik3W6DELjFGa758gkbYXVuWL9rW1jO1c7tRkTpxr/ryfN+2YQQuJ6HEALPE3ieh+t5
      157vuYjLv3vOxj9ufK2bYbbb1x00gW1YEHNZGOm9cFUhxOb/t6O+O61ju8rfqTz34zkszk5h
      ujIhQ8Lnj1IqVRCuiaIGSEQMmpYEToeBlIdbWAGrAv4MorGCHBnAK18EYw8VIVOst4mGDFwP
      6rUaXT3dLF6axJ/tJRuN0DFbVJttCutr9Pf3oaoq5WqTgC7RtiRGhgfJLc1QrHfo6h7AkC0m
      L80RjIZoN036+3tZL1bIxAJML+R4/LFHWFtdpF5r0T+0B70xg1tYwbf3M3jFSbzSKl7/o5w+
      v0hfXxrPbFJvWwSjCWS7iR4MUypW2D0yQq2wQkdoWI0S6d4hKoU1QsEA5YaFRgefHqRcKJDs
      7t6eHsDzfjHs5rp3P/x1ZX13wt3KcGV5y7JYWFj4wGW4ky+d44JnNai3LIqlKmG/giVUDNkm
      X6qwtLQIgKSFUNKDCM+PKF0EPYO7egop3IckSbTaFgG/j0K5iV+FeCLK1OQsqWwXzXqFfD7P
      Sr5Mb08PPd3dSJ5NsdJAVzyaHQ9DAQFYzSqhVDfNahXXcUj19KIqCvFoCCMYQVNlZFlGU30I
      AVbHxHqvYSMr4FPB85D9UZSex9ADIbqzaWzLwpNUgsEAOCaLiwuUS2U6rRpNy6NSqbC4tIht
      dajXNwY5qtUqSwtLmLbAtUwSIYPpuYW79wE2ujJvYxEC4DgOPt+ddyzvr+9OuFsZrizf6XTI
      5XIMDg5+oDJc/gjI8ta/UY5lspzLk82kUWSJfKlK2O+jZUvokoOr6IQMHV2TER6I5goYWWgu
      I0X68SpzyJFB5ufm0GIpEtEQhqayspojk0mztrpGPBWnVKqRTsYoVZsYiocaCKEpEqVqi3g0
      CEJCM3SsdgPhM5BcD8tssF6s0tObpVprYygexUqDWCyE7clk00kss02hUCTb04vcWAShI+l+
      kH2gBpAkWFtbIxKNbqz4kjaabqteBS1Ao1qlt6+XcmENxQhh1srEs73gWnTaTTquQjjoR1gN
      Xjv6Nk8995kdBbhV+QdFAYQQiGYeSQshaYE7rneHq9lZFP8hwKut0Hn934DdRv+lf3pDBaiW
      8uQKVRJRP6FED5rssZ5fJ5POIEkgkMivrZNNJzk5W+bh4RSyJCE8gSxLtOotWopK0u9DsDFC
      IthQPlmWKeZzBGMZDFUGIfCEoF6vo6kaht94TwqBQELybExXRvdtmDmlfI5izSQW0mh0BLGA
      jCuHcc0ybVdhd1+WZsdF13wosszCShFHURnOhLg4X0RSVUYSPtqygeLa6IYOgCTJCOEhyzKu
      56HIMp7nIckywnORZYXc2hrZTJqNdZICkPA8gSJL268A5XIZ13XJZrNIknRdZ9BxHCqVCqFQ
      CNd1aTabhEIhAoEbf9ku13M959B1Xer1OoVCgV27dl237PvLfFhwlt7FOvYN9M/+tyjZgzc9
      t1xrEtBkWq02lcYcZquB4wnya2sYuo/lYpuh3gydVpu67fLDn18gEg2xVqyxuy+NZNt0DWSZ
      vDiGIzQcq0koFMY0TSTNoN2sE6iaxA2JasskFAqzurpGIpnA6zQxXR+e1UDWg4z2xVlYbmB2
      SiT69tMViVBtWTTbNpoMkVSG5fkm8YiftdUSwg2xNF9gbnmZzz33aeIRP8WWC7LCYDpI2ZZp
      VHIsdXTCkk2psIrlSsQifiYuzdHf10+h1uZzn/kkZ999AykYZ21hiac/90U6nQ7TF8+y1pTQ
      vSaxZIZStY4uzO1XANM00TSNlZUVbNumXC7T3d1Np9Oht7eXqakpXNclkUjgui61Wo18Po+q
      qvT391MqlTBNk3g8TigUolQq0Wq16HQ6xGIxhBD4/X6KxSLhcBhVVZEkCU3T8Pv9LC0tkUwm
      aTabeJ5Hs9kkkUgghKDVajEwMLDdt3xvEB7WqT/FW3ob48v/BjmQuGWRgKawXmqQiMdQZYWO
      aRIJqFi2B5JLVzqO4fdj+HX29GpUNAiH/MRCBqmIwVrJQ/fJ1D0P1W+QTicJaBLzS+uEAgaO
      ZRHwQb7cIBYNoqgG0XAAv9+Pg4PwfERTcSQEkk8jGArS2xen5Soszs/iqQEMxaNhQWElR6Hc
      QZF0DF0DyUcwEqbXSuJ4HpcWi8STceqtDg3TpTsZQPiTqKs1DL+fnoHdGzftdhgeHiGZSqKo
      RTzhofkj+EMhArt76VgOfr+B1dLIJANEw93gdMiXKqS6urffB5iYmMBxHGDDYRkcHKTValEo
      FHjiiSeYnZ1F13WGhoYolUosLi6SzWZxXRdd1zFNk2q1SigUol6vEwgESCaTtFotTNNk165d
      zM/PMzk5ycDAAJ7nkc1mCQQCnD9/nr6+PnK5HNFolEqlQqPRYGhoiGazST6f58knn8Tv99/0
      nu6nDyCEQNRXMV/55yjZg2hP/jaSfOf+0J1QrVaJRqMf6DU/SGrlAuvlJsO7Bz8aTrBt27Ra
      rc2XdiMZhBCb5tbNuB8KIIRANNawTv8Z3to51Kf/MUr20G2NArmet5GlQbm6jGM7uJK85UXs
      d2syttvt931kXNqtDsgq/vdiut6PabbRdD/ydS7pWiauouG0alhoxMLXN5WvHDq+7MO4QqBI
      EkKSNvydq0xysf0mUKfTQQiBbdvX2PTX8weEEMzMzNDV1UUwGMS27Vu+dNM0N82eyzd9ufGb
      ponP57vKZ7h8TUmSbtn47wfCMbFO/DHu8gm0R/42ytP/CMHtN77zU6sEwiFkx8If9FOqNMgk
      wszMFxgY7sYtLmGhEfB5uIqOWS3jD4exhYTXruMPRimVihg+laaikdRBNsK0q0X0YIRmrUI0
      kaBabzO8e4CFmSl8wRCtcp1IPEzb8jAkm1ypwa7BXiQBjVoJLRykXWrSchUGehPYkk6zuIKk
      GlRrTbLJCJemZ9k9shddhla7DrJGrVIm29XN/MRFug89xsKFC6SyPdRqGlajSiQaZb1QQZah
      d/ceZKvO8noF2WlhujKK3aCtRBjqMajUQ/R1GZwcm2CwN40lVAZ6UtuvAKVSiWAwSLlcJh6P
      UywWCQaDeJ5HMBgkl8uRSCSoVCrs2bMHIQTlchlVVVleXiYYDKKqKu12G8dxiMViGIbB+vo6
      mUyGYDBIqVRCfs/bN02TSqVCX18f1WoVTdMIBoO4rkuj0aDdbpNKpajX6xiGgSRJ9PX1bfdt
      3zFeZRHz5f8J38jn8H/195HkjVci7mAyUJIlVJ/g0kKNaLBN1XKpN226UmEkwHZBwmJhdZVA
      NIFf9WOZJl2ZGG/NzJMItenpz1IomWTScYrzMzQ7ORKZXVTX5im0BZ6QabTbuE4aVw7gNMso
      ahSzWWMhV6G/O0U4aFAqlXBti06zjV2rkfRH8Af8jI1d5MgTT1C0PAynSr1SxxKCTCpOuVxB
      dixQfSQNl0KtTrPt0N2VRQJSXb1Ink13PMK8q1BcmSLRvRtLQLncoj8bxVesEDCCFJYLxCJh
      wgqEY3EqVRPVCNGTTdFq2whhAcntVwDXdVlcXCQQCFCr1QgEApRKJarVKnv37iUej1MoFFhc
      XKSrq2vzi9xsNpmenmZ0dJRKZWO2cc+ePbTbbXK5HK1WC1mWUVWVTqezMfz2nuMrhGBxcZFK
      pUI2m0WWN4beZmdn2bNnD5VKhdnZWQ4fPoxhGNfpoj94hOfiXPw+9sXn0T/736Gk9t51nXsG
      0hiaSlBRkHWNVqNNPBqkUGmS8PuYaTXI9A+RTsZouzKRYAAZh3Ld5MDeQTR/hIBfIxiBaqVK
      OttFfzjC+KkThLt3szcjEYjEqDda+HwGlbVZ/KlehvszdFoGoUQ3Gha2pCHZbWQjRKdZIxSN
      4pNkXNel1Yxj+GT6+vvQfDKeuk46FaNUaZAO6jQ7HmG/gunK7O7xkUhnKOYLxAwfka4uJMCn
      6UT1VcIHHkOW5fdimmTqlSIyMnogwIGDWQzFpWF6lPMNFG3jGRl+g2Rcx8KHJKT76wM0Go1r
      TJKb+QDtdhtN027pH9xMBs/zaLfbBIM3DoG+lz6AEAKvPIf1xjeQ47vQPvH3kXz6deWE25sJ
      3uH2uecTYbZtI0kSiqJcZf8LIQgGg7cVNGYYxk3/vhVdlmX5po3/XiLMKp13/gOiPIP25H+F
      0nXovsixwy/YdgVoNBrYts3KygoDAwMIIeh0OjiOgyRJ+P1+JEnCsiwcx8G2bfx+Pz6fD13X
      KZfLRCIR6vU6fX19LC8vEwqFNhUJNhzdZDJJPp/ftP8lSaJer6Pr+qayqapKqVQinU5Tq9Xw
      PI9MJoOqXn8k4l4ghACzinXuW7jzx1EP/018z/wjJGnny/4gsO0KcHmcP5vNUq1W6enpwbI2
      shkLIahUKlQqFZLJ5Kb9fnmewDAMarUa4XCYrq4uLMtCCEGpVEKSJMLhMO12m/n5eYrFInv3
      7kXTNObm5tA0jXA4jKIo1Ot1hBDouo6maczOztLf38/Y2BiqqpLJZLb7tq+L1y5jn/sr3LnX
      UR/6DbSvfRPpsjG6wwPBtvsA1WoVy7I2HdbLjT8S2Vge12q1NnuAUCi02QtIkoQsyzQaDaLR
      KLqu4/P5WF9fJxAI4DjOpr+Qz+eJxWI0m83NL73ruliWRSKRoF6v4/P5Nnuby6ESrusSj8fR
      9Wtt7iu5Gx9ACIGoLmG++QfQWEc9+FV8+355c3Rnq+z4AB8Mt6UAjWoJyafjST6sdoNkMnmN
      Ati2jaIom7b95b9dblSWZaGq6kbwkusiy/I1voHnedf8fiVXiny9c65swFfKt9UJnjtVACE8
      7PPfwbn4Ar5P/WO03iO3LHMjdhTgg2HLnyUhXJanz6OEh3EMl/z8As88/Sk8z8N7b4kbbMwD
      tNttKpUKhmFQr9dJpVI0Gg16eno2Y4UAzpw5QyqVYmBgYPN3XdeZnp7GMAwikQg+nw/DMDZ7
      B8uyCAQCdDodDMPAtm0cxyEcDm/OPbRaLZLJJKurqzSbTVRVvcoHiUQieJ53w+l+z/M2wzlc
      18V13c3jG9KpYb/xDYSio3359/Fk9dZlbvq8xaYst+L9Aww7bJ0tK4DdqtGyBVKrhSHb+KOp
      TbMF2OwBotEolmWRzWYplUokEgksyyIajRKPx8nlclSrVer1OgcOHECWZdbW1jBNk2AwyJ49
      e0in0ziOg+d5zM7Okk6nURSFeDyOaZqUSiXC4fBmIF0mkyGfz1Or1SgWi5s9zGUzbHh4mHw+
      j21v7JQyPT1NKBQimUxe916v7AFc10VRlBsOqwq7jX3heZxLP0V95G+jDv/SNXXcCTs9wAfD
      DU0gx7ZomxahcOimk/LvN4Hy+TymaW5+wUulEvF4nNXVVbq7u6lUKui6jizL+P1+2u325tc9
      mUyiqirFYpFAIIDP56PZbKIoCrqu02g0cByHeDwObJgnlmVRKpU2I0mj0Sj1ep1MJsPa2tpm
      nc1mE9d18fv9m+W2ogA3MoEuN3z74vdRRz6P+vDXkVT/deu4E3YU4NZcDoORJOkaMxq2Fst0
      QwV459hruEqIx556jJsNGt6rYLgre5fb5V6uCBPCw7n0U+zTf4pvzxdRD34NSbt2XmFHAe49
      1WqVY8eO8fTTT6NpGp7noWkay8vLmxbHrbjhG0onIrx2cpbHn3rstoRaWlpCURS6u7s3G3Gn
      09kUsNFoEIlEKJfLeJ5HPB5HkiQcx9k0WxzHoVAo0NPT88DYththyjk6x/4tkhHB/5XfR9LD
      91usjzWX/bOf/OQndDod8vk8Q0NDyLLMU089taU6bqgAxWqTTCSAc7OTrkMgEKBcLnPp0iVU
      VUUIgWEYFItFHMdB0zQOHDiAZVm4rsuFCxeIxWKbk2WXo0EvrxG4m6/odiHsFtYb38BdH0f7
      xG/j63nkfou0Axtt7bnnnqNQKFCr1eh0OiQSic2gyq1w3dYlRAddDeAzPG53KYbjOJvRn5dn
      cCORCLquY9v2pnlj2zaGYWxqrOM45HI5uru78fl81Go1LMu67wogmnnMH/9T5M/9l2if+oc7
      M7gPEJdDY94fTzY8PLzlOm7QuhRqjSbRgI4LN/UB3k8mk7luo31/9OX1liZGIpFNH0DTtM3h
      0vuFEALr3T9Ce+p3UPd/8b7KssMv6HQ6nDlzhu7ubmZnZ/nUpz7FuXPnUBQF0zTp7+/n0qVL
      DA0N3dKMvsHnTMLsmAQC/jtYlrE93O/GDyAqC3jVJZTUnvstykceIQTCNvFaJdzyHMu5POV6
      m3bHvibIUdd1QqHQ5gDF5eiDS5cukclksCyLSqXCiRMnKBaLN73udXsASVLYOzLA+HyBBz/D
      +73Ba5XovPlNtEf/LuyYPfcM4Vo4i2/jXPop7vxxRDMPns2/LP0WC14X4YDOSE+cJ/b38vSh
      fiLBjXXjly5dYnR0dDOuKxaLoWkaMzMzZDIZHnnkERYWFm45kXjDYdCJ02/xk6Nj/P1/+Fvc
      7Fv8IKwJfj+3vx7XQzSLuLkxvNI0XqcJ9RV8g5/EG/4SubX1+54Y66OGEB7uymmsY9/AXT4B
      70vV+9+Xfot5t+uq3+Jhg68+M8ovPzWCrm6Pb3jdWlrVIsWWy+OPPXzfTKAPAmGbOPPHsM/+
      JZIewjf0HNrDX8dVAlfNA9wIy3E5M/WLLZl2dcVIxz4aew3cS4TnYJ38E6w3vgGuveVy5brJ
      H/3oNKencvzXv/4J4iHjrofJr6sAgWiSoCqzlCvccO+vDyvCc/FKMzjj38ddPoWy62mML/2L
      q/PubDGGZ3Vukv/5j89sHv/uVx/nsw/3c/r0aQ4ePHjF6IRHbrVAKBx4IBflf5AIz6Hzyr/A
      PvuXvP+rv1VOXcrxP/xfP+N//M8/QzZxd8/zhv1IIhlntXIPMmfdB4QQiFYR+8LzuAtvIke6
      8e35ItpTv3vd5YhbpVVcvup4amGF5tI7zEwvM724TLlUwbPb+AIhzFKT//Rvfe1jrQBCCKyT
      f4w99h+508Z/maV8nX/9l2/yz/6LzxC4QaqVrXDD9t1qtvAJcOG25wIeFIRr461fwD73bbza
      KurBr6H96jeuitm5G/RwAihsHieCGkN9e9k9uI/5tRID/YMUCmv4jQBFo4Cm3bmyfRRwV05h
      vfF/gNgeu2J8ocCfvzzG3/uVR+7YFLqxAtQraKHIh8oHEJ6LMCt4uQt0lt/BzY0hJ0dQD3/9
      lnk174SBfUf43/7Brs3jdCxANLgxOfPQXTrBHzWEa2O99e/Atba13hffmeGvPTlCX/rO9iO7
      7huqry2w1uhw6Mi+25oEux8Iz8XLncW++AJecQbJiEByD+ruZzdMHPXmC+nvBrvT5vgP/2zz
      +KlnniMyup9228T3vnXHQoiNbGUPSGzTB427egZ34a1tr9e0HL53bILf+crjd9QLXH8UqGHi
      032cOP4W2a987oFSAiEEeC6iU8WZfgVn8ifIsQHUQ7+GnN6HJPvueghyq+iixVcb/+4Xx3aW
      VrWbP/x//oSvfuVX8WQdzWsTSmSZv3gePZlhdGT3PZfrQUMIgTP1Eojt3DxbEAr3xhEAACAA
      SURBVJLa7FfnObx6FOEcuiPT9rqtJDu8l+zw1YmahGcxdWmGcDAMwTDNUv62Yi7uBuF08Mpz
      uMsncXNnEfVVJD2KMvAU/v/kXyEZD04iV8cTKJrGW8eP4Sg+7EaDSCRAvSlz4KH7P7t9X/Bs
      nPnj21CRICy1OKDO8YQ+zgFtjrDURjIlvPw48h0EKW79MympxGJRrHqbunAp5NYZGhq6Zknk
      lcsJ7xTPNvE6NbzqIiJ3Fm/+dUjtQ04fQHn8t5Cj/Zuzsy5cM2x5tzJsdUmkeN8+YJ7noaga
      X//1XyefW2ZyZoFAOEIwmsBdWiQZi21Zro/Ukki7jWis3WHhjUZ/UJ3lCX2CA9ocIanN1bcr
      8CqLcE8VwGmysLxObypFULZQ+nddd0nknWRFxrPxitM482/grp5B2C1kI4YcG0DpOoT+6N+9
      LVt+OxfE3GxJpAgmCfytv9w8liLdGP4woXCYRDzOwYeuXBS/tfj0y3yUZoKF1bxt5zcst3hK
      OceT+jj7tfnrNPr3XaNZuPEfb8KWW4mkhnjs0Yfv6CJXIoQAx8TLj+OuncfNnUPUV5GTwyiD
      z6Ae/BpCj95VKMQHhbAamC/9s81j7cnfRhr5HO1WG9/7g/ne21Loo9Cgbxvhcbvj/v848h/R
      Jfumjf7qa9yZf3HPPcUrnVZ36V2cuWOI8hxy9uDG1/2Tv4scG7jq/DvJjHxf8By89Yubh6Jd
      warXeOvUaUb37qVpugR9DnIgQWNtGsvoZv9Q930U+P4g6WGQtdsKezDkrZ8LIAXvLNnZPVEA
      4Vo4Uy/jrp1DlBcQVgMpkEDpegj98d9ETnyUR0Ik/MEgS8urqEBJlpDMZYxoGEN5gO30e4nP
      QAokENXmPbuEHOm5o3L3pgew24hOA3Xvl5Cj/Uj+2D25zP1GUjSUoec2j+VID3IwxGNHHsE2
      m1SaNn7FRTbCNMt5oulb7/N1MxzXQ5Yk5Otto/IAI/l0fANPYY8t3pv6A0mUzOgdlb0nCiAZ
      UbTDv3Evqn6gkIwoga/879f8LgOSEaQn9IvHGw1tJbPc1ZmyHddjerGEZTtUmx1ePTXHb/7K
      EfozD86w71bxjXwOe+xb3G0M0PVQ+p4A7c5irHbm6u8hV+anEULguB5TyyXWyk1iIYOAriJJ
      G2G+08slJhaLGJqPvnQE03KYz1UYyEaJBg0UReK/+fonCfk/nHMJSt/jyNkDeGvnt7diWUV9
      5O9sfyzQDhs4rsfYzBrLdRlVkQn4NXqSITRVoVht4wlBNKhjaD4kScK0HC7M5Tl1aZVitU3H
      dpHljY2ZJQn6MhF2ZWNMlou0TBsBxEIGB3dn+LXPHKDVsVkp1NF8Ml3Jg4T8H40AOslnoD35
      25jf/yfbFgwH4NvzeZTuw3cu10dhl8j3s13zAEII/uKlMywtr7B/3wiO49E0bVYKNUzLJRX1
      oygy1YaJaTl4Avyaj9HBFIeHMnQlwxiab3MH89vhozQPcBnhuXRe+5fYp//s1idvASm+m8Cv
      /SFyuOvWJ9+Aj30PcL00euK93+dyFS7M5fl7nz/A7t27bqveK5Xwdhv/RxVJVtCf+Sd4lQXc
      udfvrjJ/Av8v/y931fjhI6IAjutRqLYo1dr4dZVUxEBxBWbHIV9pYjserhBcmF1nuVBHUxWE
      2FjSWGt2kCWJbDyI6wmapkWjbSFLEh3b5bf/+hFkt3W/b/Ejg6T68f/Kv8L8+f+Kc/47d2QO
      yck9GF/658jpOxv5uUqe+20CeUJgWS6m7dAybVzPw7RsLEdQb3ZomBaVukk4oLOrO0q9tXEs
      SdA0bVaLDeZyFVLRANl4kFbHZq3UQJIkdNVHOhZAVxU8ITi4K8NANorluEiApiqEAzqO61Gs
      tpBliaCh4dcUZFnGdj0k4X6gO8VvPpePoAl0JcJzsMd/gHX8m4ja0tYK+Qx8+7+M/sl/gBxM
      bYsc90wBPG9j1MNyXOoti3bHptrsUK63WcrXKNc37OZG20LzKRiagl9XkWUJzSfj11UiAZ2g
      XyMa1Km3LGZWy0SDOvGwHyEgYPjIxkP0ZyKovl/4DPcyOe6d1HEnfJgVQAjB8ePHGRwcpLe3
      96q/5fN50un05rHXrmBffAFn6qd46+Ngt7lqqFT2IcX68fV/AvWh30BO7d3WwL9tVwDXdam3
      bf71/3d8ozGrCmG/TsDwEQnoJCJ+upJhUlH/xp62hopPkW9Y352wowD3F8/z+MEPfkBvby/r
      6+uEw+HNNJeO4/Dcc89dU0Z4LqJVxKsuIVpFcC2kYBrJn0COD9yzvdW2rABCCKxOB1VT8YSE
      8NzN5Lee57GwsEBfXx+KotzVS3tQFSAQCBCLxVhYWKCrq4v19XVSqRSlUomBgYFrvkofdwVY
      XFxElmXOnTu3qQCXt6h94okn7reIm2x9iySrysTUKppj4yUSFOZnefbTnwY2NrBWFIXl5eXr
      5vz8KNDpdCiXy6ytrbG8vIyiKBiGcdO8QR9XZFne7DH7+/vvszQ35za8VRd/MIxdLiE5DVT/
      L6bjfT4fq6urt20mfFgQQpDP54lGo4RCIeLxOOvr66ytrX2gew4/6AghmJub20yRPzg4iKIo
      TE9Pk0wmabVauK5LJpPBMIwH4tndlglUKhaJRqM4rouQZfyatmEaWdamCXA7O7/fiMu7RN4p
      lxexbEd5y7LI5XK33bPdrQxb3ebn8jaxDwKe5/GjH/0ISZI2NyTXNG1zb+fLlkIoFOLhhx+m
      r6/vfot8GwtiJIlkamPo6XLGg8v2eqfTwX1veeB2KMDd1rHd5aPRKM3m7YXybocMcGsFkGWZ
      SCTyQCyJvLxnF7D50fA8j5WVFfbt28fc3BxHjhzh4sWLTE1NPRAKcNejQO/nbr/elx/i3dRx
      tzLcbfntqON2Nnp7kLi86bnneZuDAJe3v4INhb38jh+EvEnbrgA77PBhYltUsFWvkK+0kJwW
      pufD55mE4inyy0ske3fRlbr5gph2o7oxe+u06AgVXbJpdFyEZZLuGyKbvEXWL+ExOz5Jsj/L
      3NwqIb9Os9UkGIrQthwO7hu55T3kV5ZBNyjkVvEHDOqNDpFwkEqtzr4DhzB8t/gSey6zs9N4
      KDTqDaKxKLV6k0jYT9uC/XuHbilDtZRncblAIKjgoqN5LWLZARZmLtGzex/JyPakdNzhF2zL
      IHMgHN2YvfX7KZWK1OsNiqUcsWQflnnrOBp/KIqhygQCfsrlMolYlEw2QTLVR8fcgu0tySRi
      UWTNwCcsSuUqnuPS8eQtx8/HE0mQwDA0ag0TFZvltTIDvUla5hZSmUgSfn+AsN9HV28/hUqD
      vkyYpuMjaGztO6OqGslsGp/qR/dJJOIx2mabnp4eWi1zS3XscHtsiwI0qiVK5QooPgYHd9Hb
      00083oNjVUim0lsu70k+BgYHQfWTiqfodCokk1uI+RAexXqVWrmOZoTYt3eIQDhCVzyAvMXs
      z8XiOtVaE5/iY3DXLlR/iCMP7aFYsYgFbz3KIjyXaq0OWohGtcTo8ADllkRvwo+8xYxlzWaD
      Zr2BX/Oh+YMUSlVcV1Ct1kjfqhfc4Y7Y8QF2+Fjz4Ztn32GHbWRHAXb4WLPpnV05ibHDhwtJ
      kjYX3u9we1w1PFEqlbalUiE8ms02Ab9Gx/ZQFQlJ9mG2W+j+wFXhzzvcPfF4fHOT6O1SAqvd
      xJE1/JqPdquFqusosvyhjE69GVcpgG1vpKO729gSs1ln6sJ5XH8cz7YY6PZjeV20ytM4eoKD
      ez6aQXP3G7PVxHLB0NW7eofCc1lYXKBjuXT1DVBeX6JSbzOwew+ZxEdrNOoqBXj3nTfxaUGS
      ET+xVJaVtSJdyTD4/KQSW0/G5HRMtHgXimvRkVQCwSC19RayT0O+B4mRdtjg+Ouv0DV0kGph
      hWQsRiASpVAoo+kG8ZCGg0qlVMBp12n6knzqkX3XrUcIQX8mymzNRzSoUJNCqIaN1W4DH2EF
      6I/KWJkh3vj+9+jp62F6aZ3h4X6efeaZ26pU9QcIqG0yvQO0Ow4ds0kwpCB7UaLJ7LbewA5X
      IyHhtkq8Pj5FKhUnFIihKCpj67P0ZbvxFJ1qpUL/nhvnZ5VkGVkPkYmCaUt092WJmUECoQ9f
      RrpbsTkPIIRgbWUR4fNTya+iB0LUmyaxaJhgYGcK/kHmsg+wsjhH04J4NESjWkYNhNB8KhLg
      2CaWKxHw6wig1WqTTiXvt+j3nasUoFgs3m95drgDLitAu93eGQm6Ta5SANfdzk3MdviguLxF
      0la2U9rhanZCIXb4WPPRGtTdYYfbZEcBdvhYs6kAQghqlTKlUhnvOkaR8FwqlQqeEDTqNRzX
      o9loIITYnEC7HYTn0rFur5wQgo51890GN9KUiFukKxE0G3Wc69yoEB7WFXLdrB7XsbHdq+1u
      s9XEcm7uS91uKhXXtnHc+2Pfm6Z5WzM3W7m3K8/xXBv7Fs/rpghBrVa7ofN/K3mU3/u93/u9
      ywcrF9/g5xcr9MRVZhZW8ew2s3NzRJNpqvlVlmbOc+r8FLPLBeanzzM9dpalUgtL+Egnwqwv
      L7BebVNZX6TlyDRrVRr1BrVKifn5RSpL47wxWSTkc8ivzTOzWKddzeHIGsuzkwg1gGw3uDAx
      jaxqrC7MYToe01MzxOIxzp96h5MXpoiGQ9TrVZrVAsV6h8LKPBYaxdV5vv/iaxw5vJ+fvPgS
      IV0hX23TLOcoNWwqa4s0bAnNbfLNf/8nDA70sbCcIxLwcf7iFLF4mLF33+LszCphqcIPXznL
      7KXz2I6LX1c4f/ESuioxMzuPrAWozJzl5+fmSScTLM1MYHnwp//3vyfd08/i0gqq7LG8skbH
      bLBaqJKIR1mZn+KvfvgSXZkUrtXCtGwmJqZIpNO8/pPvUrT9eM2N+4r4ffzZn/45drXIhZUi
      0XCEpZkJ0IIEjGsX+rx99GWEL8DS8jyubGAoDu+eOMnZi1OUVmc5d+4ioVicH37vu+zad4DJ
      s6d5++QZdo+MoEgbm6H/0f/5TXr3PUx+cYpy0+bc6dNEwwbj04tk0imKayvMzsxh+A3m5+bo
      OIKpS5eIJpLMT43z01eOkYhH8DomtiwxeeEC/oCfixcniScTTF44x9HjJ9g71Muf/tlfYIgm
      b15cJmD4aVXWWa+2iUfDLM5cYn55jcLaKqFYlPFzY2jBGItTF2lbDs9/9ztkegZp5Sb4w2+/
      yr6BFHMreeIhnbNj54kmUsxMXuBnR9/koYP7mZ+eYL3SptOqMT87RziRZPL8uV8ogCRJGJiU
      STA3eYaoV+W1M/M8ebiPt87n2ZXxc3pihX3dfrSeQ9Rz80SCBrnVeVbXagzuG+H4sTd5eLSL
      ExfyLC9MsJZbJ5dbYXVlhZCoYWlRQpldjL35Mnv272HqzBjn5tcRToe11UUCkRSiMktJTjF+
      6nWm5wtUizlG93bznb94np6DT1AvLJEvVVlemGZ1vc7+3VF+9PIp7E6D1UINvyazd+8IlyYu
      cu7cOG3LoVUtYKOSW5gFPURfNkm56bK+skhCNXnh6BiP78/ynW//mMGDj9Bs1BkZSFIz/Tjt
      MkHa5Ooe67MXmVleJZjIMju/SNoPcryLM6/9kJnVJp4kEwj6qRbXGUjq/OS1t/Gnejn5xqu0
      2ha7h3s5dvwMwYBKLreK1ypz7K0zuFiooQxubZ2BkRFOnp2kvLrArv0HWFlaZiAVRglFOfH6
      z1gsmDiuw0DftbtNTl48i1mvo8STjJ+7xOjeEcprS1hSgPX1HI/tzTDfDBFwy2QH96G4DS5c
      muehQweQJYn8zBj5tqBQc1iePkcy28fc7DQ9mRTvHj1KdHiU6ZNvMrC7n6NH3+DkxQXcxjp7
      94/w0vd/SFNNoYkWi/PzSO0GJyYm2XPgYU4f/SnVaonTp88SGXiITnWN/QcOsrS0zL6BFDUl
      ycL4CU6fPM3S8goHHzrM6z8/ilkvEffDq0fHGDj8MCePv8LS3Aq9QyM0qhUePXIY1W3gBPqY
      v3SegF3m1VNTPPHoKD/81l/iRHfjs6rs3buXtdUlXj16nFatTF9C5dg7Z/B377+6BxBOBxM/
      Kb9gveFh0KLUsDhw8BDLE2NIoSjZ3kGWJs/SO3SAgd40gyN7qNbb7B0ZxKwVMQngNPJE0j3o
      2FiSSnc2QyIWJpoZYHV5me6uNLsHeug4OoZiMzA0jC6DLRRCcouTE8vs37+PdDrLnv4049PL
      HDpymNzKEvFECtdsoIVjpMM6thJCdk0Gh/dgNcpIapChXf00miaxkJ90Tx+xoJ9q0ySdiNLs
      OPR1ZWi0O2TjQdZrNg+PDjG7uM6hwwfJrawQT6bp7cqysDBPPJUkHY9iWg6qqhFNpMhksvgU
      mWQsyOz8EiOjD23IMDSMT4b+bIq51Rq7dvWxa2gPPrdNPN1NNpultLaMLWn0pSIU6ybDw7tx
      JZXdA/0ENMiVOxiihS+UYLC3m2oxh6wHiaXSGP4QquSye2iEWCR4jQKsLMyi60HCmQyNSoNs
      RPDCyyfZf2Avst1kfrXC0O5exk6dRA9GqVUrdEwTYdv4Y0kujo3RP7Kf/PIsw4P9XJyaR/fJ
      lPI5ZBS6RvZSWZxiJV8hk82QyO5iMO3n0uwCya5eimurOK4gYsgUSw26B/vILa0SiYSQ/XH2
      DXYxt7CC8Dz27R1hZvI8umEgAmncZoWgX2PkwEN0Z9IsLy3hN3SSsSCOGqaQWyIcjpNNxZhZ
      XEWngxHLEJAtcnUJza1SrHXYPdDN4uIiiUwv+bU1hPDYPzrCKz97BVUPEI2G6U1HaBIgv5a7
      +TDo0vw8XYODH+gmAs3yGi0lQnpnAfgHRi6XI5vt2tKm1ONjpxkcPYxf/WiMn+zMA+zwseYq
      E+j0qVPEYlFabZOO2UGSoNFsoqo+2u02APVGC0kCRZawLIdGo45Pkak3GjiOg4dEp91EIGOZ
      bUzbYez0SaLxFKpPoV6rIkuCv/r2t+gbGkVYbUzLhvdGkxyrgyskPMfixZ+9wkBfHwgPF2jU
      asyMn8MzQkyNTxCPx3Fdh3NjYywtLRKORJBkH45joygKjVoNWYbnv/1tsgMj+HBod2ymLpxB
      qDpvvn2STCYNrkPbchCei+04+JQNORWfj3q9gU+RcIXAti3MdgvHE5w6+S6xRALbtpk4e45o
      JkWz0UJVJGr1Frqub+mLusP95SrrZnlllbmZaWzh0RWQKFoBeoZ7qS/McT7XYXcmRFfUx+xa
      i4HeJLNLBdqNIplEHDmRwSpbaGqbual5MruGcds1ZNXAa9fYvWc/5fmzTFd9mPUyTUtgqBLf
      /+4P0GSVluwx1N9PbqUECsiuRbFp8tLLLzHaE+b0XJPBPUOsT00hpwdYWVpifX1tY/tRx6Ze
      K9PTleSNiUVUVePQYISxxQau2aDRcvDrMi/99EXwXNqtFg8lulhfX+PHP3kRp5an5gVIBDxG
      H/4kUSrM1TXsygqhkM7KUp7dhx9jfvIUlufHJ0OjUiBleLw6WSHrc5nPzbC6XGSgrw/XiPKF
      zz6N+gErgGma9y2TnOu6yLKM67rvbZBydWY813U3ZbsyjabP50OWZTzP21yVeLshHe9PQ6mq
      6pafw1UKoOv6xr+AxmAQCjNVSoUy6USSQ9luYs4q5WqVxz/1Cb7/3R/xpWcOsVjvoUsz8bID
      NH11LHudbHcPDz90gLnZWfBcAokg9bZJKBimvZwjFk+hKD50VcbqtPGFQ0SCOo8dOcyPcy8j
      6yEwLSRJIepXmV5aIxrroVGr0TfQT7PeQDf8BH0WbriXdnmNRG83HTmEuT7Dvi98Hd1dp9PK
      EY0n6JV8+DUVv+6j0ZbYvbufRqNFOtMNTgtXhdFd+yjkljg0Okx+cYL2apFIwE+90SKdTbM4
      O41PNUgk+zBrRcJqko4rceSRx2jPncPVAyQzQ3Snwhw/9iZjZ4OMHjxC4APMWytJErr+wW6r
      KoSg3W5jmibhcBhd169Jb+l5Hp7noWkapmliWdZmo9V1HU3TNjZWqdevUpT3W+c3+v3ytS7X
      KUkSodDWNs6+qQ8wfe4UqX2PEL1nL1Fw8tQZHn3kyLbU5rkW75w4y5NPPs7H0frodDofuAJY
      lkWj0dhs+P7/v73zjJEkPe/7r3LoOKknp013e8vdO5LHKJJiEEkrkJJtkqYDJFswbEiAZAm2
      PgiGTRokZNmWYAOCBdiyLOmDvwi2AcOCTzRFixQp6Xg87gXtpU23uzOzk7unu6u6cpU/9FRt
      92zP7oTeyPl/mdDdb79V9T7v+4T/8zyGQavVIpfLZeXQVVUlDMOsaYgoigiCQBRFXWXSHcfJ
      KkinJwLcvsPvbEDeCUVRME1zz3VHj4zgxwgPQgDiOCYMQzzPIwgCFEXJ1CFFUfA8D1mWkSSJ
      MGxX2FNVFd/3kSQJwzC6dvZ0sSfbEd6dDOWdqk0cx9n705/FYnHPatCDL897hEcaaX+CVPXw
      fR9VVZFlGUVRMjWo1WplApH2k4iiCMMwusZKF60gCBiGQbPZ7LmQd1bPTn+mdshec6L7LgD9
      KC3eaDSQJIlc7vZgz/2eSz/KtfdrLv0cpx+I4zh7VoqiYBgGuq4jy3K2QNMTwTRNAHRd7+oB
      d6ddWlXV7Frv1G+h8zVBEJBl+WBGcD/QD43KcRwURXmoBOCweBwFANoenTAMCYKAXC6XGbS2
      bZPP52k2m0iSRBAEJEmCaZq4rpt5ftKOMbstWEVR8HsQIDv1/86TQ5blffUd2HuTvO1WSKqq
      0Gq56JqCH7YbSauaRoKIJP4gmp4/uEhZwOlubts2nudlizOKom03dZjp+47jIAhC9r8oigiC
      AFW9ndwnCEJmMKfYudun/0tP6Xb8Ze/rcO+ikoRcffsGIyWD2tYWjmggJyFxqwb6MHPzM+T0
      W21TD4OD+oN7jXOv55I+6CCMiMKQcPuBuq6P5/vt4F4Y4nltvTcIg3YT8W2DsN1Q/Pby60EQ
      Qo+T58knTjA/2915sXMHvBvShXcndSId824QtwtlaZqW0Y7TDjFJkmSdNFNBSeMD6Xek98C2
      7V1Vl87T904n8UEr4+1DBRKRxQTXD1EVGTtsS/7EzBw3lje4sbDAkyd2L7WxHzxox1QUtfue
      Oa5LvdFkY7NKbatOs2mzVW/QaDRxPY+W4xBFMbIkoShy5u3QNBV927+tKgqyLCFJ0rau3HYD
      ytu7piiKSPLtzfTyObPnItR67JT7wW73NknaORSu62Z6vHiHSnBpEKtYLGaGZxRFXQs8CAI0
      TUOWZRqNRrbTpxXs0t08jmOazSamad62gxuGkeWc3E0oU/Vr5zzvZMPt4wRIKJZKFEolPNdj
      0tRw/BhDUzlTHsTx4ywYcVgdNT327qXhGUURdsthbX2D5ZU1lldWWby5gmXZOI6LrmsYhk6h
      kGewXGZwoMz87DSlUpFiIY+ua+iahqape9otD9s4u3Ocw9yX3bwjqfoCbRssdWWmgpAu5CiK
      sqaIqZcn9fh0Lj5BEGi1Wpmun3qITLMt2J7ndXXihLanKDWoO6+316LuvOedEeZOr1L62p2e
      z967REoyo6PtolamrgNQ6NiM8g+pQ7UdqXRZWV3n7RsLXL+xyMrqOpZlY+ZMhgbKTE2OMz87
      w4c/+D6KhTymecs3ne5oh2l5+jBhpwqURnI7M6c6fepBEBDHMY7jZOpM+nqq2qSu0DSAlY6f
      3jPHcVBVNbMPFEUhjmNM08zUy90qkqSeoGaz2XV6pULVqW7lcrl9P6eHdNkeHGEUsbFR5eLl
      q7x16So3FpeIo5ix0QrH5mf4ofc/S2VkmFKx8FB5U+4XXLfdaimXy+3LWEydILu9lgbBUpUl
      jeimen760/f9zJ5KT4f0OYRhSKvVwjTNrlOg1Wq32eql58uynEWTD8KDeuQFIE4SNjerXHj9
      LS68/hYraxuUigVOnZjnQx94lumpnySfMx/0NB8qeJ5HkiRomoaiKJn6ku7unbr5bujk8iiK
      knF80iBXqubsdFemwpKquenJ4boukiRl1Ip8Pp8JQepN6hwjVZE7d/2dc9/pQeqFXQUgjgLW
      qw0qI0MPHa8mSRJW1zd4/oXzvPzq60iSyDPnzvDZH/8UE+OjKB39aR+GXrQPE9LF3qmDN5vN
      rtOw082YLqZe3iFRFFFVtUvt0DQt09sFQUDXdTzPy8ZIVSPDMLrcoGEYZlyizrml7w/DsOu7
      NU1D1/WueQdB0K6OF8fE25SIOz3/JEl6C4DTqPHWaxe4sLDFF77wGQ7nd+gfLLvFCy++xLe+
      811kWeKHP/R+/tk/+cdHO/w+kNIUPM/LDMb0Z6oe7XQ97uaKjOM4U086VZydNOjUO5N6cgRB
      wLZtRFEkCILM4A7DENd1M89SCl3Xse1b3UJlWe6pwqVu1nhxCXlm+q67v+/7vQUgsBtcXbN4
      9zNPPvDCQUmSsLFZ5bmvf5OLl67y3mef4Rd/7mcZGrxz7+Ej9Ea6o5qm2V4A2x6cdPF3Gsd7
      8a0HQTv5SFXV7Pd0nFRNSSO/giBQKpUyVQtu6fC+72e7fCdVAm7x+zvpFb0WtyiKFItFwlMm
      qnpn75znebRard5s0ChweHtxnePzM/tWf6Iool6vY9t2dnHlcpkrV64wNDSE7/vk8/k70hxW
      V1fbnoIE/sf/eo6FpZt89kc/ybueece+VJp+qED98gL10w262zgHZYM2Go1sB9+J1EuT3oPd
      XJCCILQX37Yhu/PUSF+XO9TTNPYQhmFmS4Rh2MUBStFqtTIhvZtqczcEQUCj0QB2sQFEWWdk
      sHRg3X9tbQ3bthkYGMC2bVRVRdM0Xn/99Szp5syZM7t6YULf57mv/SmXry/w2R/9JP/wZ774
      2LghHzZ0emHSRZv+ne7aQRBkevlu/chEUcRxnC5PUZIkWS5AGiRMkS7gVAVKU251Xe956hiG
      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
      +qgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GroupTop5' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rank各国各item' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='area food pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bar' width='192'>
      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
      +yfu5/8DYVSpOT9wcocAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='cntnt feed pie' width='192'>
      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
      SluD7HdrgoFKpcKvfvUrGhoauHTpEq+++irZbJbp6Wk6Ojpoamrizp07BAIB7HY7qqrqI8+W
      l5d5++23nzg2fWtYrizLVCoVbDabPtGApmnbqwQrisLGxgadnZ3cu3ePvr4+fXByoVAgGAzq
      I5bq6p48SupFCAQCaJpGKpUin88TDodRVZXe3l7K5TIzMzOoqroZAJMFBr4FN38EhfVtrd9K
      hZbaAgvyo608X26v2/WDH6Cnp4disUh7ezu1Wo3f/OY3vPXWW+RyORoaGqhWq5w6dQqn04nN
      ZsPlctHc3EwgEKBUKu3oBOZ0Ovd8Jo2tcSTNzc2oqkoymSSZTHLixAlaWlqIx+O89NJLeDwe
      YrEYPT09lEolqtUqLS0tTx21WK1W9SlpNE3j9OnTnD9/nlqttrkvtnMFKBaLTE1N6SO+Xnnl
      FX7961/j8/n0iZ2mpqbw+/2cPHlyX4xW+kwqOZj4KaS2dyWYt3Tzvv1N/TbIYoKvtHvoDnxa
      CVNVlbNnz+oj0hRFweVy0dnZue/219a44HK5TDweZ3BwEK/Xy5UrVwiFQpjNZlZXV2lubmZw
      cHBfD82sVCqMjo6iqiqxWIwzZ86QyWT0Ccu21R16axKnrfu0hoYGFhYWMJlMLC8v093dTX19
      Pffu3aOtrQ2HY383oT2T2QqNwyCZIbsCmvLUxV1qjrvWQ6iShUa3zMmuelrrbQ+dabcGj5jN
      Zn2u0nQ6TSKReGwr23YtLy/z4YcfEg6HmZiYYHZ2lmg0SiqVYnR0FLPZrM/isBP5fJ5kMkk2
      m6W+vl6/smxsbJDNZvF4PCwvL1Mul3d9cP7Y2BjpdJpAIMDIyIjeIJPNZikUCmiatu1jbGsS
      5aGhIex2Oz6fD0VR6O/v35yv6fdlYqw9U85CZBTWJ6GY4LEP1s02Jhq/gTfcS4vX+tiDTVVV
      fWqQrXtol8ul38o8r2Qyyfnz53n11VepVCpcvXoVm82mP++oVCocPHjwmRMWPEjTNK5du4bH
      42FtbY2Ojg4KhYI+GH99fZ3u7m5yuRzVapXu7u7nLv/jnD17FrfbTV9fHxcvXqShoYHV1VVa
      W1uJxWKEQiGOHTu2uxNj/T57cDa17TQbKory6G2JpkF+DYrxzVCoNbC6wFYHdS1geTFNgvl8
      nhs3bjA0NEQmkyGbzWK1WlFVVR9G+lBL1xfA+++/j9PppKOjg1u3biHLMvl8nmPHjhGNRllb
      W+PUqVMiANs1NjaG2Wymvr4eWZb1AfexWIzl5WUGBgb0+TnD4TCJREKfnWxjY2PHg/wflMlk
      WFhYwOFwMDs7y5tvvsnNmzfp7+9nYWFBb9EIhUKfeS4cYef29d8H2C11dXWsrq4yPj6Oz+fD
      4/Fw/fp1bDYbPT09lMtlLl26xJEjR1heXkZRFK5fv05PTw+1Wo3BwcHnPtt4PB5MJhPd3d36
      LBbhcFhvxnS5XPof7Dhz5sxjp/ET9o4hrgBbM5mVSiUqlQrnzp3j1KlTlEolfSq/ra4dJpOJ
      uro6lpeX8Xq9FItFOjo6nvuzt+7Rv/KVr+B0OpEkifHxcSwWC5VKhXA4jM1mY3p6mtdee+1z
      n7zX6AwRAEF4EkPcAm2p1WpcvHhR/0MVJ0+eJBKJMDs7i9/vx+PxMD8/z8DAAD09PV+oJ97C
      8zFUAEwmE36/X+8fo6qqPtvc+Pi4PjPx5OQkZrOZrq6uF11kYY8ZKgCVSoX19XVkWcbpdFIu
      l6nVavrZfmsWuvX1derr6190cYXPgagDCIa2fwd9CsLnQARAMDQRAMHQRAAEQxMBEAxNBEAw
      NBEAwdBEAARDEwEQDE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEA
      wdBEAARDEwEQDE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBE
      AARDEwEQDE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARD
      EwEQDE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARDEwEQ
      DE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARDEwEQDE0E
      QDC0/w91rLHLxKeXggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='feed pie' width='164'>
      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
      gg==
    </thumbnail>
    <thumbnail height='184' name='food&lt;feed pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='foodfeed' width='192'>
      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
      u65PlwMlbAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='gif area' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif feed pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gif food pie' width='192'>
      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
      PiLWqdgDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='gif pie' width='164'>
      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
      C3R0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='global feed pie cmpr' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANlUlEQVR4nO3dfXAU933H8c/e3u7enXRCz0joJBEF8xAcD7XxGLA9bmzS0EmmtdvJgwON
      E9Kpp/Y07sNfTeqJJ5120sZ13YlxzNSdTN3guPkjrU3rpK3TFtNg0lBwUKzED5JBgCR0ku5O
      uofd24df/xA6IwkCkk46Sd/Pa4YBxGnvJ7Hv3f3t7a00pZQCkVChSg+AqJIYAInGAObg7e5T
      GMuM48fHX8PwyCh+dPx/cfHiEHreebfSQ6N5YgBzELd0jKUzmHDyOPz8CxjN2TCq65AaGar0
      0GieGMAcDA4PIzWeR51lYcc9dyOqFXGh/yySyRRcP6j08GgeNDWp0uMgqojw1B+y2Wwlx0FU
      ERo3/yQZ5wAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASLRwpQewEjmOg9OnT6O6uhrxeLz0u67rlR4azZGmlFKVHsRy
      ppRCEPhwAxeu78L3ixh4tw97PvkF1KzbBL9oI6wc1FjADR1rsfO2W3D3hz6Erq4uBrEMZbNZ
      xGKx0u8M4AqUUlCeAzefQuD7mCjayOoKuq5DC3wke3vx2S8+h67bfm3a53mug4nkOaTP/xwt
      ERv3ffQe7Nu3D/F4vEJfCc2Uy+Xgui6UUrAsi4dAl1MqgG9PoDg+jMDJAgA0IwZD0xEEAXRd
      h4I29ehZnx82LNSt24C6dRsQ+B4OHXsHf/vC/fjNX9mFRx75Aqqrq5fwq6ErMQwDQRDAMAwA
      nAQDmNziu0UbhYtvw072lVZ+AFCBB1PTgKkdpXYpgGvsN0N6GA3tm5HYtRfff9PD3R/9OA4f
      PgzucCvLNE3E43FEIhFEIhEGEAQKmZyN5LgN1y1e4QEuACCstNLKO5dVWNM01Cc2Yu2OvXj0
      6RfxyO//IfL5fBlGTnOhlEKhUEAQBLBtGwDguq7sAFzfx8h4DjnHhdJCsM2G2Su3UoAKYE79
      XdPe2wvMQUgPo/OXduMn40349Y/vxeDg4AJHT3MVBAEAwPd9AJNn88QGUPQ8jI7n4fpB6WOe
      XgVPj81+cODC0kKlb6CaRwBTalu7oHV9GPd9+vM4c+bMvJdDc2fbNmzbRqFQgOM4UErJDKDo
      ehgdL8APZmzvNe3SXmD6Cq58D4YWeu/4fQEBAEA0Xo+6bb+B+z/3EAYGBha0LLo+mqahoaEB
      sVgMjY2NsCwL8XhcXgCe72MsW0BwlcloEDLhGLXTP6h86FAIXdpZzAxkPsxoNeI3fgyf+e2H
      UCgUFrw8mh9RAQRKYWziClv+GRyjFr424wxx4MHApdcIFrgHmBKN16PYvB1f/NKjPDtUISs+
      gFQqhWKxiFQqBdu2MTExAc/zZq1QSimM5+1px/xXpYVgm43TJsTK92BObfnLFAAA1K3bgFe6
      h/Hyyy+XbZl0/VZ8AOFwGNlsFrquw3Ec+L6PTCYz63Gu5yNnu9e9XE+PTZ8QBx5MlHcPMGX9
      LR/Bnz5+ALlcrqzLpWtb8QFEo1FUVVUhGo0iGo0iFovNuvRAKYVM3pnbgmdNiBXCSgGBAsow
      B7hcKKTDaL8NBw8eLOty6dpWfADhcBiWZcEwDJimWfqlXbaVdlwPRc+f87JnTYgDF2G1sNOg
      V1Of2ITnvvsffJFsia3YAIIgQCaTgeu6pUOefD6PdDqNTCZTOs+rlELWvsIrvNdpckJsXHrS
      SxNhTSv3TgAAEGu/GYcOPV/+BdNVrdgANE2DYRiwbRvFYhFKKUQiEZimCaUU8vk8HMeBFwRw
      3Llv/d97ohBss35yQqwCGEGAybW//AU0dn4A3z38PZ4RWkIrNgDf9+E4DgzDgGVZ8DwPnuch
      EokgFovBsiwAQMHxFvxcl79CbCh/0VZQLaTjbCbEF8eW0IoNIBwOo66uDpFIBDU1NaU5QCgU
      gmmapQgcd+EBXD4hDgU+9EXcQNd3bMUrr/xg8Z6AplmxAVwPpRRcfwGHP5cpTYgDD8YiHqLU
      tnThf469tmjLp+lWdQCeH6Cc6+rUhDhcpqiuRDdMvHVmiPOAJbK6Awiu41Xfubh0ybQRlOGw
      6he4mC4wgCWyugPwy78SeXoMnmahrLuWGQI9gtHR0UVbPr1nVQewKFtRTYNt1pX1eqCZdDOC
      bDZ77QfSgq3uAOb05sXrMzhwAU888SSida1lX/YUPWzCceZ46QbNy6q+K4RWxheret74KQ4c
      eAbDfh1qEjvQmqgp27Jn8l0bsdgV3plGZbeqAwiFFh5AOpXC0099HUdO9iFx8x40xRZvxZ/i
      OQXU1tZe+4G0YKs6gHBo/kd4brGIf/z2IXznpf9E/P270HX7LdMusFtMEd3nzbSWyOoOQJ97
      AEop/Oi1Y3jy69+AE78BbTs+CW0BIc1HW9Pi72Vo0qoOQNdDCGnaVd//O9OF8+fw+Ncex1tJ
      hbYP3oewFV3kEc7m5Mex9f2JJdvbSLeqAwhpGoxw6JpXg2azWTx78Bl87+hP0HrTh9HZ0bhE
      I5xt7NzPcdcDv1yx55dmVZ8GBYCoaVz13zzPw/f/9V9w/97P4fh5HV13fAqxNZVb+QFgYvAt
      3HHHHRUdgySreg8AABEzDC03/XaGSin8tPs0nvjrv8FYqBVtt/8WQnrlvxW+6+DWza2oq6ur
      9FDEqPz/+iLTQyFELQN5Z/IN8cMXh/D0Uwdw7I0BdNy8B23R5XPH5gs9x/C7D93L4/8ltOoD
      AICqiImx9Di+88Lz+PY/v4Kmrfdgw+07Kz2saYLAR9wdwJ49eyo9FFFEBDA2ksS+fZ8BWrZj
      /Z37luUWdqDnGP74wc/yp8osMREBNDU1oaW5CXZr17Jc+YuFLNqMUdx3772VHoo4Yn5EUnd3
      Nz798KN43+2fgKYtn5NfSim8/d/fwj9986+QTCbR2NiIeDyOhoYG2LaNXC6HNWvWIJfLYWho
      CM3NzWhsbMSJEyfg+z62b9+Ol156CZs2bUJ1dTUMw0BTU1PpTsgXL15Ea+vkxFophe7ubgwN
      DeHOO++E67qlMfT396O9vR3xeFzUdUj6Y4899lilB7EU1q5dC9PP4r9++GPUNHdUejglF3p+
      iD/Yuxu7d+/G4OAg1q9fj0OHDiGdTsOyLLz44osYHx/H8ePH0dLSgu7ubtTW1iKVSmFsbAyb
      N2/G+Pg40uk0qqqqcOTIEfT29iIWi+HcuXPwPA+pVAqDg4MoFovI5/MYHh5GPp9Hf38/kskk
      Lly4AF3X0dvbC13X0dhY2VPBS0nEIdCU/fv34/XTf4RTZ3vQ2PmBSg8HI/092NkZxgMPPABN
      09DW1oZkMomdO3eio6MDra2tSKVSaG5uRiKRQGdnZ+lmAIVCoXS6VNM03HrrrTh//jxuuukm
      NDc3o729Ha+//joSiQQsy8KpU6fQ1dWFQqGALVu2IJPJlN5zUF9fj+HhYaxZs0bUyg8IOgSa
      Yts2Pv/gwzivb0Bty/sqNo7UwDtocd7Et/7+72Ca5rU/gRaFuACAyTvIPfjQ76HPXYfGzq1L
      /vzJd7txQzSJbzz15IKOt8+ePYvh4WFYloVIJIINGzbg1VdfRUNDA3K5HBKJBBKJRBlHvvos
      n9ngEorFYnj24NPY2ebizP/9G1S53zx/FSoIcObkv2NnwsWzBw8seLLZ19eHdDqNvr4+jIyM
      oFgsYmBgAOl0GqOjozh58iQmJibKNPrVSWQAAGBZFv7yq3+OR3/nY3j36D8gnxlZ1OfLZ0bQ
      9+pz+NL+X8XX/uKrpZ9TuxAbN25EOBzGxo0bYZomCoUCOjs7kUgksG3bNtTW1i7L077LichD
      oJn6+/vx5a/8GU6cySPxwbtglvHyiKKdw4XuI7i5I4KvfPlP0NGxfM5AEQMoUUrh6NGjePKp
      Z/DWiELLph2I1TbPawuqlEI+fRHDb5/A1lYTDz+4H7t27UJoid9YQ9fGAGZQSqGnpweHnn8B
      Pzh2ClmtBg3tW1BV3wojUnXFIJRScO0csmODGDv3M1Srcdy9cxvu/9QncOONN3LFX8YYwC/g
      OA56e3tx9OhRvPGzN9HXP4hU1oanQvB8BV1TsAwdDTURtLc2YeuWTbjrrrvQ1dVVujs1LW8M
      YI6CICjdil3X9Vk/jYZWFgZAovHglERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgET7f5hdz9JFj1A5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='global food pie cmpr' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='global ntr pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map点' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='rank点' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
